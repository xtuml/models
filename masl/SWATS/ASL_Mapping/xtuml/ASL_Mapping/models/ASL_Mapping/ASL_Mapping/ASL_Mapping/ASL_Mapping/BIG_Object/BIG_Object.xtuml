// BP 7.1.6 content: ModelClass syschar: 3 persistence-version: 7.1.6

within ASL_Mapping::ASL_Mapping::ASL_Mapping::ASL_Mapping is

	//!  This object shall contain 80+  attributes, just to see what happens.
	//!  This as a result of DEFECT 718.
	@key_letters("objBIG");
	@class_num(12);
	class BIG_Object is

		One: integer;

		Two: integer;

		Three: integer;

		Four: integer;

		Five: integer;

		Six: integer;

		Seven: integer;

		Eight: integer;

		Nine: integer;

		Ten: integer;

		Eleven: integer;

		Twelve: integer;

		Thirteen: integer;

		Fourteen: integer;

		Fifteen: integer;

		Sixteen: integer;

		Eighteen: integer;

		Nineteen: integer;

		Twenty: integer;

		Twentyone: integer;

		Twentytwo: integer;

		Twentythree: integer;

		Twentyfour: integer;

		Twentyfive: integer;

		Twentysix: integer;

		Twentyseven: integer;

		Twentyeight: integer;

		Twentynine: integer;

		Thirty: integer;

		Thirtyone: integer;

		Thirtytwo: integer;

		Thirtythree: integer;

		Thirtyfour: integer;

		Thirtyfive: integer;

		Thirtysix: integer;

		Thirtyseven: integer;

		Thirtyeight: integer;

		Thirtynine: integer;

		Forty: integer;

		Fortyone: integer;

		Fortytwo: integer;

		Fortythree: integer;

		Fortyfour: integer;

		Fortyfive: integer;

		Fortysix: integer;

		Fortyseven: integer;

		Fortyeight: integer;

		Fortynine: integer;

		Fifty: integer;

		Fiftyone: integer;

		Fiftytwo: integer;

		Fiftythree: integer;

		Fiftyfour: integer;

		Fiftyfive: integer;

		Fiftysix: integer;

		Fiftyseven: integer;

		Fiftyeight: integer;

		Fiftynine: integer;

		Sixty: integer;

		Sixtyone: integer;

		Sixtytwo: integer;

		Sixtythree: integer;

		Sixtyfour: integer;

		Sixtyfive: integer;

		Sixtysix: integer;

		Sixtyseven: integer;

		Sixtyeight: integer;

		Sixtynine: integer;

		Seventy: integer;

		Seventyone: integer;

		Seventytwo: integer;

		Seventythree: integer;

		Seventyfour: integer;

		Seventyfive: integer;

		Seventysix: integer;

		Seventyseven: integer;

		Seventyeight: integer;

		Seventynine: integer;

		Eighty: integer;

		Eightyone: integer;

		Eightytwo: integer;

		Eightythree: integer;

		Eightyfour: integer;

		@dialect("asl");
		@operation_num(1);
		class operation Receive_Unfeasonableness(A_Big_Object: in instance of BIG_Object, Current_Test: in integer, Expected_Attribute: in integer) is
			@noparse
			[] = RPT1:Start_Test [Current_Test, "1103-0000-01-0522", "ASL_Mapping","Big Object", "Receive big IH"]
			
			if A_Big_Object != UNDEFINED then
			
			   if A_Big_Object.One = Expected_Attribute and \
			      A_Big_Object.Forty = Expected_Attribute and  \
			      A_Big_Object.Eightyfour = Expected_Attribute then
			
			      [] = RPT2:Test_Passed ["Valid big IH", Current_Test, Expected_Attribute]
			   else
			       [] = RPT3:Test_Failed["Mismatching big attributes", Current_Test, A_Big_Object.One]
			   endif
			
			else
			   [] = RPT3:Test_Failed["Invalid big IH", Current_Test, -1]
			endif
			@endnoparse
		end operation;

	end class;

end;
