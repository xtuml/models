public service Colouring::test() is 
  rainbow : RainbowColour;
  primary : PrimaryColour;
  name    : string;
  shape   : Shapes::Shape;
  quad    : Shapes::Quadrilateral;
begin

  rainbow := Colouring::RainbowColour.indigo; // Explicit domain and type scope. No ambiguity.
  rainbow := RainbowColour.indigo;            // Explicit Type scope. No ambiguity.
  rainbow := Colouring::indigo;               // Explicit domain scope. No ambiguity.
  rainbow := indigo;                          // No scope, No ambiguity.

  rainbow := Colouring::RainbowColour.red;    // Explicit domain and type scope. No ambiguity.
  rainbow := RainbowColour.red;               // Explicit Type scope. No ambiguity.
  rainbow := Colouring::red;                  // Explicit domain scope. Ambiguity resolved by examining the assigned to type.
  rainbow := red;                             // No scope. Ambiguity resolved by examining the assigned to type.

  primary := Colouring::PrimaryColour.red;    // Explicit domain and type scope. No ambiguity.
  primary := PrimaryColour.red;               // Explicit Type scope. No ambiguity.
  primary := Colouring::red;                  // Explicit domain scope. Ambiguity resolved by examining the assigned to type.
  primary := red;                             // No scope. Ambiguity resolved by examining the assigned to type.

  name := Colouring::RainbowColour.indigo'image; // Explicit domain and type scope. No ambiguity.
  name := RainbowColour.indigo'image;            // Explicit Type scope. No ambiguity.
  name := Colouring::indigo'image;               // Explicit domain scope. No ambiguity.
  name := indigo'image;                          // No scope, No ambiguity.

  name := Colouring::PrimaryColour.red'image;    // Explicit domain and type scope. No ambiguity.
  name := PrimaryColour.red'image;               // Explicit Type scope. No ambiguity.

  // The lines commented out below would raise a semantic error, as the ambiguity cannot be resolved.
  // name := Colouring::red'image;              // Explicit domain scope. ERROR - Ambiguous enumerator name.
  // name := red'image;                         // No scope. ERROR - Ambiguous enumerator name.

  shape := Shapes::Shape.circle;                // Explicit domain and type scope. No ambiguity.
  shape := Shapes::circle;                      // Explicit domain scope. No ambiguity.

  shape := Shapes::Shape.square;                // Explicit domain and type scope. No ambiguity.
  shape := Shapes::square;                      // Explicit domain scope. Ambiguity resolved by examining the assigned to type.

  quad  := Shapes::Quadrilateral.square;        // Explicit domain and type scope. No ambiguity.
  quad  := Shapes::square;                      // Explicit domain scope. Ambiguity resolved by examining the assigned to type.

end service;
