-- BP 7.1.6 content: Package syschar: 3 persistence-version: 7.1.6

INSERT INTO EP_PKG
	VALUES ("6a1cb0e0-f1ce-46a0-9380-90aa36b7377a",
	"00000000-0000-0000-0000-000000000000",
	"658541c5-0d63-4591-a49a-88998399991c",
	'Functions',
	'',
	0);
INSERT INTO GD_MD
	VALUES ("615ad318-5c02-4d8d-b4b5-00295525e718",
	112,
	"6a1cb0e0-f1ce-46a0-9380-90aa36b7377a",
	108,
	0,
	0,
	1,
	1,
	1,
	12,
	1,
	0,
	0,
	0,
	0,
	0,
	'4.1.17',
	'SharedClasses::Components::Server::Functions');
INSERT INTO DIM_DIA
	VALUES ("615ad318-5c02-4d8d-b4b5-00295525e718",
	'',
	1.000000,
	0.000000,
	0.000000,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO S_SYNC
	VALUES ("527fdb0a-75da-46af-900f-6eba07e28489",
	"00000000-0000-0000-0000-000000000000",
	'Populate',
	'',
	'create object instance dept of Department;
dept.Title = "Sales";
LOG::LogInfo( message:"Server: Populating department: " + dept.Title );
create object instance e of EmployeePay;
e.Name = "Tom";
e.Amount = 1000;
relate e to dept across R100;
create object instance e of EmployeePay;
e.Name = "Dick";
e.Amount = 2000;
relate e to dept across R100;
create object instance e of EmployeePay;
e.Name = "Harry";
e.Amount = 3000;
relate e to dept across R100;

// testing Interface Operation inst_ref_set parameter. 
// Note: commented out where synchronous opoerations not supported
/*
create object instance dummy of Department;
dummy.Title = "Dummy";
select many depts from instances of Department;
LOG::LogInfo( message:"Server: I/F op with param inst_ref_set" );
Clnt::AllDepartments( depts:depts );
delete object instance dummy;
*/
',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'',
	0,
	1);
INSERT INTO PE_PE
	VALUES ("527fdb0a-75da-46af-900f-6eba07e28489",
	1,
	"6a1cb0e0-f1ce-46a0-9380-90aa36b7377a",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO S_SYNC
	VALUES ("bf581e73-3445-4c48-a3d0-004e33a3f561",
	"00000000-0000-0000-0000-000000000000",
	'ServiceRequest',
	'',
	'select any dept from instances of Department;
// invoke synchronous Interface operation with inst_ref parameter.
// Note: uncomment the following if environment supports sync messaging
//LOG::LogInfo( message:"Server: invoke I/F op with param inst_ref; boolean return" );
//ack = Clnt::LoggedOn( dept:dept );
ack = true; // allow test to proceed when sync messaging unsupported

if ( ack )
  select any ipr from instances of InProgressReview;
  select many payments from instances of EmployeePay;
  for each payment in payments
  	// exercise state machine for instance of shared class.
  	LOG::LogInfo( message:"Server: generate ''hold'' for payment: " + payment.Name );
  	generate EmployeePay1:Hold() to payment;
  	ipr.count = ipr.count + 1; // keep track of how many payments are under review.
  end for;
  // invoke Signal with inst_ref_set parameter.
  LOG::LogInfo( message:"Server sending inst_ref_set of payments" );
  send Clnt::DeptPayroll( payments:payments ); 
end if;

// signal with department as inst_ref parameter
send Clnt::VerifyLogin( dept:dept );

',
	"ba5eda7a-def5-0000-0000-000000000000",
	1,
	'',
	0,
	2);
INSERT INTO PE_PE
	VALUES ("bf581e73-3445-4c48-a3d0-004e33a3f561",
	1,
	"6a1cb0e0-f1ce-46a0-9380-90aa36b7377a",
	"00000000-0000-0000-0000-000000000000",
	1);
INSERT INTO PE_PE
	VALUES ("6a1cb0e0-f1ce-46a0-9380-90aa36b7377a",
	1,
	"00000000-0000-0000-0000-000000000000",
	"5dc7a572-1e12-47ee-b38d-5a1e3e80f0d2",
	7);
INSERT INTO C_C_PROXY
	VALUES ("5dc7a572-1e12-47ee-b38d-5a1e3e80f0d2",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000",
	'Server',
	'',
	0,
	"00000000-0000-0000-0000-000000000000",
	0,
	'',
	'',
	'../Server.xtuml');
INSERT INTO S_SYS_PROXY
	VALUES ("658541c5-0d63-4591-a49a-88998399991c",
	'SharedClasses',
	1,
	'../../../SharedClasses.xtuml');
