-- BP 7.1 content: ModelClass syschar: 3 persistence-version: 7.1.5

INSERT INTO O_OBJ
	VALUES ("f27a61bc-60ad-4ee9-82f9-b6018f0ae638",
	'C benchmark',
	2,
	'CBENCH',
	'',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TFR
	VALUES ("6745aa50-2512-4f49-8df8-201157db1b1e",
	"f27a61bc-60ad-4ee9-82f9-b6018f0ae638",
	'function_void_void',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	0,
	'iterations = 10000;
if ( 1 == param.phase )               // setup
elif ( 2 == param.phase )             // run

  i = iterations;
  while ( i > 0 )
    CBENCHMARK::function_void_void();
    CBENCHMARK::function_void_void();
    CBENCHMARK::function_void_void();
    CBENCHMARK::function_void_void();
    CBENCHMARK::function_void_void();
    CBENCHMARK::function_void_void();
    CBENCHMARK::function_void_void();
    CBENCHMARK::function_void_void();
    CBENCHMARK::function_void_void();
    CBENCHMARK::function_void_void();
    i = i - 1;
  end while;

elif ( 3 == param.phase )             // unrun
elif ( 4 == param.phase )             // cleanup

elif ( 5 == param.phase )             // report

  i = 10 * iterations * param.count;
  ::report( message:"C function void void", count:i, duration:param.duration );

else
end if;

// Allow normal test looping.
return true;',
	1,
	'',
	"bc8bf7dd-5f29-42e9-a81e-b14d469e7c3d");
INSERT INTO O_TPARM
	VALUES ("0cf19886-90f7-4fef-99a8-40f7fd82a7ab",
	"6745aa50-2512-4f49-8df8-201157db1b1e",
	'testnum',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"c11d50dd-355d-4b96-8e65-d5f93fea9e45",
	'');
INSERT INTO O_TPARM
	VALUES ("c11d50dd-355d-4b96-8e65-d5f93fea9e45",
	"6745aa50-2512-4f49-8df8-201157db1b1e",
	'phase',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"e4d44f81-d20b-4637-b139-b46762f15342",
	'');
INSERT INTO O_TPARM
	VALUES ("4ff96edc-98dc-4cc4-8f66-cf91a1c036fb",
	"6745aa50-2512-4f49-8df8-201157db1b1e",
	'count',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TPARM
	VALUES ("e4d44f81-d20b-4637-b139-b46762f15342",
	"6745aa50-2512-4f49-8df8-201157db1b1e",
	'duration',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"4ff96edc-98dc-4cc4-8f66-cf91a1c036fb",
	'');
INSERT INTO O_TFR
	VALUES ("bc8bf7dd-5f29-42e9-a81e-b14d469e7c3d",
	"f27a61bc-60ad-4ee9-82f9-b6018f0ae638",
	'function_void_integer',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	0,
	'iterations = 10000;
if ( 1 == param.phase )               // setup
elif ( 2 == param.phase )             // run

  i = iterations;
  while ( i > 0 )
    CBENCHMARK::function_void_integer( i:i );
    CBENCHMARK::function_void_integer( i:i );
    CBENCHMARK::function_void_integer( i:i );
    CBENCHMARK::function_void_integer( i:i );
    CBENCHMARK::function_void_integer( i:i );
    CBENCHMARK::function_void_integer( i:i );
    CBENCHMARK::function_void_integer( i:i );
    CBENCHMARK::function_void_integer( i:i );
    CBENCHMARK::function_void_integer( i:i );
    CBENCHMARK::function_void_integer( i:i );
    i = i - 1;
  end while;

elif ( 3 == param.phase )             // unrun
elif ( 4 == param.phase )             // cleanup

elif ( 5 == param.phase )             // report

  i = 10 * iterations * param.count;
  ::report( message:"C function void integer", count:i, duration:param.duration );

else
end if;

// Allow normal test looping.
return true;',
	1,
	'',
	"f96aac50-d056-4f00-9f55-73151120942d");
INSERT INTO O_TPARM
	VALUES ("3a966b6f-2276-4ea2-a5db-80d2c6fe369c",
	"bc8bf7dd-5f29-42e9-a81e-b14d469e7c3d",
	'testnum',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"3b8da678-0aba-43dc-830f-258172a02f21",
	'');
INSERT INTO O_TPARM
	VALUES ("3b8da678-0aba-43dc-830f-258172a02f21",
	"bc8bf7dd-5f29-42e9-a81e-b14d469e7c3d",
	'phase',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"655b6af8-d559-4c1a-8d45-803d0c606696",
	'');
INSERT INTO O_TPARM
	VALUES ("03e9d4c7-4827-44d2-87a8-f68e2bcd0d1e",
	"bc8bf7dd-5f29-42e9-a81e-b14d469e7c3d",
	'count',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TPARM
	VALUES ("655b6af8-d559-4c1a-8d45-803d0c606696",
	"bc8bf7dd-5f29-42e9-a81e-b14d469e7c3d",
	'duration',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"03e9d4c7-4827-44d2-87a8-f68e2bcd0d1e",
	'');
INSERT INTO O_TFR
	VALUES ("f96aac50-d056-4f00-9f55-73151120942d",
	"f27a61bc-60ad-4ee9-82f9-b6018f0ae638",
	'function_integer_integer',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	0,
	'iterations = 10000;
j = 0;
if ( 1 == param.phase )               // setup
elif ( 2 == param.phase )             // run

  i = iterations;
  while ( i > 0 )
    j= CBENCHMARK::function_integer_integer( i:i );
    j= CBENCHMARK::function_integer_integer( i:i );
    j= CBENCHMARK::function_integer_integer( i:i );
    j= CBENCHMARK::function_integer_integer( i:i );
    j= CBENCHMARK::function_integer_integer( i:i );
    j= CBENCHMARK::function_integer_integer( i:i );
    j= CBENCHMARK::function_integer_integer( i:i );
    j= CBENCHMARK::function_integer_integer( i:i );
    j= CBENCHMARK::function_integer_integer( i:i );
    j= CBENCHMARK::function_integer_integer( i:i );
    i = i - 1;
  end while;

elif ( 3 == param.phase )             // unrun
elif ( 4 == param.phase )             // cleanup

elif ( 5 == param.phase )             // report

  i = 10 * iterations * param.count;
  ::report( message:"C function integer integer", count:i, duration:param.duration );

else
end if;

// Allow normal test looping.
return true;',
	1,
	'',
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_TPARM
	VALUES ("b9bbcb48-9fb3-4515-9ca9-222b516ea6fe",
	"f96aac50-d056-4f00-9f55-73151120942d",
	'testnum',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"de31e223-93df-45ab-a57f-ebdf0a921a45",
	'');
INSERT INTO O_TPARM
	VALUES ("de31e223-93df-45ab-a57f-ebdf0a921a45",
	"f96aac50-d056-4f00-9f55-73151120942d",
	'phase',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"340b2bb0-eb0c-48e1-a02d-277d9a37dab0",
	'');
INSERT INTO O_TPARM
	VALUES ("ee43d867-7696-4d3a-adb6-d983b2dbf6ea",
	"f96aac50-d056-4f00-9f55-73151120942d",
	'count',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TPARM
	VALUES ("340b2bb0-eb0c-48e1-a02d-277d9a37dab0",
	"f96aac50-d056-4f00-9f55-73151120942d",
	'duration',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"ee43d867-7696-4d3a-adb6-d983b2dbf6ea",
	'');
INSERT INTO O_TFR
	VALUES ("d5e2fd7d-484f-4630-8cc7-73dfe0f67e1e",
	"f27a61bc-60ad-4ee9-82f9-b6018f0ae638",
	'read_struct_member',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	0,
	'iterations = 10000;
if ( 1 == param.phase )               // setup
elif ( 2 == param.phase )             // run

  j = CBENCHMARK::read_struct_member( i:iterations );

elif ( 3 == param.phase )             // unrun
elif ( 4 == param.phase )             // cleanup

elif ( 5 == param.phase )             // report

  i = 10 * iterations * param.count;
  ::report( message:"C read struct member", count:i, duration:param.duration );

else
end if;

// Allow normal test looping.
return true;',
	1,
	'',
	"6745aa50-2512-4f49-8df8-201157db1b1e");
INSERT INTO O_TPARM
	VALUES ("410fed48-9d7c-4cd6-a866-b18b7135cc0d",
	"d5e2fd7d-484f-4630-8cc7-73dfe0f67e1e",
	'testnum',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"25d960f4-10ea-417c-8b5c-0861aa3723bf",
	'');
INSERT INTO O_TPARM
	VALUES ("25d960f4-10ea-417c-8b5c-0861aa3723bf",
	"d5e2fd7d-484f-4630-8cc7-73dfe0f67e1e",
	'phase',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"26dd33ab-ee61-4f36-8799-4e44da9bcfd3",
	'');
INSERT INTO O_TPARM
	VALUES ("ed183cd1-4625-40ab-9a0d-cd6297e537f8",
	"d5e2fd7d-484f-4630-8cc7-73dfe0f67e1e",
	'count',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TPARM
	VALUES ("26dd33ab-ee61-4f36-8799-4e44da9bcfd3",
	"d5e2fd7d-484f-4630-8cc7-73dfe0f67e1e",
	'duration',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"ed183cd1-4625-40ab-9a0d-cd6297e537f8",
	'');
INSERT INTO O_TFR
	VALUES ("563ac1a9-3051-46ad-b5b8-93b9ee77d700",
	"f27a61bc-60ad-4ee9-82f9-b6018f0ae638",
	'write_struct_member',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	0,
	'iterations = 10000;
j = 0;
if ( 1 == param.phase )               // setup
elif ( 2 == param.phase )             // run

  j = CBENCHMARK::write_struct_member( i:iterations );

elif ( 3 == param.phase )             // unrun
elif ( 4 == param.phase )             // cleanup

elif ( 5 == param.phase )             // report

  i = 10 * iterations * param.count;
  ::report( message:"C write struct member", count:i, duration:param.duration );

else
end if;

// Allow normal test looping.
return true;',
	1,
	'',
	"d5e2fd7d-484f-4630-8cc7-73dfe0f67e1e");
INSERT INTO O_TPARM
	VALUES ("3ea692b3-196e-4ee0-8ec2-82a26913f8c6",
	"563ac1a9-3051-46ad-b5b8-93b9ee77d700",
	'testnum',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"a0ebb884-74b5-4505-abcc-5f62b08b97ed",
	'');
INSERT INTO O_TPARM
	VALUES ("a0ebb884-74b5-4505-abcc-5f62b08b97ed",
	"563ac1a9-3051-46ad-b5b8-93b9ee77d700",
	'phase',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"64e34abe-56dd-4b94-a3ff-a3cc34c7b091",
	'');
INSERT INTO O_TPARM
	VALUES ("9e61e7d1-526f-43c8-b81c-319363e2228a",
	"563ac1a9-3051-46ad-b5b8-93b9ee77d700",
	'count',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO O_TPARM
	VALUES ("64e34abe-56dd-4b94-a3ff-a3cc34c7b091",
	"563ac1a9-3051-46ad-b5b8-93b9ee77d700",
	'duration',
	"ba5eda7a-def5-0000-0000-000000000002",
	0,
	'',
	"9e61e7d1-526f-43c8-b81c-319363e2228a",
	'');
INSERT INTO O_NBATTR
	VALUES ("1997023f-ff3e-4df7-822b-21041ff0d3e2",
	"f27a61bc-60ad-4ee9-82f9-b6018f0ae638");
INSERT INTO O_BATTR
	VALUES ("1997023f-ff3e-4df7-822b-21041ff0d3e2",
	"f27a61bc-60ad-4ee9-82f9-b6018f0ae638");
INSERT INTO O_ATTR
	VALUES ("1997023f-ff3e-4df7-822b-21041ff0d3e2",
	"f27a61bc-60ad-4ee9-82f9-b6018f0ae638",
	"00000000-0000-0000-0000-000000000000",
	'phase',
	'',
	'',
	'phase',
	0,
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	'');
INSERT INTO O_ID
	VALUES (0,
	"f27a61bc-60ad-4ee9-82f9-b6018f0ae638");
INSERT INTO O_ID
	VALUES (1,
	"f27a61bc-60ad-4ee9-82f9-b6018f0ae638");
INSERT INTO O_ID
	VALUES (2,
	"f27a61bc-60ad-4ee9-82f9-b6018f0ae638");
INSERT INTO PE_PE_PROXY
	VALUES ("f27a61bc-60ad-4ee9-82f9-b6018f0ae638",
	1,
	"97be34d7-2929-4054-a04e-ef938421bdf1",
	"00000000-0000-0000-0000-000000000000",
	4,
	'../performance testing.xtuml');
