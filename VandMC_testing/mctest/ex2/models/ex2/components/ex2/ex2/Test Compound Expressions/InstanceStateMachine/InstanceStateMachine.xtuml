-- BP 7.1 content: InstanceStateMachine syschar: 3 persistence-version: 7.1.5

INSERT INTO SM_ISM
	VALUES ("02958685-9039-44bf-a886-f49ba6febae9",
	"87f2fd21-bd97-421a-953a-3f31a6f4cad1");
INSERT INTO SM_SM
	VALUES ("02958685-9039-44bf-a886-f49ba6febae9",
	'',
	4);
INSERT INTO SM_MOORE
	VALUES ("02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_EVTDI
	VALUES ("eb01ee13-bb65-435c-a339-be342672b1a7",
	"02958685-9039-44bf-a886-f49ba6febae9",
	'name',
	'',
	"ba5eda7a-def5-0000-0000-000000000004",
	'',
	"a25f38ab-363c-449a-ad9a-d361bf91e7c8",
	"c1a5389c-c9af-4ea8-ba53-77f382c72c30");
INSERT INTO SM_EVTDI
	VALUES ("c1a5389c-c9af-4ea8-ba53-77f382c72c30",
	"02958685-9039-44bf-a886-f49ba6febae9",
	'age',
	'',
	"ba5eda7a-def5-0000-0000-000000000004",
	'',
	"a25f38ab-363c-449a-ad9a-d361bf91e7c8",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EVTDI
	VALUES ("8391d023-d66d-452c-9c0c-eef4d6fe3cc2",
	"02958685-9039-44bf-a886-f49ba6febae9",
	'i1',
	'',
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	"5622c556-6fcb-4bc1-b1b0-faadc66a703a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EVTDI
	VALUES ("a3074004-f010-4456-a770-726ba4cd6dd1",
	"02958685-9039-44bf-a886-f49ba6febae9",
	'i2',
	'',
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"4fed6641-885b-466b-8eca-64355c8e1cd4");
INSERT INTO SM_EVTDI
	VALUES ("9ef0e765-5dce-4b9d-9166-c6272a4c921b",
	"02958685-9039-44bf-a886-f49ba6febae9",
	'b1',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	'',
	"c228a10c-e90b-464b-8b53-b016481b3642",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EVTDI
	VALUES ("bb373c50-c07b-40ca-a681-1e44d29f656c",
	"02958685-9039-44bf-a886-f49ba6febae9",
	'b2',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	'',
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"5ba3d013-0c05-4112-9fb6-bf9edd5bb013");
INSERT INTO SM_EVTDI
	VALUES ("25fcd57a-b21e-43ad-8cd2-c945ec954f9b",
	"02958685-9039-44bf-a886-f49ba6febae9",
	'r1',
	'',
	"ba5eda7a-def5-0000-0000-000000000003",
	'',
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"a3074004-f010-4456-a770-726ba4cd6dd1");
INSERT INTO SM_EVTDI
	VALUES ("bb10751a-99df-44ed-b39a-6a71d8ad5d20",
	"02958685-9039-44bf-a886-f49ba6febae9",
	'r2',
	'',
	"ba5eda7a-def5-0000-0000-000000000003",
	'',
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"25fcd57a-b21e-43ad-8cd2-c945ec954f9b");
INSERT INTO SM_EVTDI
	VALUES ("4fed6641-885b-466b-8eca-64355c8e1cd4",
	"02958685-9039-44bf-a886-f49ba6febae9",
	'i1',
	'',
	"ba5eda7a-def5-0000-0000-000000000002",
	'',
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"bb373c50-c07b-40ca-a681-1e44d29f656c");
INSERT INTO SM_EVTDI
	VALUES ("5ba3d013-0c05-4112-9fb6-bf9edd5bb013",
	"02958685-9039-44bf-a886-f49ba6febae9",
	'b1',
	'',
	"ba5eda7a-def5-0000-0000-000000000001",
	'',
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_LEVT
	VALUES ("dfd98ee7-f68e-46ca-8d90-bfaeb5654865",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEVT
	VALUES ("dfd98ee7-f68e-46ca-8d90-bfaeb5654865",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EVT
	VALUES ("dfd98ee7-f68e-46ca-8d90-bfaeb5654865",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	1,
	'start test',
	0,
	'',
	'TCE1',
	'');
INSERT INTO SM_LEVT
	VALUES ("4216a125-ac60-4c1e-a76d-a3e92cd7421b",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEVT
	VALUES ("4216a125-ac60-4c1e-a76d-a3e92cd7421b",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EVT
	VALUES ("4216a125-ac60-4c1e-a76d-a3e92cd7421b",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	2,
	'next test',
	0,
	'',
	'TCE2',
	'');
INSERT INTO SM_LEVT
	VALUES ("a25f38ab-363c-449a-ad9a-d361bf91e7c8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEVT
	VALUES ("a25f38ab-363c-449a-ad9a-d361bf91e7c8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EVT
	VALUES ("a25f38ab-363c-449a-ad9a-d361bf91e7c8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	3,
	'event with supp data',
	0,
	'',
	'TCE3',
	'');
INSERT INTO SM_LEVT
	VALUES ("7dae2759-1b6c-4a80-8156-f10102e5298a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEVT
	VALUES ("7dae2759-1b6c-4a80-8156-f10102e5298a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EVT
	VALUES ("7dae2759-1b6c-4a80-8156-f10102e5298a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	4,
	'next test with supp data',
	0,
	'',
	'TCE4',
	'');
INSERT INTO SM_LEVT
	VALUES ("c228a10c-e90b-464b-8b53-b016481b3642",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEVT
	VALUES ("c228a10c-e90b-464b-8b53-b016481b3642",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EVT
	VALUES ("c228a10c-e90b-464b-8b53-b016481b3642",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	5,
	'bool event',
	0,
	'',
	'TCE5',
	'');
INSERT INTO SM_LEVT
	VALUES ("5622c556-6fcb-4bc1-b1b0-faadc66a703a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEVT
	VALUES ("5622c556-6fcb-4bc1-b1b0-faadc66a703a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EVT
	VALUES ("5622c556-6fcb-4bc1-b1b0-faadc66a703a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	6,
	'int event',
	0,
	'',
	'TCE6',
	'');
INSERT INTO SM_STATE
	VALUES ("7d723d57-4e3f-4aa5-a8df-2a554b912937",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'Compound Expressions Using Constants',
	1,
	0);
INSERT INTO SM_SEME
	VALUES ("7d723d57-4e3f-4aa5-a8df-2a554b912937",
	"dfd98ee7-f68e-46ca-8d90-bfaeb5654865",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("7d723d57-4e3f-4aa5-a8df-2a554b912937",
	"4216a125-ac60-4c1e-a76d-a3e92cd7421b",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("7d723d57-4e3f-4aa5-a8df-2a554b912937",
	"a25f38ab-363c-449a-ad9a-d361bf91e7c8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("7d723d57-4e3f-4aa5-a8df-2a554b912937",
	"a25f38ab-363c-449a-ad9a-d361bf91e7c8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("7d723d57-4e3f-4aa5-a8df-2a554b912937",
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("7d723d57-4e3f-4aa5-a8df-2a554b912937",
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("7d723d57-4e3f-4aa5-a8df-2a554b912937",
	"c228a10c-e90b-464b-8b53-b016481b3642",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("7d723d57-4e3f-4aa5-a8df-2a554b912937",
	"c228a10c-e90b-464b-8b53-b016481b3642",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("7d723d57-4e3f-4aa5-a8df-2a554b912937",
	"5622c556-6fcb-4bc1-b1b0-faadc66a703a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("7d723d57-4e3f-4aa5-a8df-2a554b912937",
	"5622c556-6fcb-4bc1-b1b0-faadc66a703a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("82611fde-f3f4-4940-9f11-923b4bd4d267",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'Compound Expressions Using Local Variables',
	2,
	0);
INSERT INTO SM_EIGN
	VALUES ("82611fde-f3f4-4940-9f11-923b4bd4d267",
	"dfd98ee7-f68e-46ca-8d90-bfaeb5654865",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("82611fde-f3f4-4940-9f11-923b4bd4d267",
	"dfd98ee7-f68e-46ca-8d90-bfaeb5654865",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("82611fde-f3f4-4940-9f11-923b4bd4d267",
	"4216a125-ac60-4c1e-a76d-a3e92cd7421b",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("82611fde-f3f4-4940-9f11-923b4bd4d267",
	"a25f38ab-363c-449a-ad9a-d361bf91e7c8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("82611fde-f3f4-4940-9f11-923b4bd4d267",
	"a25f38ab-363c-449a-ad9a-d361bf91e7c8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("82611fde-f3f4-4940-9f11-923b4bd4d267",
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("82611fde-f3f4-4940-9f11-923b4bd4d267",
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("82611fde-f3f4-4940-9f11-923b4bd4d267",
	"c228a10c-e90b-464b-8b53-b016481b3642",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("82611fde-f3f4-4940-9f11-923b4bd4d267",
	"c228a10c-e90b-464b-8b53-b016481b3642",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("82611fde-f3f4-4940-9f11-923b4bd4d267",
	"5622c556-6fcb-4bc1-b1b0-faadc66a703a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("82611fde-f3f4-4940-9f11-923b4bd4d267",
	"5622c556-6fcb-4bc1-b1b0-faadc66a703a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("def495d4-bf8c-4e00-83c8-5956435ba3c6",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'Compound Expressions Using Object Attributes',
	3,
	0);
INSERT INTO SM_EIGN
	VALUES ("def495d4-bf8c-4e00-83c8-5956435ba3c6",
	"dfd98ee7-f68e-46ca-8d90-bfaeb5654865",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("def495d4-bf8c-4e00-83c8-5956435ba3c6",
	"dfd98ee7-f68e-46ca-8d90-bfaeb5654865",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("def495d4-bf8c-4e00-83c8-5956435ba3c6",
	"4216a125-ac60-4c1e-a76d-a3e92cd7421b",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("def495d4-bf8c-4e00-83c8-5956435ba3c6",
	"4216a125-ac60-4c1e-a76d-a3e92cd7421b",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("def495d4-bf8c-4e00-83c8-5956435ba3c6",
	"a25f38ab-363c-449a-ad9a-d361bf91e7c8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("def495d4-bf8c-4e00-83c8-5956435ba3c6",
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("def495d4-bf8c-4e00-83c8-5956435ba3c6",
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("def495d4-bf8c-4e00-83c8-5956435ba3c6",
	"c228a10c-e90b-464b-8b53-b016481b3642",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("def495d4-bf8c-4e00-83c8-5956435ba3c6",
	"c228a10c-e90b-464b-8b53-b016481b3642",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("def495d4-bf8c-4e00-83c8-5956435ba3c6",
	"5622c556-6fcb-4bc1-b1b0-faadc66a703a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("def495d4-bf8c-4e00-83c8-5956435ba3c6",
	"5622c556-6fcb-4bc1-b1b0-faadc66a703a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("190c3c16-8e75-484f-b977-791afe191d36",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'Compound Expressions Using Supplemental Data Items Received From An Event',
	4,
	0);
INSERT INTO SM_EIGN
	VALUES ("190c3c16-8e75-484f-b977-791afe191d36",
	"dfd98ee7-f68e-46ca-8d90-bfaeb5654865",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("190c3c16-8e75-484f-b977-791afe191d36",
	"dfd98ee7-f68e-46ca-8d90-bfaeb5654865",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("190c3c16-8e75-484f-b977-791afe191d36",
	"4216a125-ac60-4c1e-a76d-a3e92cd7421b",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("190c3c16-8e75-484f-b977-791afe191d36",
	"a25f38ab-363c-449a-ad9a-d361bf91e7c8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("190c3c16-8e75-484f-b977-791afe191d36",
	"a25f38ab-363c-449a-ad9a-d361bf91e7c8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("190c3c16-8e75-484f-b977-791afe191d36",
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("190c3c16-8e75-484f-b977-791afe191d36",
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("190c3c16-8e75-484f-b977-791afe191d36",
	"c228a10c-e90b-464b-8b53-b016481b3642",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("190c3c16-8e75-484f-b977-791afe191d36",
	"c228a10c-e90b-464b-8b53-b016481b3642",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("190c3c16-8e75-484f-b977-791afe191d36",
	"5622c556-6fcb-4bc1-b1b0-faadc66a703a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("190c3c16-8e75-484f-b977-791afe191d36",
	"5622c556-6fcb-4bc1-b1b0-faadc66a703a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("abd98293-88ef-40fd-89f0-09cc9202dea2",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'Compound Expressions Using Function Invocations',
	5,
	0);
INSERT INTO SM_EIGN
	VALUES ("abd98293-88ef-40fd-89f0-09cc9202dea2",
	"dfd98ee7-f68e-46ca-8d90-bfaeb5654865",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("abd98293-88ef-40fd-89f0-09cc9202dea2",
	"dfd98ee7-f68e-46ca-8d90-bfaeb5654865",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("abd98293-88ef-40fd-89f0-09cc9202dea2",
	"4216a125-ac60-4c1e-a76d-a3e92cd7421b",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("abd98293-88ef-40fd-89f0-09cc9202dea2",
	"a25f38ab-363c-449a-ad9a-d361bf91e7c8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("abd98293-88ef-40fd-89f0-09cc9202dea2",
	"a25f38ab-363c-449a-ad9a-d361bf91e7c8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("abd98293-88ef-40fd-89f0-09cc9202dea2",
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("abd98293-88ef-40fd-89f0-09cc9202dea2",
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("abd98293-88ef-40fd-89f0-09cc9202dea2",
	"c228a10c-e90b-464b-8b53-b016481b3642",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("abd98293-88ef-40fd-89f0-09cc9202dea2",
	"c228a10c-e90b-464b-8b53-b016481b3642",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("abd98293-88ef-40fd-89f0-09cc9202dea2",
	"5622c556-6fcb-4bc1-b1b0-faadc66a703a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("abd98293-88ef-40fd-89f0-09cc9202dea2",
	"5622c556-6fcb-4bc1-b1b0-faadc66a703a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("e47a491e-d456-4341-8d03-81d11ffdf9f5",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'Compound Expressions Using Transformer Invocations',
	6,
	0);
INSERT INTO SM_EIGN
	VALUES ("e47a491e-d456-4341-8d03-81d11ffdf9f5",
	"dfd98ee7-f68e-46ca-8d90-bfaeb5654865",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("e47a491e-d456-4341-8d03-81d11ffdf9f5",
	"dfd98ee7-f68e-46ca-8d90-bfaeb5654865",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("e47a491e-d456-4341-8d03-81d11ffdf9f5",
	"4216a125-ac60-4c1e-a76d-a3e92cd7421b",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("e47a491e-d456-4341-8d03-81d11ffdf9f5",
	"a25f38ab-363c-449a-ad9a-d361bf91e7c8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("e47a491e-d456-4341-8d03-81d11ffdf9f5",
	"a25f38ab-363c-449a-ad9a-d361bf91e7c8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("e47a491e-d456-4341-8d03-81d11ffdf9f5",
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("e47a491e-d456-4341-8d03-81d11ffdf9f5",
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("e47a491e-d456-4341-8d03-81d11ffdf9f5",
	"c228a10c-e90b-464b-8b53-b016481b3642",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("e47a491e-d456-4341-8d03-81d11ffdf9f5",
	"c228a10c-e90b-464b-8b53-b016481b3642",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("e47a491e-d456-4341-8d03-81d11ffdf9f5",
	"5622c556-6fcb-4bc1-b1b0-faadc66a703a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("e47a491e-d456-4341-8d03-81d11ffdf9f5",
	"5622c556-6fcb-4bc1-b1b0-faadc66a703a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("f1acd1cd-eaa9-438d-8ca5-a7d654fc7474",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'Compound Expressions Using Bridge Invocations',
	7,
	0);
INSERT INTO SM_EIGN
	VALUES ("f1acd1cd-eaa9-438d-8ca5-a7d654fc7474",
	"dfd98ee7-f68e-46ca-8d90-bfaeb5654865",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("f1acd1cd-eaa9-438d-8ca5-a7d654fc7474",
	"dfd98ee7-f68e-46ca-8d90-bfaeb5654865",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("f1acd1cd-eaa9-438d-8ca5-a7d654fc7474",
	"4216a125-ac60-4c1e-a76d-a3e92cd7421b",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("f1acd1cd-eaa9-438d-8ca5-a7d654fc7474",
	"a25f38ab-363c-449a-ad9a-d361bf91e7c8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("f1acd1cd-eaa9-438d-8ca5-a7d654fc7474",
	"a25f38ab-363c-449a-ad9a-d361bf91e7c8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("f1acd1cd-eaa9-438d-8ca5-a7d654fc7474",
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("f1acd1cd-eaa9-438d-8ca5-a7d654fc7474",
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("f1acd1cd-eaa9-438d-8ca5-a7d654fc7474",
	"c228a10c-e90b-464b-8b53-b016481b3642",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("f1acd1cd-eaa9-438d-8ca5-a7d654fc7474",
	"c228a10c-e90b-464b-8b53-b016481b3642",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("f1acd1cd-eaa9-438d-8ca5-a7d654fc7474",
	"5622c556-6fcb-4bc1-b1b0-faadc66a703a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("f1acd1cd-eaa9-438d-8ca5-a7d654fc7474",
	"5622c556-6fcb-4bc1-b1b0-faadc66a703a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("64a83d4c-e1d6-48e6-9348-b45cf4cbf53f",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'Order of Operations',
	8,
	0);
INSERT INTO SM_EIGN
	VALUES ("64a83d4c-e1d6-48e6-9348-b45cf4cbf53f",
	"dfd98ee7-f68e-46ca-8d90-bfaeb5654865",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("64a83d4c-e1d6-48e6-9348-b45cf4cbf53f",
	"dfd98ee7-f68e-46ca-8d90-bfaeb5654865",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("64a83d4c-e1d6-48e6-9348-b45cf4cbf53f",
	"4216a125-ac60-4c1e-a76d-a3e92cd7421b",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("64a83d4c-e1d6-48e6-9348-b45cf4cbf53f",
	"a25f38ab-363c-449a-ad9a-d361bf91e7c8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("64a83d4c-e1d6-48e6-9348-b45cf4cbf53f",
	"a25f38ab-363c-449a-ad9a-d361bf91e7c8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("64a83d4c-e1d6-48e6-9348-b45cf4cbf53f",
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("64a83d4c-e1d6-48e6-9348-b45cf4cbf53f",
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("64a83d4c-e1d6-48e6-9348-b45cf4cbf53f",
	"c228a10c-e90b-464b-8b53-b016481b3642",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("64a83d4c-e1d6-48e6-9348-b45cf4cbf53f",
	"c228a10c-e90b-464b-8b53-b016481b3642",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("64a83d4c-e1d6-48e6-9348-b45cf4cbf53f",
	"5622c556-6fcb-4bc1-b1b0-faadc66a703a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("64a83d4c-e1d6-48e6-9348-b45cf4cbf53f",
	"5622c556-6fcb-4bc1-b1b0-faadc66a703a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("ecb3b3a8-e11a-4268-ae73-dccb8e608519",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'Stress Limits of Compound Expressions',
	9,
	0);
INSERT INTO SM_EIGN
	VALUES ("ecb3b3a8-e11a-4268-ae73-dccb8e608519",
	"dfd98ee7-f68e-46ca-8d90-bfaeb5654865",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("ecb3b3a8-e11a-4268-ae73-dccb8e608519",
	"dfd98ee7-f68e-46ca-8d90-bfaeb5654865",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("ecb3b3a8-e11a-4268-ae73-dccb8e608519",
	"4216a125-ac60-4c1e-a76d-a3e92cd7421b",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("ecb3b3a8-e11a-4268-ae73-dccb8e608519",
	"a25f38ab-363c-449a-ad9a-d361bf91e7c8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("ecb3b3a8-e11a-4268-ae73-dccb8e608519",
	"a25f38ab-363c-449a-ad9a-d361bf91e7c8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("ecb3b3a8-e11a-4268-ae73-dccb8e608519",
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("ecb3b3a8-e11a-4268-ae73-dccb8e608519",
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("ecb3b3a8-e11a-4268-ae73-dccb8e608519",
	"c228a10c-e90b-464b-8b53-b016481b3642",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("ecb3b3a8-e11a-4268-ae73-dccb8e608519",
	"c228a10c-e90b-464b-8b53-b016481b3642",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("ecb3b3a8-e11a-4268-ae73-dccb8e608519",
	"5622c556-6fcb-4bc1-b1b0-faadc66a703a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("ecb3b3a8-e11a-4268-ae73-dccb8e608519",
	"5622c556-6fcb-4bc1-b1b0-faadc66a703a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("ea13a90c-aa0f-4e29-91f2-3266c5247e25",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'Bridges Within Expressions',
	11,
	0);
INSERT INTO SM_EIGN
	VALUES ("ea13a90c-aa0f-4e29-91f2-3266c5247e25",
	"dfd98ee7-f68e-46ca-8d90-bfaeb5654865",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("ea13a90c-aa0f-4e29-91f2-3266c5247e25",
	"dfd98ee7-f68e-46ca-8d90-bfaeb5654865",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("ea13a90c-aa0f-4e29-91f2-3266c5247e25",
	"4216a125-ac60-4c1e-a76d-a3e92cd7421b",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("ea13a90c-aa0f-4e29-91f2-3266c5247e25",
	"a25f38ab-363c-449a-ad9a-d361bf91e7c8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("ea13a90c-aa0f-4e29-91f2-3266c5247e25",
	"a25f38ab-363c-449a-ad9a-d361bf91e7c8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("ea13a90c-aa0f-4e29-91f2-3266c5247e25",
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("ea13a90c-aa0f-4e29-91f2-3266c5247e25",
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("ea13a90c-aa0f-4e29-91f2-3266c5247e25",
	"c228a10c-e90b-464b-8b53-b016481b3642",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("ea13a90c-aa0f-4e29-91f2-3266c5247e25",
	"c228a10c-e90b-464b-8b53-b016481b3642",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("ea13a90c-aa0f-4e29-91f2-3266c5247e25",
	"5622c556-6fcb-4bc1-b1b0-faadc66a703a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("ea13a90c-aa0f-4e29-91f2-3266c5247e25",
	"5622c556-6fcb-4bc1-b1b0-faadc66a703a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("7a8247c8-6b5f-4cae-8f57-e9bc2dd29447",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'Transforms Within Expressions',
	12,
	0);
INSERT INTO SM_EIGN
	VALUES ("7a8247c8-6b5f-4cae-8f57-e9bc2dd29447",
	"dfd98ee7-f68e-46ca-8d90-bfaeb5654865",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("7a8247c8-6b5f-4cae-8f57-e9bc2dd29447",
	"dfd98ee7-f68e-46ca-8d90-bfaeb5654865",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("7a8247c8-6b5f-4cae-8f57-e9bc2dd29447",
	"4216a125-ac60-4c1e-a76d-a3e92cd7421b",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("7a8247c8-6b5f-4cae-8f57-e9bc2dd29447",
	"4216a125-ac60-4c1e-a76d-a3e92cd7421b",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("7a8247c8-6b5f-4cae-8f57-e9bc2dd29447",
	"a25f38ab-363c-449a-ad9a-d361bf91e7c8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("7a8247c8-6b5f-4cae-8f57-e9bc2dd29447",
	"a25f38ab-363c-449a-ad9a-d361bf91e7c8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("7a8247c8-6b5f-4cae-8f57-e9bc2dd29447",
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("7a8247c8-6b5f-4cae-8f57-e9bc2dd29447",
	"c228a10c-e90b-464b-8b53-b016481b3642",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("7a8247c8-6b5f-4cae-8f57-e9bc2dd29447",
	"c228a10c-e90b-464b-8b53-b016481b3642",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("7a8247c8-6b5f-4cae-8f57-e9bc2dd29447",
	"5622c556-6fcb-4bc1-b1b0-faadc66a703a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("7a8247c8-6b5f-4cae-8f57-e9bc2dd29447",
	"5622c556-6fcb-4bc1-b1b0-faadc66a703a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("f6d4cdd5-f696-4bac-9d6e-58c642703b16",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'Combinine Real and Integer Data Types',
	13,
	1);
INSERT INTO SM_EIGN
	VALUES ("f6d4cdd5-f696-4bac-9d6e-58c642703b16",
	"dfd98ee7-f68e-46ca-8d90-bfaeb5654865",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("f6d4cdd5-f696-4bac-9d6e-58c642703b16",
	"dfd98ee7-f68e-46ca-8d90-bfaeb5654865",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("f6d4cdd5-f696-4bac-9d6e-58c642703b16",
	"4216a125-ac60-4c1e-a76d-a3e92cd7421b",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("f6d4cdd5-f696-4bac-9d6e-58c642703b16",
	"4216a125-ac60-4c1e-a76d-a3e92cd7421b",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("f6d4cdd5-f696-4bac-9d6e-58c642703b16",
	"a25f38ab-363c-449a-ad9a-d361bf91e7c8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("f6d4cdd5-f696-4bac-9d6e-58c642703b16",
	"a25f38ab-363c-449a-ad9a-d361bf91e7c8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("f6d4cdd5-f696-4bac-9d6e-58c642703b16",
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("f6d4cdd5-f696-4bac-9d6e-58c642703b16",
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("f6d4cdd5-f696-4bac-9d6e-58c642703b16",
	"c228a10c-e90b-464b-8b53-b016481b3642",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("f6d4cdd5-f696-4bac-9d6e-58c642703b16",
	"c228a10c-e90b-464b-8b53-b016481b3642",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("f6d4cdd5-f696-4bac-9d6e-58c642703b16",
	"5622c556-6fcb-4bc1-b1b0-faadc66a703a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("f6d4cdd5-f696-4bac-9d6e-58c642703b16",
	"5622c556-6fcb-4bc1-b1b0-faadc66a703a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("86c37ba1-17e1-4f42-8fc9-40c6c70cef28",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'Unary Ops',
	14,
	0);
INSERT INTO SM_CH
	VALUES ("86c37ba1-17e1-4f42-8fc9-40c6c70cef28",
	"dfd98ee7-f68e-46ca-8d90-bfaeb5654865",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("86c37ba1-17e1-4f42-8fc9-40c6c70cef28",
	"dfd98ee7-f68e-46ca-8d90-bfaeb5654865",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("86c37ba1-17e1-4f42-8fc9-40c6c70cef28",
	"4216a125-ac60-4c1e-a76d-a3e92cd7421b",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("86c37ba1-17e1-4f42-8fc9-40c6c70cef28",
	"4216a125-ac60-4c1e-a76d-a3e92cd7421b",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("86c37ba1-17e1-4f42-8fc9-40c6c70cef28",
	"a25f38ab-363c-449a-ad9a-d361bf91e7c8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("86c37ba1-17e1-4f42-8fc9-40c6c70cef28",
	"a25f38ab-363c-449a-ad9a-d361bf91e7c8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("86c37ba1-17e1-4f42-8fc9-40c6c70cef28",
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("86c37ba1-17e1-4f42-8fc9-40c6c70cef28",
	"c228a10c-e90b-464b-8b53-b016481b3642",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("86c37ba1-17e1-4f42-8fc9-40c6c70cef28",
	"c228a10c-e90b-464b-8b53-b016481b3642",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("86c37ba1-17e1-4f42-8fc9-40c6c70cef28",
	"5622c556-6fcb-4bc1-b1b0-faadc66a703a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("86c37ba1-17e1-4f42-8fc9-40c6c70cef28",
	"5622c556-6fcb-4bc1-b1b0-faadc66a703a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("153b7920-f38d-4523-a9c0-49b6c7b0d731",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'If Expressions',
	15,
	0);
INSERT INTO SM_CH
	VALUES ("153b7920-f38d-4523-a9c0-49b6c7b0d731",
	"dfd98ee7-f68e-46ca-8d90-bfaeb5654865",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("153b7920-f38d-4523-a9c0-49b6c7b0d731",
	"dfd98ee7-f68e-46ca-8d90-bfaeb5654865",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_EIGN
	VALUES ("153b7920-f38d-4523-a9c0-49b6c7b0d731",
	"4216a125-ac60-4c1e-a76d-a3e92cd7421b",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("153b7920-f38d-4523-a9c0-49b6c7b0d731",
	"4216a125-ac60-4c1e-a76d-a3e92cd7421b",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("153b7920-f38d-4523-a9c0-49b6c7b0d731",
	"a25f38ab-363c-449a-ad9a-d361bf91e7c8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("153b7920-f38d-4523-a9c0-49b6c7b0d731",
	"a25f38ab-363c-449a-ad9a-d361bf91e7c8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("153b7920-f38d-4523-a9c0-49b6c7b0d731",
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("153b7920-f38d-4523-a9c0-49b6c7b0d731",
	"c228a10c-e90b-464b-8b53-b016481b3642",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("153b7920-f38d-4523-a9c0-49b6c7b0d731",
	"c228a10c-e90b-464b-8b53-b016481b3642",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("153b7920-f38d-4523-a9c0-49b6c7b0d731",
	"5622c556-6fcb-4bc1-b1b0-faadc66a703a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("153b7920-f38d-4523-a9c0-49b6c7b0d731",
	"5622c556-6fcb-4bc1-b1b0-faadc66a703a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("7ed1cb61-8bea-4d55-8e64-94e0a3f7371b",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'Expressions Within Parameters',
	16,
	0);
INSERT INTO SM_CH
	VALUES ("7ed1cb61-8bea-4d55-8e64-94e0a3f7371b",
	"dfd98ee7-f68e-46ca-8d90-bfaeb5654865",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("7ed1cb61-8bea-4d55-8e64-94e0a3f7371b",
	"dfd98ee7-f68e-46ca-8d90-bfaeb5654865",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("7ed1cb61-8bea-4d55-8e64-94e0a3f7371b",
	"4216a125-ac60-4c1e-a76d-a3e92cd7421b",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("7ed1cb61-8bea-4d55-8e64-94e0a3f7371b",
	"4216a125-ac60-4c1e-a76d-a3e92cd7421b",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("7ed1cb61-8bea-4d55-8e64-94e0a3f7371b",
	"a25f38ab-363c-449a-ad9a-d361bf91e7c8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("7ed1cb61-8bea-4d55-8e64-94e0a3f7371b",
	"a25f38ab-363c-449a-ad9a-d361bf91e7c8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("7ed1cb61-8bea-4d55-8e64-94e0a3f7371b",
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("7ed1cb61-8bea-4d55-8e64-94e0a3f7371b",
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("7ed1cb61-8bea-4d55-8e64-94e0a3f7371b",
	"c228a10c-e90b-464b-8b53-b016481b3642",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("7ed1cb61-8bea-4d55-8e64-94e0a3f7371b",
	"5622c556-6fcb-4bc1-b1b0-faadc66a703a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("91c6bdc8-59a7-454e-a8dd-cbb3f6d24cfc",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'Count Acks from Bool Event',
	17,
	0);
INSERT INTO SM_CH
	VALUES ("91c6bdc8-59a7-454e-a8dd-cbb3f6d24cfc",
	"dfd98ee7-f68e-46ca-8d90-bfaeb5654865",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("91c6bdc8-59a7-454e-a8dd-cbb3f6d24cfc",
	"dfd98ee7-f68e-46ca-8d90-bfaeb5654865",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("91c6bdc8-59a7-454e-a8dd-cbb3f6d24cfc",
	"4216a125-ac60-4c1e-a76d-a3e92cd7421b",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("91c6bdc8-59a7-454e-a8dd-cbb3f6d24cfc",
	"4216a125-ac60-4c1e-a76d-a3e92cd7421b",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("91c6bdc8-59a7-454e-a8dd-cbb3f6d24cfc",
	"a25f38ab-363c-449a-ad9a-d361bf91e7c8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("91c6bdc8-59a7-454e-a8dd-cbb3f6d24cfc",
	"a25f38ab-363c-449a-ad9a-d361bf91e7c8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("91c6bdc8-59a7-454e-a8dd-cbb3f6d24cfc",
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("91c6bdc8-59a7-454e-a8dd-cbb3f6d24cfc",
	"c228a10c-e90b-464b-8b53-b016481b3642",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("91c6bdc8-59a7-454e-a8dd-cbb3f6d24cfc",
	"5622c556-6fcb-4bc1-b1b0-faadc66a703a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("70bda33f-14e0-4261-81c1-e9f03fc2d6a1",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'Count Acks from Int Event',
	18,
	0);
INSERT INTO SM_CH
	VALUES ("70bda33f-14e0-4261-81c1-e9f03fc2d6a1",
	"dfd98ee7-f68e-46ca-8d90-bfaeb5654865",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("70bda33f-14e0-4261-81c1-e9f03fc2d6a1",
	"dfd98ee7-f68e-46ca-8d90-bfaeb5654865",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("70bda33f-14e0-4261-81c1-e9f03fc2d6a1",
	"4216a125-ac60-4c1e-a76d-a3e92cd7421b",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("70bda33f-14e0-4261-81c1-e9f03fc2d6a1",
	"4216a125-ac60-4c1e-a76d-a3e92cd7421b",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("70bda33f-14e0-4261-81c1-e9f03fc2d6a1",
	"a25f38ab-363c-449a-ad9a-d361bf91e7c8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("70bda33f-14e0-4261-81c1-e9f03fc2d6a1",
	"a25f38ab-363c-449a-ad9a-d361bf91e7c8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("70bda33f-14e0-4261-81c1-e9f03fc2d6a1",
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("70bda33f-14e0-4261-81c1-e9f03fc2d6a1",
	"c228a10c-e90b-464b-8b53-b016481b3642",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("70bda33f-14e0-4261-81c1-e9f03fc2d6a1",
	"5622c556-6fcb-4bc1-b1b0-faadc66a703a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("d0e4518a-7781-495b-b57a-53f2a64bcbe0",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'More Expressions within Parms',
	19,
	0);
INSERT INTO SM_CH
	VALUES ("d0e4518a-7781-495b-b57a-53f2a64bcbe0",
	"dfd98ee7-f68e-46ca-8d90-bfaeb5654865",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("d0e4518a-7781-495b-b57a-53f2a64bcbe0",
	"dfd98ee7-f68e-46ca-8d90-bfaeb5654865",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("d0e4518a-7781-495b-b57a-53f2a64bcbe0",
	"4216a125-ac60-4c1e-a76d-a3e92cd7421b",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("d0e4518a-7781-495b-b57a-53f2a64bcbe0",
	"4216a125-ac60-4c1e-a76d-a3e92cd7421b",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("d0e4518a-7781-495b-b57a-53f2a64bcbe0",
	"a25f38ab-363c-449a-ad9a-d361bf91e7c8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("d0e4518a-7781-495b-b57a-53f2a64bcbe0",
	"a25f38ab-363c-449a-ad9a-d361bf91e7c8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("d0e4518a-7781-495b-b57a-53f2a64bcbe0",
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("d0e4518a-7781-495b-b57a-53f2a64bcbe0",
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("d0e4518a-7781-495b-b57a-53f2a64bcbe0",
	"c228a10c-e90b-464b-8b53-b016481b3642",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("d0e4518a-7781-495b-b57a-53f2a64bcbe0",
	"5622c556-6fcb-4bc1-b1b0-faadc66a703a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("bb896424-d5f9-4c53-9959-cdfff6016a19",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'Bool Event Acks',
	20,
	0);
INSERT INTO SM_CH
	VALUES ("bb896424-d5f9-4c53-9959-cdfff6016a19",
	"dfd98ee7-f68e-46ca-8d90-bfaeb5654865",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("bb896424-d5f9-4c53-9959-cdfff6016a19",
	"dfd98ee7-f68e-46ca-8d90-bfaeb5654865",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("bb896424-d5f9-4c53-9959-cdfff6016a19",
	"4216a125-ac60-4c1e-a76d-a3e92cd7421b",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("bb896424-d5f9-4c53-9959-cdfff6016a19",
	"4216a125-ac60-4c1e-a76d-a3e92cd7421b",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("bb896424-d5f9-4c53-9959-cdfff6016a19",
	"a25f38ab-363c-449a-ad9a-d361bf91e7c8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("bb896424-d5f9-4c53-9959-cdfff6016a19",
	"a25f38ab-363c-449a-ad9a-d361bf91e7c8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("bb896424-d5f9-4c53-9959-cdfff6016a19",
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("bb896424-d5f9-4c53-9959-cdfff6016a19",
	"c228a10c-e90b-464b-8b53-b016481b3642",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("bb896424-d5f9-4c53-9959-cdfff6016a19",
	"5622c556-6fcb-4bc1-b1b0-faadc66a703a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_STATE
	VALUES ("f59b6daf-3dfb-42ee-9ca0-fe4a7cac5bf2",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'Int Event Acks',
	21,
	0);
INSERT INTO SM_CH
	VALUES ("f59b6daf-3dfb-42ee-9ca0-fe4a7cac5bf2",
	"dfd98ee7-f68e-46ca-8d90-bfaeb5654865",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("f59b6daf-3dfb-42ee-9ca0-fe4a7cac5bf2",
	"dfd98ee7-f68e-46ca-8d90-bfaeb5654865",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("f59b6daf-3dfb-42ee-9ca0-fe4a7cac5bf2",
	"4216a125-ac60-4c1e-a76d-a3e92cd7421b",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("f59b6daf-3dfb-42ee-9ca0-fe4a7cac5bf2",
	"4216a125-ac60-4c1e-a76d-a3e92cd7421b",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_CH
	VALUES ("f59b6daf-3dfb-42ee-9ca0-fe4a7cac5bf2",
	"a25f38ab-363c-449a-ad9a-d361bf91e7c8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000",
	'');
INSERT INTO SM_SEME
	VALUES ("f59b6daf-3dfb-42ee-9ca0-fe4a7cac5bf2",
	"a25f38ab-363c-449a-ad9a-d361bf91e7c8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("f59b6daf-3dfb-42ee-9ca0-fe4a7cac5bf2",
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("f59b6daf-3dfb-42ee-9ca0-fe4a7cac5bf2",
	"c228a10c-e90b-464b-8b53-b016481b3642",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_SEME
	VALUES ("f59b6daf-3dfb-42ee-9ca0-fe4a7cac5bf2",
	"5622c556-6fcb-4bc1-b1b0-faadc66a703a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("8ab50f39-ecf5-4d3b-8cdc-38f7de5b5ca2",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"7d723d57-4e3f-4aa5-a8df-2a554b912937",
	"dfd98ee7-f68e-46ca-8d90-bfaeb5654865",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("8ab50f39-ecf5-4d3b-8cdc-38f7de5b5ca2",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"7d723d57-4e3f-4aa5-a8df-2a554b912937",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("69919663-ef78-47cb-959a-f49a7a0d2f1d",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"7d723d57-4e3f-4aa5-a8df-2a554b912937",
	"4216a125-ac60-4c1e-a76d-a3e92cd7421b",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("69919663-ef78-47cb-959a-f49a7a0d2f1d",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"82611fde-f3f4-4940-9f11-923b4bd4d267",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("d4fb617f-95dc-4eeb-a960-1f830d5bdf4f",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"82611fde-f3f4-4940-9f11-923b4bd4d267",
	"4216a125-ac60-4c1e-a76d-a3e92cd7421b",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("d4fb617f-95dc-4eeb-a960-1f830d5bdf4f",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"def495d4-bf8c-4e00-83c8-5956435ba3c6",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("c4a7c914-a091-4b1e-8302-d39f184da574",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"190c3c16-8e75-484f-b977-791afe191d36",
	"4216a125-ac60-4c1e-a76d-a3e92cd7421b",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("c4a7c914-a091-4b1e-8302-d39f184da574",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"abd98293-88ef-40fd-89f0-09cc9202dea2",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("c4f0c401-4bbb-4184-b131-67e812a47271",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"abd98293-88ef-40fd-89f0-09cc9202dea2",
	"4216a125-ac60-4c1e-a76d-a3e92cd7421b",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("c4f0c401-4bbb-4184-b131-67e812a47271",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"e47a491e-d456-4341-8d03-81d11ffdf9f5",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("02d5d401-b700-4b20-a696-e4be0eb8c686",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"e47a491e-d456-4341-8d03-81d11ffdf9f5",
	"4216a125-ac60-4c1e-a76d-a3e92cd7421b",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("02d5d401-b700-4b20-a696-e4be0eb8c686",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"f1acd1cd-eaa9-438d-8ca5-a7d654fc7474",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("e3bed8cf-b817-4cd4-9567-6721750b7b9d",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"f1acd1cd-eaa9-438d-8ca5-a7d654fc7474",
	"4216a125-ac60-4c1e-a76d-a3e92cd7421b",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("e3bed8cf-b817-4cd4-9567-6721750b7b9d",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"64a83d4c-e1d6-48e6-9348-b45cf4cbf53f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("0e40ce2a-6fd0-44f2-abea-69d9058b2710",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"64a83d4c-e1d6-48e6-9348-b45cf4cbf53f",
	"4216a125-ac60-4c1e-a76d-a3e92cd7421b",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("0e40ce2a-6fd0-44f2-abea-69d9058b2710",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"ecb3b3a8-e11a-4268-ae73-dccb8e608519",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("e4e3f8f6-40be-446a-acbd-c00d0b8aa7c0",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"ea13a90c-aa0f-4e29-91f2-3266c5247e25",
	"4216a125-ac60-4c1e-a76d-a3e92cd7421b",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("e4e3f8f6-40be-446a-acbd-c00d0b8aa7c0",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"7a8247c8-6b5f-4cae-8f57-e9bc2dd29447",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("79024cb5-1129-42b4-b981-59280a96a483",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"def495d4-bf8c-4e00-83c8-5956435ba3c6",
	"a25f38ab-363c-449a-ad9a-d361bf91e7c8",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("79024cb5-1129-42b4-b981-59280a96a483",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"190c3c16-8e75-484f-b977-791afe191d36",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("af21614f-65b7-478f-ba94-a40003ba39fb",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"ecb3b3a8-e11a-4268-ae73-dccb8e608519",
	"4216a125-ac60-4c1e-a76d-a3e92cd7421b",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("af21614f-65b7-478f-ba94-a40003ba39fb",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"ea13a90c-aa0f-4e29-91f2-3266c5247e25",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("789768d8-0818-4394-bbb1-069dc80b2e0f",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"7a8247c8-6b5f-4cae-8f57-e9bc2dd29447",
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("789768d8-0818-4394-bbb1-069dc80b2e0f",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"86c37ba1-17e1-4f42-8fc9-40c6c70cef28",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("aa3508ba-3d17-412f-9c9d-b900070fdb1f",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"86c37ba1-17e1-4f42-8fc9-40c6c70cef28",
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("aa3508ba-3d17-412f-9c9d-b900070fdb1f",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"153b7920-f38d-4523-a9c0-49b6c7b0d731",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("fe0d579a-005b-403c-8f7d-b020cf720be4",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"153b7920-f38d-4523-a9c0-49b6c7b0d731",
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("fe0d579a-005b-403c-8f7d-b020cf720be4",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"7ed1cb61-8bea-4d55-8e64-94e0a3f7371b",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("bb65cc9d-70ae-4821-a4b4-8d55a8948e5c",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"7ed1cb61-8bea-4d55-8e64-94e0a3f7371b",
	"c228a10c-e90b-464b-8b53-b016481b3642",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("bb65cc9d-70ae-4821-a4b4-8d55a8948e5c",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"91c6bdc8-59a7-454e-a8dd-cbb3f6d24cfc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("7e512470-4d2f-4fbe-95a5-5e6497f9c852",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"7ed1cb61-8bea-4d55-8e64-94e0a3f7371b",
	"5622c556-6fcb-4bc1-b1b0-faadc66a703a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("7e512470-4d2f-4fbe-95a5-5e6497f9c852",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"70bda33f-14e0-4261-81c1-e9f03fc2d6a1",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("950621e9-c093-483f-9fe5-860dbf17553e",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"91c6bdc8-59a7-454e-a8dd-cbb3f6d24cfc",
	"5622c556-6fcb-4bc1-b1b0-faadc66a703a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("950621e9-c093-483f-9fe5-860dbf17553e",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"70bda33f-14e0-4261-81c1-e9f03fc2d6a1",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("c6c48e7d-8f07-4a0a-9051-30ed44c69bc3",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"70bda33f-14e0-4261-81c1-e9f03fc2d6a1",
	"c228a10c-e90b-464b-8b53-b016481b3642",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("c6c48e7d-8f07-4a0a-9051-30ed44c69bc3",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"91c6bdc8-59a7-454e-a8dd-cbb3f6d24cfc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("b7a67873-a883-4320-9ab9-a5c0b3e6b2af",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"91c6bdc8-59a7-454e-a8dd-cbb3f6d24cfc",
	"c228a10c-e90b-464b-8b53-b016481b3642",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("b7a67873-a883-4320-9ab9-a5c0b3e6b2af",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"91c6bdc8-59a7-454e-a8dd-cbb3f6d24cfc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("3dbb0fb4-5854-4805-a78f-c0b3e04f345a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"70bda33f-14e0-4261-81c1-e9f03fc2d6a1",
	"5622c556-6fcb-4bc1-b1b0-faadc66a703a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("3dbb0fb4-5854-4805-a78f-c0b3e04f345a",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"70bda33f-14e0-4261-81c1-e9f03fc2d6a1",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("5614f887-d21b-423b-842e-a9c95890b28b",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"70bda33f-14e0-4261-81c1-e9f03fc2d6a1",
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("5614f887-d21b-423b-842e-a9c95890b28b",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"d0e4518a-7781-495b-b57a-53f2a64bcbe0",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("a4f002b4-df9e-4908-901f-c2df5ab7cd9d",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"91c6bdc8-59a7-454e-a8dd-cbb3f6d24cfc",
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("a4f002b4-df9e-4908-901f-c2df5ab7cd9d",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"d0e4518a-7781-495b-b57a-53f2a64bcbe0",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("a0409bdd-e9a1-42a2-9f24-0e996e06ed16",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"bb896424-d5f9-4c53-9959-cdfff6016a19",
	"c228a10c-e90b-464b-8b53-b016481b3642",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("a0409bdd-e9a1-42a2-9f24-0e996e06ed16",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"bb896424-d5f9-4c53-9959-cdfff6016a19",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("df45863d-a10d-4131-baf2-e025ecdc4269",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"f59b6daf-3dfb-42ee-9ca0-fe4a7cac5bf2",
	"c228a10c-e90b-464b-8b53-b016481b3642",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("df45863d-a10d-4131-baf2-e025ecdc4269",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"bb896424-d5f9-4c53-9959-cdfff6016a19",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("07896b70-fe1f-4352-8f73-f2272f8f2498",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"bb896424-d5f9-4c53-9959-cdfff6016a19",
	"5622c556-6fcb-4bc1-b1b0-faadc66a703a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("07896b70-fe1f-4352-8f73-f2272f8f2498",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"f59b6daf-3dfb-42ee-9ca0-fe4a7cac5bf2",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("09323ace-3609-45cc-a78d-285a49fc73c6",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"f59b6daf-3dfb-42ee-9ca0-fe4a7cac5bf2",
	"5622c556-6fcb-4bc1-b1b0-faadc66a703a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("09323ace-3609-45cc-a78d-285a49fc73c6",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"f59b6daf-3dfb-42ee-9ca0-fe4a7cac5bf2",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("399f137f-398e-4bee-8807-eee50e71dd98",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"d0e4518a-7781-495b-b57a-53f2a64bcbe0",
	"5622c556-6fcb-4bc1-b1b0-faadc66a703a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("399f137f-398e-4bee-8807-eee50e71dd98",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"f59b6daf-3dfb-42ee-9ca0-fe4a7cac5bf2",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("44a281f1-bc47-4c03-9ae3-8a728b870b18",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"d0e4518a-7781-495b-b57a-53f2a64bcbe0",
	"c228a10c-e90b-464b-8b53-b016481b3642",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("44a281f1-bc47-4c03-9ae3-8a728b870b18",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"bb896424-d5f9-4c53-9959-cdfff6016a19",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("68bac378-5491-4d48-a114-8a37181cfbae",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"f59b6daf-3dfb-42ee-9ca0-fe4a7cac5bf2",
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("68bac378-5491-4d48-a114-8a37181cfbae",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"f6d4cdd5-f696-4bac-9d6e-58c642703b16",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_NSTXN
	VALUES ("c455e933-98ec-4553-92d5-f855ce2be31c",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"bb896424-d5f9-4c53-9959-cdfff6016a19",
	"7dae2759-1b6c-4a80-8156-f10102e5298a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_TXN
	VALUES ("c455e933-98ec-4553-92d5-f855ce2be31c",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"f6d4cdd5-f696-4bac-9d6e-58c642703b16",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO SM_MOAH
	VALUES ("b8197ca4-ea64-47b3-9cb7-7a0265bb1e06",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"7d723d57-4e3f-4aa5-a8df-2a554b912937");
INSERT INTO SM_AH
	VALUES ("b8197ca4-ea64-47b3-9cb7-7a0265bb1e06",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("b8197ca4-ea64-47b3-9cb7-7a0265bb1e06",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'
// integer:

  if (( (1+2) * (3+4) ) == 21)
     LOG::LogSuccess (message:"Test Compound Expressions - Using Constants - integer") ;
  else
     LOG::LogFailure (message:"Test Compound Expressions - Using Constants - integer") ;
  end if;


// real:


  if ((3.3 + 2.2 - 1.1) - 4.4 <= 0.000001)
     LOG::LogSuccess (message:"Test Compound Expressions - Using Constants - real") ;
  else
     LOG::LogFailure (message:"Test Compound Expressions - Using Constants - real") ;
  end if;


// string:


  if (("Hello" + "," + " " + "World" + "!") == "Hello, World!")
     LOG::LogSuccess (message:"Test Compound Expressions - Using Constants - string") ;
  else
     LOG::LogFailure (message:"Test Compound Expressions - Using Constants - string") ;
  end if;

  str1 = "Hello" + "World";
  str = TRAN::ret_string(s:str1);
  if (str == "HelloWorld" )
     LOG::LogSuccess (message:"Test Compound Expressions - Using Constants - string +") ;
  else
     LOG::LogFailure (message:"Test Compound Expressions - Using Constants - string +") ;
  end if;

  
// boolean:


  if (TRUE or FALSE and TRUE and TRUE)
     LOG::LogSuccess (message:"Test Compound Expressions - Using Constants - bool 1") ;
  else
     LOG::LogFailure (message:"Test Compound Expressions - Using Constants - bool 1") ;
  end if;


  if (not (TRUE and FALSE) and (TRUE or FALSE))
     LOG::LogSuccess (message:"Test Compound Expressions - Using Constants - bool 2") ;
  else
     LOG::LogFailure (message:"Test Compound Expressions - Using Constants - bool 2") ;
  end if;

// send next test event back to controlling object
select any dr from instances of DR;
generate DR2:''next test'' () to dr;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("95051d5c-bfe4-40c9-86a0-c4984855f334",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"82611fde-f3f4-4940-9f11-923b4bd4d267");
INSERT INTO SM_AH
	VALUES ("95051d5c-bfe4-40c9-86a0-c4984855f334",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("95051d5c-bfe4-40c9-86a0-c4984855f334",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'
// integer:


// Initialize variables for test:
a = 1;
b = 4;
c = 2;

if ((a - b/c + a*c) == 1)
   LOG::LogSuccess (message:"Test Compound Expressions - Local Variables - integer") ;
else
   LOG::LogFailure (message:"Test Compound Expressions - Local Variables - integer") ;
end if;


// real:

// Initialize variables for test:
x = 4.0;
y = 1.5;
z = 1.1;

if ( ((x + y - z) > 4.3) and ((x+y-z) < 4.5) )
   LOG::LogSuccess (message:"Test Compound Expressions - Local Variables - real") ;
else
   LOG::LogFailure (message:"Test Compound Expressions - Local Variables - real") ;
end if;


// string:


// Initialize variables for test:
s1 = "Hello";
s2 = ", ";
s3 = "world!";

if ((s1 + s2 + s3) == "Hello, world!")
   LOG::LogSuccess (message:"Test Compound Expressions - Local Variables - string") ;
else
   LOG::LogFailure (message:"Test Compound Expressions - Local Variables - string") ;
end if;

// send next test event back to controlling object
select any dr from instances of DR;
generate DR2:''next test'' () to dr;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("25c99e54-7a6f-4af4-a4ea-ed2efb6abb07",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"def495d4-bf8c-4e00-83c8-5956435ba3c6");
INSERT INTO SM_AH
	VALUES ("25c99e54-7a6f-4af4-a4ea-ed2efb6abb07",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("25c99e54-7a6f-4af4-a4ea-ed2efb6abb07",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'// integer:

// Create objects for test
create object instance a of A;
create object instance b of A;

// Initialize variables for test:
a.a = 5;
b.a = 2;

// attributes of an instance
if ( ((a.a - b.a) * (a.a - 3) + 1) == 7 )
   LOG::LogSuccess (message:"Test Compound Expressions - Object Attributes - inst ref var") ;
else
   LOG::LogFailure (message:"Test Compound Expressions - Object Attributes - inst ref var") ;
end if;


// Initialize variables for test:
self.a = 5;
self.b = 4;

// self
if ( (self.a + self.b - 2) == 7)
   LOG::LogSuccess (message:"Test Compound Expressions - Object Attributes - self") ;
else
   LOG::LogFailure (message:"Test Compound Expressions - Object Attributes - self") ;
end if;

// Delete any objects created
delete object instance a;
delete object instance b;

// send next test event back to controlling object
select any dr from instances of DR;
generate DR3:''send event with supp data'' () to dr;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("a3997d28-eea7-4f77-95d1-f4b4f278fafc",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"190c3c16-8e75-484f-b977-791afe191d36");
INSERT INTO SM_AH
	VALUES ("a3997d28-eea7-4f77-95d1-f4b4f278fafc",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("a3997d28-eea7-4f77-95d1-f4b4f278fafc",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'
if ( (rcvd_evt.name + ": age " + rcvd_evt.age) == "Bob: age 31" )
   LOG::LogSuccess (message:"Test Compound Expressions - Supp Data Items") ;
else
   LOG::LogFailure (message:"Test Compound Expressions - Supp Data Items") ;
end if;

// send next test event back to controlling object
select any dr from instances of DR;
generate DR2:''next test'' () to dr;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("113a47d3-f670-487e-971a-900b3aa1bff8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"abd98293-88ef-40fd-89f0-09cc9202dea2");
INSERT INTO SM_AH
	VALUES ("113a47d3-f670-487e-971a-900b3aa1bff8",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("113a47d3-f670-487e-971a-900b3aa1bff8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'// Make sure there are no instances of A
select many as from instances of A;
for each a in as
  delete object instance a;
end for;

select many as from instances of A;

if ( (empty as or not_empty as) and not (empty as and not_empty as) )
   LOG::LogSuccess (message:"Test Compound Expressions - Function Invocations - not_empty/empty") ;
else
   LOG::LogFailure (message:"Test Compound Expressions - Function Invocations - not_empty/empty") ;
end if;

if ( (2 + cardinality as + 1) == 3 )
   LOG::LogSuccess (message:"Test Compound Expressions - Function Invocations - cardinality") ;
else
   LOG::LogFailure (message:"Test Compound Expressions - Function Invocations - cardinality") ;
end if;

// send next test event back to controlling object
select any dr from instances of DR;
generate DR2:''next test'' () to dr;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("e9d477ba-60ec-4832-81b5-a8ea31f27e91",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"e47a491e-d456-4341-8d03-81d11ffdf9f5");
INSERT INTO SM_AH
	VALUES ("e9d477ba-60ec-4832-81b5-a8ea31f27e91",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("e9d477ba-60ec-4832-81b5-a8ea31f27e91",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'
if ( ( ( TRAN::ret_int(i:1) + TRAN::ret_int(i:2) ) * ( TRAN::ret_int(i:5) - 3 ) ) == 6 )
   LOG::LogSuccess (message:"Test Compound Expressions - Transformer Invocations - int") ;
else
   LOG::LogFailure (message:"Test Compound Expressions - Transformer Invocations - int") ;
end if;

if ( (TRAN::ret_string(s:"hi") + " " + TRAN::ret_string(s:"there")) == "hi there")
   LOG::LogSuccess (message:"Test Compound Expressions - Transformer Invocations - string") ;
else
   LOG::LogFailure (message:"Test Compound Expressions - Transformer Invocations - string") ;
end if;

// re-entrant invocation of function that returns a passed string
s = TRAN::ret_string( s: TRAN::ret_string( s:"abc" ) );
if ( "abc" == s )
   LOG::LogSuccess (message:"Test Compound Expressions - Transformer Invocations - passing and returning a string") ;
else
   LOG::LogFailure (message:"Test Compound Expressions - Transformer Invocations - passing and returning a string") ;
end if;
 
// send next test event back to controlling object
select any dr from instances of DR;
generate DR2:''next test'' () to dr;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("ada5ad94-e33b-4fc3-a42e-9c77bc96607b",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"f1acd1cd-eaa9-438d-8ca5-a7d654fc7474");
INSERT INTO SM_AH
	VALUES ("ada5ad94-e33b-4fc3-a42e-9c77bc96607b",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("ada5ad94-e33b-4fc3-a42e-9c77bc96607b",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'
BrTstTimeDate = TIM::create_date (day:1, month:2, year:2003, second:4, minute:5, hour:6);

if ( (TIM::get_day(date:BrTstTimeDate) + TIM::get_month(date:BrTstTimeDate) + TIM::get_hour(date:BrTstTimeDate) + 2) == 11)
   LOG::LogSuccess (message:"Test Compund Expressions - Compound Expressions using Bridge Invocations") ;
else
   LOG::LogFailure (message:"Test Compund Expressions - Compound Expressions using Bridge Invocations") ;
end if;

// send next test event back to controlling object
select any dr from instances of DR;
generate DR2:''next test'' () to dr;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("c8dd4f27-3f5f-42f3-b7e1-41baca5742c7",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"64a83d4c-e1d6-48e6-9348-b45cf4cbf53f");
INSERT INTO SM_AH
	VALUES ("c8dd4f27-3f5f-42f3-b7e1-41baca5742c7",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("c8dd4f27-3f5f-42f3-b7e1-41baca5742c7",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'if ((1 + 2*3 - 6/3 + 8%3) == 7)
   LOG::LogSuccess (message:"Test Compound Expressions - Order of Operations - int") ;
else
   LOG::LogFailure (message:"Test Compound Expressions - Order of Operations - int") ;
end if;

// real:
if ((1.1 + 4.4/2 - 2.2) - 1.1 < 0.000001)
   LOG::LogSuccess (message:"Test Compound Expressions - Order of Operations - real") ;
else
   LOG::LogFailure (message:"Test Compound Expressions - Order of Operations - real") ;
end if;

// send next test event back to controlling object
select any dr from instances of DR;
generate DR2:''next test'' () to dr;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("4d46ca03-27e7-41fa-ae9c-c1883aa5b635",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"ecb3b3a8-e11a-4268-ae73-dccb8e608519");
INSERT INTO SM_AH
	VALUES ("4d46ca03-27e7-41fa-ae9c-c1883aa5b635",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("4d46ca03-27e7-41fa-ae9c-c1883aa5b635",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'x = ((1+3)*(4-2)/(10-2)) + ((1+3)*(4-2)/(10-2)) + ((1+3)*(4-2)/(10-2)) +
     ((1+3)*(4-2)/(10-2)) + ((1+3)*(4-2)/(10-2)) + ((1+3)*(4-2)/(10-2)) +
     ((1+3)*(4-2)/(10-2)) + ((1+3)*(4-2)/(10-2)) + ((1+3)*(4-2)/(10-2)) +
     ((1+3)*(4-2)/(10-2)) + ((1+3)*(4-2)/(10-2)) + ((1+3)*(4-2)/(10-2)) +
     ((1+3)*(4-2)/(10-2)) + ((1+3)*(4-2)/(10-2)) + ((1+3)*(4-2)/(10-2)) +
     ((1+3)*(4-2)/(10-2)) + ((1+3)*(4-2)/(10-2)) + ((1+3)*(4-2)/(10-2)) +
     ((1+3)*(4-2)/(10-2)) + ((1+3)*(4-2)/(10-2));

if (x == 20)
   LOG::LogSuccess (message:"Test Compound Expressions - Stress Limits") ;
else
   LOG::LogFailure (message:"Test Compound Expressions - Stress Limits") ;
end if;


//============================================================
// Test complete
//============================================================

// send next test event back to controlling object
select any dr from instances of DR;
generate DR2:''next test'' () to dr;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("e848b977-a97d-44b0-9ccf-3a696c10bf24",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"ea13a90c-aa0f-4e29-91f2-3266c5247e25");
INSERT INTO SM_AH
	VALUES ("e848b977-a97d-44b0-9ccf-3a696c10bf24",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("e848b977-a97d-44b0-9ccf-3a696c10bf24",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'
date = TIM::create_date(second:1, minute:2, hour:3, day:1, month:2, year:1973);
hour = TIM::get_hour (date:date) * 22 + 3;
month = 8 - TIM::get_month (date:date)/2;
day = TIM::get_day (date:date) + 28;

if ((day == 29) and (month == 7) and (hour == 69))
   LOG::LogSuccess (message:"Test Compound Expressios - Bridges within Expressions") ;
else
   LOG::LogFailure (message:"Test Compound Expressios - Bridges within Expressions") ;
end if;

// send next test event back to controlling object
select any dr from instances of DR;
generate DR2:''next test'' () to dr;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("1f433034-9606-4b2f-93f6-1e86a742c4d9",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"7a8247c8-6b5f-4cae-8f57-e9bc2dd29447");
INSERT INTO SM_AH
	VALUES ("1f433034-9606-4b2f-93f6-1e86a742c4d9",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("1f433034-9606-4b2f-93f6-1e86a742c4d9",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'a = TRAN::ret_int(i:5) + 10;
b = TRAN::ret_int(i:8)/4 + TRAN::ret_int(i:3)*2;
c = TRAN::ret_int(i:2) * TRAN::ret_int(i:3)/TRAN::ret_int(i:6);

if ((a == 15) and (b == 8) and (c == 1))
   LOG::LogSuccess (message:"Test Compound Expressions - Transforms within Expressions") ;
else
   LOG::LogFailure (message:"Test Compound Expressions - Transforms within Expressions") ;
end if;

// goto next state
generate TCE4(b1:TRUE,b2:FALSE,i1:1,i2:2,r1:1.0,r2:2.0) to self;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("97d609ef-12cf-4f10-9e9d-8b40efae4688",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"f6d4cdd5-f696-4bac-9d6e-58c642703b16");
INSERT INTO SM_AH
	VALUES ("97d609ef-12cf-4f10-9e9d-8b40efae4688",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("97d609ef-12cf-4f10-9e9d-8b40efae4688",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'
a = 1;
x = 1.1;
x = (a + 2) + (x - 0.1);

if ((x - 4.0) < 0.000001)
   LOG::LogSuccess (message:"Test Compund Expressions - Cobine Real and Integer Data Types") ;
else
   LOG::LogFailure (message:"Test Compund Expressions - Cobine Real and Integer Data Types") ;
end if;

// send next test event back to controlling object
select any dr from instances of DR;
generate DR4:''test complete'' () to dr;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("e01c638f-2f38-4820-a243-ce6a28325d23",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"86c37ba1-17e1-4f42-8fc9-40c6c70cef28");
INSERT INTO SM_AH
	VALUES ("e01c638f-2f38-4820-a243-ce6a28325d23",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("e01c638f-2f38-4820-a243-ce6a28325d23",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'select any dr from instances of DR;

// Unary Ops in the action language
//
// These are handled in a1test_exconfig, not here
//  empty <handle>        // returns bool
//  not_empty <handle>    // returns bool
//  cardinality <handle>  // returns int
//
// The following are tested with compound expressions:
//
//  not <boolean expression>
//
//    <boolean expression> is one that evaluates to TRUE or FALSE
//
//  <unary op> <expression>
//
//      <expression> is anything that evalates to real or int value:
//        literal, attribute, local var, received event data item, 
//        simple expression, compound expression, transform
//        invocation, bridge invocation.
//
//      <unary op> is + or -

LOG::LogInfo(message:"Starting Test Compound Expressions - Unary Ops") ;

if (true)  // Create a local scope

// local
a=1;
b=2;
ans = not ( (a ==b) AND (b == a) );
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - local var") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - local var") ;
end if;

// literal
ans = not ( (1 == 2) AND (3 == 3) );
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - literal") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - literal") ;
end if;

// received event
ans = not ( (rcvd_evt.b1 == rcvd_evt.b2) AND (rcvd_evt.b1 == rcvd_evt.b1) );
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - rcvd_evt") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - rcvd_evt") ;
end if;

// attribute of object - self
ans = not ( (self.b1 == self.b2) AND (self.b1 == self.b1) );
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - self") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - self") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans = not ( (tce.b1 == tce.b2) AND (tce.b1 == tce.b1) );
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - inst_ref") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - inst_ref") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
ans = not ( (not_empty tce AND empty no_instances) AND (empty tce AND not_empty no_instances) );
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - functions") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - functions") ;
end if;

// transformer invocations
ans = not ( (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:FALSE) ) AND (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:TRUE)));
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - transforms") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - transforms") ;
end if;

// bridge invocations realized
ans = not ( (BR::ret_bool(b:TRUE) AND BR::ret_bool(b:FALSE) ) AND (BR::ret_bool(b:TRUE) AND BR::ret_bool(b:TRUE)));
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - bridge - realized") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - bridge - realized") ;
end if;

// unary op + int

// local
a=1;
b=2;
ans1 = + ( a + b );
if ( ans1 == 3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - local var - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - local var - int") ;
end if;

// literal
ans1 = + ( 1 + 2 );
if ( ans1 == 3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - literal - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - literal - int") ;
end if;

// received event
ans1 = + ( rcvd_evt.i1 + rcvd_evt.i2);
if ( ans1 == 3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - supp data - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - supp data - int") ;
end if;

// attribute of object - self
ans1 = + ( self.i1 + self.i2);
if ( ans1 == 3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - self - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - self - int") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans1 = +(tce.i1 + tce.i2);
if ( ans1 == 3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - inst_ref - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - inst_ref - int") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;

ans1 = + ( (cardinality tce ) + 2*((cardinality no_instances)+1));
if ( ans1 == 3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - cardinality - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - cardinality - int") ;
end if;

// transformer invocations
ans1 = + ( TRAN::ret_int(i:5) + TRAN::ret_int(i:-2) );
if ( ans1 == 3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - transform - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - transform - int") ;
end if;

// bridge invocations realized
ans1 = + ( BR::ret_int(i:-3) + BR::ret_int(i:6) );
if ( ans1 == 3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - bridge - realized - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - bridge - realized - int") ;
end if;


// unary op - int

// local
a=1;
b=2;
ans1 = - ( a + b );
if ( ans1 == -3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - local var - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - local var - int") ;
end if;

// literal
ans1 = - ( 1 + 2 );
if ( ans1 == -3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - literal - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - literal - int") ;
end if;

// received event
ans1 = - ( rcvd_evt.i1 + rcvd_evt.i2);
if ( ans1 == -3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - supp data - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - supp data - int") ;
end if;

// attribute of object - self
ans1 = - ( self.i1 + self.i2);
if ( ans1 == -3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - self - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - self - int") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans1 = -(tce.i1 + tce.i2);
if ( ans1 == -3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - inst_ref - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - inst_ref - int") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
ans1 = - ( (cardinality tce ) + 2*((cardinality no_instances)+1));
if ( ans1 == -3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - cardinality - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - cardinality - int") ;
end if;

// transformer invocations
ans1 = - ( TRAN::ret_int(i:5) + TRAN::ret_int(i:-2) );
if ( ans1 == -3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - transform - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - transform - int") ;
end if;

// bridge invocations realized
ans1 = - ( BR::ret_int(i:-3) + BR::ret_int(i:6) );
if ( ans1 == -3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - bridge - realized - int") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - bridge - realized - int") ;
end if;

end if;   // end local scope

if (true)  // create local scope

// real

// unary op + real

// local
a=1.0;
b=2.0;
ans2 = + ( a + b );
if ( ans2 > 2.9 and ans2 < 3.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - local var - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - local var - real") ;
end if;

// literal
ans2 = + ( 1.0 + 2.0 );
if ( ans2 > 2.9 and ans2 < 3.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - literal - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - literal - real") ;
end if;

// received event
ans2 = + ( rcvd_evt.r1 + rcvd_evt.r2);
if ( ans2 > 2.9 and ans2 < 3.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - supp data - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - supp data - real") ;
end if;

// attribute of object - self
ans2 = + ( self.r1 + self.r2);
if ( ans2 > 2.9 and ans2 < 3.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - self - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - self - real") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans2 = +(tce.r1 + tce.r2);
if ( ans2 > 2.9 and ans2 < 3.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - inst_ref - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - inst_ref - real") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;

ans2 = + ( (cardinality tce * 1.0) + 2*((cardinality no_instances)+1.0));
if ( ans2 > 2.9 and ans2 < 3.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - cardinality - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - cardinality - real") ;
end if;

// transformer invocations
ans2 = + ( TRAN::ret_real(r:5.0) + TRAN::ret_real(r:-2.0) );
if ( ans2 > 2.9 and ans2 < 3.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - transform - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - transform - real") ;
end if;

// bridge invocations realized
ans2 = + ( BR::ret_real(r:-3.0) + BR::ret_real(r:6.0) );
if ( ans2 > 2.9 and ans2 < 3.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - bridge - realized - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - bridge - realized - real") ;
end if;


// unary op - real

// local
a=1.0;
b=2.0;
ans2 = - ( a + b );
if ( ans2 > -3.1 and ans2 < -2.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - local var - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - local var - real") ;
end if;

// literal
ans2 = - ( 1.0 + 2.0 );
if ( ans2 > -3.1 and ans2 < -2.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - literal - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - literal - real") ;
end if;

// received event
ans2 = - ( rcvd_evt.r1 + rcvd_evt.r2);
if ( ans2 >  -3.1 and ans2 < -2.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - supp data - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - supp data - real") ;
end if;

// attribute of object - self
ans2 = - ( self.r1 + self.r2);
if ( ans2 >  -3.1 and ans2 < -2.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - self - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - self - real") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans2 = -(tce.r1 + tce.r2);
if ( ans2 >  -3.1 and ans2 < -2.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - inst_ref - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - inst_ref - real") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
ans2 = - ( (cardinality tce * 1.0) + 2*((cardinality no_instances)+1.0));
if ( ans2 > -3.1 and ans2 < -2.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - cardinality - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - cardinality - real") ;
end if;

// transformer invocations
ans2 = - ( TRAN::ret_real(r:5.0) + TRAN::ret_real(r:-2.0) );
if ( ans2 > -3.1 and ans2 < -2.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - transform - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - transform - real") ;
end if;

// bridge invocations realized
ans2 = - ( BR::ret_real(r:-3.0) + BR::ret_real(r:6.0) );
if ( ans2 > -3.1 and ans2 < -2.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - bridge - realized - real") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - bridge - realized - real") ;
end if;

end if;  // end local scope

if (true)  // create local scope

// single

// local
a1=FALSE;
ans = not ( a1 );
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - local var - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - local var - single") ;
end if;

// literal
ans = not ( FALSE );
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - literal - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - literal - single") ;
end if;

// received event
ans = not ( rcvd_evt.b2 );
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - rcvd_evt - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - rcvd_evt - single") ;
end if;

// attribute of object - self
ans = not ( self.b2 );
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - self - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - self - single") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans = not ( tce.b2 );
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - inst_ref - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - inst_ref - single") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
ans = not ( empty tce );
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - functions - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - functions - single") ;
end if;

// transformer invocations
ans = not ( TRAN::ret_bool(b:FALSE) );
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - transforms - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - transforms - single") ;
end if;

// bridge invocations realized
ans = not ( BR::ret_bool(b:FALSE) );
if ( ans == TRUE )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of not expression - bridge - realized - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of not expression - bridge - realized - single") ;
end if;

end if;  // end local scope
if (true)  // create local scope
// unary op + int


// local
b=2;
ans1 = + ( b );
if ( ans1 == 2 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - local var - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - local var - int - single") ;
end if;

// literal
ans1 = + ( 3 );
if ( ans1 == 3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - literal - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - literal - int - single") ;
end if;

// received event
ans1 = + ( rcvd_evt.i2 );
if ( ans1 == 2 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - supp data - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - supp data - int - single") ;
end if;

// attribute of object - self
ans1 = + ( self.i2);
if ( ans1 == 2 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - self - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - self - int - single") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans1 = +(tce.i2);
if ( ans1 == 2 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - inst_ref - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - inst_ref - int - single") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;

ans1 = + ( cardinality tce );
if ( ans1 == 1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - cardinality - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - cardinality - int - single") ;
end if;

// transformer invocations
ans1 = + ( TRAN::ret_int(i:3) );
if ( ans1 == 3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - transform - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - transform - int - single") ;
end if;

// bridge invocations realized
ans1 = + ( BR::ret_int(i:3) );
if ( ans1 == 3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - bridge - realized - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - bridge - realized - int - single") ;
end if;


// unary op - int

// local
b=2;
ans1 = - ( b );
if ( ans1 == -2 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - local var - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - local var - int - single") ;
end if;

// literal
ans1 = - ( 2 );
if ( ans1 == -2 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - literal - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - literal - int - single") ;
end if;

// received event
ans1 = - ( rcvd_evt.i2 );
if ( ans1 == -2 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - supp data - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - supp data - int - single") ;
end if;

// attribute of object - self
ans1 = - ( self.i2 );
if ( ans1 == -2 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - self - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - self - int - single") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans1 = -(tce.i2);
if ( ans1 == -2 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - inst_ref - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - inst_ref - int - single") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
ans1 = - ( cardinality tce );
if ( ans1 == -1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - cardinality - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - cardinality - int - single") ;
end if;

// transformer invocations
ans1 = - ( TRAN::ret_int(i:3) );
if ( ans1 == -3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - transform - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - transform - int - single") ;
end if;

// bridge invocations realized
ans1 = - ( BR::ret_int(i:-3) );
if ( ans1 == 3 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - bridge - realized - int - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - bridge - realized - int - single") ;
end if;

end if;   // end local scope
if (true)  // create local scope

// real

// unary op + real

// local
b=2.0;
ans2 = + ( b );
if ( ans2 > 1.9 and ans2 < 2.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - local var - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - local var - real - single") ;
end if;

// literal
ans2 = + ( 2.0 );
if ( ans2 > 1.9 and ans2 < 2.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - literal - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - literal - real - single") ;
end if;

// received event
ans2 = + ( rcvd_evt.r2);
if ( ans2 > 1.9 and ans2 < 2.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - supp data - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - supp data - real - single") ;
end if;

// attribute of object - self
ans2 = + ( self.r2 );
if ( ans2 > 1.9 and ans2 < 2.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - self - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - self - real - single") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans2 = +(tce.r2);
if ( ans2 > 1.9 and ans2 < 2.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - inst_ref - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - inst_ref - real - single") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;

ans2 = + ( cardinality tce * 1.0 );
if ( ans2 > 0.9 and ans2 < 1.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - cardinality - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - cardinality - real - single") ;
end if;

// transformer invocations
ans2 = + ( TRAN::ret_real(r:3.0) );
if ( ans2 > 2.9 and ans2 < 3.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - transform - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - transform - real - single") ;
end if;

// bridge invocations realized
ans2 = + ( BR::ret_real(r:3.0) ); 
if ( ans2 > 2.9 and ans2 < 3.1 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - bridge - realized - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - bridge - realized - real - single") ;
end if;


// unary op - real

// local
b=3.0;
ans2 = - ( b );
if ( ans2 > -3.1 and ans2 < -2.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - local var - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - local var - real - single") ;
end if;

// literal
ans2 = - ( 3.0 );
if ( ans2 > -3.1 and ans2 < -2.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - literal - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - literal - real - single") ;
end if;

// received event
ans2 = - ( rcvd_evt.r2 );
if ( ans2 > -2.1 and ans2 < -1.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - supp data - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - supp data - real - single") ;
end if;

// attribute of object - self
ans2 = - ( self.r2 );
if ( ans2 > -2.1 and ans2 < -1.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of + (expression) - self - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of + (expression) - self - real - single") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans2 = -(tce.r2);
if ( ans2 > -2.1 and ans2 < -1.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - inst_ref - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - inst_ref - real - single") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
ans2 = - ( (cardinality tce * 1.0) );
if ( ans2 > -1.1 and ans2 < -.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - cardinality - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - cardinality - real - single") ;
end if;

// transformer invocations
ans2 = - ( TRAN::ret_real(r:3.0) );
if ( ans2 > -3.1 and ans2 < 2.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - transform - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - transform - real - single") ;
end if;

// bridge invocations realized
ans2 = - ( BR::ret_real(r:3.0) );
if ( ans2 > -3.1 and ans2 < -2.9 )
  LOG::LogSuccess(message:"TCE - Unary Ops - assignment of - (expression) - bridge - realized - real - single") ;
else
  LOG::LogFailure(message:"TCE - Unary Ops - assignment of - (expression) - bridge - realized - real - single") ;
end if;

end if;  // close local scope


// goto next state
generate TCE4(b1:TRUE,b2:FALSE,i1:1,i2:2,r1:1.0,r2:2.0) to self;


',
	'');
INSERT INTO SM_MOAH
	VALUES ("bcfe0763-a66c-4caa-9f77-8c99405a04ce",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"153b7920-f38d-4523-a9c0-49b6c7b0d731");
INSERT INTO SM_AH
	VALUES ("bcfe0763-a66c-4caa-9f77-8c99405a04ce",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("bcfe0763-a66c-4caa-9f77-8c99405a04ce",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'select any dr from instances of DR;

// If statements
//
//   if <boolean expression> 
//   elif <boolean expression>
//
// Boolean Expressions
// -------------------
//
//  not <boolean expression>
//  <expression> <boolean operation> <expression>
//
//    <boolean expression> is one that evaluates to TRUE or FALSE
//
//    <expression>  - simple, or compund.  Both must evaluate to
//     the same type: arithmetic, boolean, or string.
//

LOG::LogInfo(message:"Starting Test Compound Expressions - If Expressions") ;

if (true)  // create local scope

// local
a=1;
b=2;
if ( not ( (a ==b) AND (b == a) ) )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - local var") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - local var") ;
end if;

// literal
if ( not ( (1 == 2) AND (3 == 3) ) )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - literal") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - literal") ;
end if;

// received event

if ( not ( (rcvd_evt.b1 == rcvd_evt.b2) AND (rcvd_evt.b1 == rcvd_evt.b1) ) )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - rcvd_evt") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - rcvd_evt") ;
end if;

// attribute of object - self

if ( not ( (self.b1 == self.b2) AND (self.b1 == self.b1) ) )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - self") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - self") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if ( not ( (tce.b1 == tce.b2) AND (tce.b1 == tce.b1) ) )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - inst_ref") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - inst_ref") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if ( not ( (not_empty tce AND empty no_instances) AND (empty tce AND not_empty no_instances) ) )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - functions") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - functions") ;
end if;

// transformer invocations
if ( not ( (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:FALSE) ) AND (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:TRUE))) )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - transforms") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - transforms") ;
end if;

// bridge invocations realized

if ( not ( (BR::ret_bool(b:TRUE) AND BR::ret_bool(b:FALSE) ) AND (BR::ret_bool(b:TRUE) AND BR::ret_bool(b:TRUE))) )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - bridge - realized") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - bridge - realized") ;
end if;

// if aritmetic expressions + int

// local
a=1;
b=2;
if ( (+ ( a + b ))  == 3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - local var - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - local var - int") ;
end if;

// literal

if ( (+ ( 1 + 2 )) == 3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - literal - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - literal - int") ;
end if;

// received event

if ( (+ ( rcvd_evt.i1 + rcvd_evt.i2)) == 3 ) 
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - supp data - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - supp data - int") ;
end if;

// attribute of object - self
if ( (+ ( self.i1 + self.i2) ) == 3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - self - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - self - int") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if ( (+(tce.i1 + tce.i2)) == 3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - inst_ref - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - inst_ref - int") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if ( (+ ( (cardinality tce ) + 2*((cardinality no_instances)+1)) ) == 3 ) 
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - cardinality - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - cardinality - int") ;
end if;

// transformer invocations
if ( ( ( TRAN::ret_int(i:5) + TRAN::ret_int(i:-2) ) ) == 3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - transform - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - transform - int") ;
end if;

// bridge invocations realized
if ( (+ ( BR::ret_int(i:-3) + BR::ret_int(i:6) )) == 3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - bridge - realized - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - bridge - realized - int") ;
end if;


// if aritmetic expressions - int

// local
a=1;
b=2;
if ( (- ( a + b )) == -3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - local var - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - local var - int") ;
end if;

// literal
if ( (- ( 1 + 2 )) == -3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - literal - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - literal - int") ;
end if;

// received event
if ( (- ( rcvd_evt.i1 + rcvd_evt.i2)) == -3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - supp data - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - supp data - int") ;
end if;

// attribute of object - self
if ( (- ( self.i1 + self.i2)) == -3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - self - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - self - int") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if ( (-(tce.i1 + tce.i2)) == -3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - inst_ref - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - inst_ref - int") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if ( (- ( (cardinality tce ) + 2*((cardinality no_instances)+1))) == -3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - cardinality - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - cardinality - int") ;
end if;

// transformer invocations
if ( (- ( TRAN::ret_int(i:5) + TRAN::ret_int(i:-2) )) == -3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - transform - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - transform - int") ;
end if;

// bridge invocations realized
if ( (- ( BR::ret_int(i:-3) + BR::ret_int(i:6) )) == -3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - bridge - realized - int") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - bridge - realized - int") ;
end if;

end if;  // end local scope
if (true) // create local scope

// real

// if arithmetic expressios + real

// local
a=1.0;
b=2.0;
if ( (+ ( a + b )) > 2.9 and (+ ( a + b )) < 3.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - local var - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - local var - real") ;
end if;

// literal
if ( (+ ( 1.0 + 2.0 )) > 2.9 and (+ ( 1.0 + 2.0 )) < 3.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - literal - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - literal - real") ;
end if;

// received event
if ( (+ ( rcvd_evt.r1 + rcvd_evt.r2)) > 2.9 and (+ ( rcvd_evt.r1 + rcvd_evt.r2)) < 3.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - supp data - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - supp data - real") ;
end if;

// attribute of object - self
if ( (+ ( self.r1 + self.r2)) > 2.9 and (+ ( self.r1 + self.r2)) < 3.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - self - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - self - real") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if ( (+(tce.r1 + tce.r2)) > 2.9 and (+(tce.r1 + tce.r2)) < 3.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - inst_ref - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - inst_ref - real") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if ( (+ ( (cardinality tce * 1.0) + 2*((cardinality no_instances)+1.0))) > 2.9 and (+ ( (cardinality tce * 1.0) + 2*((cardinality no_instances)+1.0))) < 3.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - cardinality - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - cardinality - real") ;
end if;

// transformer invocations
if ( (+ ( TRAN::ret_real(r:5.0) + TRAN::ret_real(r:-2.0) )) > 2.9 and (+ ( TRAN::ret_real(r:5.0) + TRAN::ret_real(r:-2.0) )) < 3.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - transform - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - transform - real") ;
end if;

// bridge invocations realized
if ( (+ ( BR::ret_real(r:-3.0) + BR::ret_real(r:6.0) )) > 2.9 and (+ ( BR::ret_real(r:-3.0) + BR::ret_real(r:6.0) )) < 3.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - bridge - realized - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - bridge - realized - real") ;
end if;


// if arithmetic expressions -  real

// local
a=1.0;
b=2.0;
if ( (- ( a + b )) > -3.1 and (- ( a + b )) < -2.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - local var - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - local var - real") ;
end if;

// literal
if ( (- ( 1.0 + 2.0 )) > -3.1 and (- ( 1.0 + 2.0 )) < -2.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - literal - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - literal - real") ;
end if;

// received event
if ( (- ( rcvd_evt.r1 + rcvd_evt.r2)) >  -3.1 and (- ( rcvd_evt.r1 + rcvd_evt.r2)) < -2.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - supp data - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - supp data - real") ;
end if;

// attribute of object - self
if ( (- ( self.r1 + self.r2)) >  -3.1 and (- ( self.r1 + self.r2)) < -2.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - self - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - self - real") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if ( (-(tce.r1 + tce.r2)) >  -3.1 and (-(tce.r1 + tce.r2)) < -2.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - inst_ref - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - inst_ref - real") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if ( (- ( (cardinality tce * 1.0) + 2*((cardinality no_instances)+1.0))) > -3.1 and (- ( (cardinality tce * 1.0) + 2*((cardinality no_instances)+1.0))) < -2.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - cardinality - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - cardinality - real") ;
end if;

// transformer invocations
if ( (- ( TRAN::ret_real(r:5.0) + TRAN::ret_real(r:-2.0) )) > -3.1 and (- ( TRAN::ret_real(r:5.0) + TRAN::ret_real(r:-2.0) )) < -2.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - transform - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - transform - real") ;
end if;

// bridge invocations realized
if ( (- ( BR::ret_real(r:-3.0) + BR::ret_real(r:6.0) )) > -3.1 and (- ( BR::ret_real(r:-3.0) + BR::ret_real(r:6.0) )) < -2.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - bridge - realized - real") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - bridge - realized - real") ;
end if;

end if;  // end local scope
if (true) // create local scope

// single

// local
a1=FALSE;
if ( not ( a1 ) == TRUE )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - local var - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - local var - single") ;
end if;

// literal
if ( not ( FALSE ) == TRUE )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - literal - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - literal - single") ;
end if;

// received event
if ( not ( rcvd_evt.b2 ) == TRUE )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - rcvd_evt - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - rcvd_evt - single") ;
end if;

// attribute of object - self
if ( not ( self.b2 ) == TRUE )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - self - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - self - single") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if ( not ( tce.b2 ) == TRUE )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - inst_ref - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - inst_ref - single") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if ( not ( empty tce ) == TRUE )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - functions - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - functions - single") ;
end if;

// transformer invocations
if ( not ( TRAN::ret_bool(b:FALSE) ) == TRUE )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - transforms - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - transforms - single") ;
end if;

// bridge invocations realized
if ( not ( BR::ret_bool(b:FALSE) ) == TRUE )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of not expression - bridge - realized - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of not expression - bridge - realized - single") ;
end if;

end if;  // end local scope
if (true) // create local scope

// if arithmetic expressions op + int

// local
b=2;
if ( +b == 2 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - local var - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - local var - int - single") ;
end if;

// literal
if ( +3 == 3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - literal - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - literal - int - single") ;
end if;

// received event
if ( + ( rcvd_evt.i2 ) == 2 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - supp data - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - supp data - int - single") ;
end if;

// attribute of object - self
if ( + ( self.i2) == 2 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - self - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - self - int - single") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if ( +(tce.i2) == 2 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - inst_ref - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - inst_ref - int - single") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if ( + ( cardinality tce ) == 1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - cardinality - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - cardinality - int - single") ;
end if;

// transformer invocations
if ( + ( TRAN::ret_int(i:3) ) == 3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - transform - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - transform - int - single") ;
end if;

// bridge invocations realized
if ( + ( BR::ret_int(i:3) ) == 3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - bridge - realized - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - bridge - realized - int - single") ;
end if;


// if arithmetic expressions - int

// local
b=2;
if ( -( b ) == -2 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - local var - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - local var - int - single") ;
end if;

// literal
if ( - ( 2 ) == -2 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - literal - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - literal - int - single") ;
end if;

// received event
if ( - ( rcvd_evt.i2 ) == -2 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - supp data - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - supp data - int - single") ;
end if;

// attribute of object - self
if ( - ( self.i2 ) == -2 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - self - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - self - int - single") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if ( -(tce.i2) == -2 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - inst_ref - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - inst_ref - int - single") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if ( - ( cardinality tce ) == -1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - cardinality - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - cardinality - int - single") ;
end if;

// transformer invocations
if ( - ( TRAN::ret_int(i:3) ) == -3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - transform - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - transform - int - single") ;
end if;

// bridge invocations realized
if ( - ( BR::ret_int(i:-3) ) == 3 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - bridge - realized - int - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - bridge - realized - int - single") ;
end if;

end if;  // end local scope
if (true) // begin local scope
// real

// if arithmetic expressions + real

// local
b=2.0;
if ( + ( b ) > 1.9 and + ( b ) < 2.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - local var - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - local var - real - single") ;
end if;

// literal
if ( + ( 2.0 ) > 1.9 and + ( 2.0 ) < 2.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - literal - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - literal - real - single") ;
end if;

// received event
if ( + ( rcvd_evt.r2) > 1.9 and + ( rcvd_evt.r2) < 2.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - supp data - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - supp data - real - single") ;
end if;

// attribute of object - self
if ( + ( self.r2 ) > 1.9 and + ( self.r2 ) < 2.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - self - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - self - real - single") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if ( +(tce.r2) > 1.9 and +(tce.r2) < 2.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - inst_ref - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - inst_ref - real - single") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if ( + ( cardinality tce * 1.0 ) > 0.9 and + ( cardinality tce * 1.0 ) < 1.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - cardinality - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - cardinality - real - single") ;
end if;

// transformer invocations
if ( + ( TRAN::ret_real(r:3.0) ) > 2.9 and + ( TRAN::ret_real(r:3.0) ) < 3.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - transform - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - transform - real - single") ;
end if;

// bridge invocations realized
if ( + ( BR::ret_real(r:3.0) ) > 2.9 and + ( BR::ret_real(r:3.0) ) < 3.1 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - bridge - realized - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - bridge - realized - real - single") ;
end if;


// if arithmetic expressions - real

// local
b=3.0;
if ( - ( b ) > -3.1 and - ( b ) < -2.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - local var - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - local var - real - single") ;
end if;

// literal
if ( - ( 3.0 ) > -3.1 and - ( 3.0 ) < -2.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - literal - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - literal - real - single") ;
end if;

// received event
if ( - ( rcvd_evt.r2 ) > -2.1 and - ( rcvd_evt.r2 ) < -1.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - supp data - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - supp data - real - single") ;
end if;

// attribute of object - self
if ( - ( self.r2 ) > -2.1 and - ( self.r2 ) < -1.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of + (expression) - self - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of + (expression) - self - real - single") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if ( -(tce.r2) > -2.1 and -(tce.r2) < -1.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - inst_ref - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - inst_ref - real - single") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if ( - ( (cardinality tce * 1.0) ) > -1.1 and - ( (cardinality tce * 1.0) ) < -.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - cardinality - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - cardinality - real - single") ;
end if;

// transformer invocations
if ( - ( TRAN::ret_real(r:3.0) ) > -3.1 and - ( TRAN::ret_real(r:3.0) ) < 2.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - transform - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - transform - real - single") ;
end if;

// bridge invocations realized
if ( - ( BR::ret_real(r:3.0) ) > -3.1 and - ( BR::ret_real(r:3.0) ) < -2.9 )
  LOG::LogSuccess(message:"TCE - If Expressions - assignment of - (expression) - bridge - realized - real - single") ;
else
  LOG::LogFailure(message:"TCE - If Expressions - assignment of - (expression) - bridge - realized - real - single") ;
end if;

end if; // end local scope
if (true) // create local scope
//
//
select any dr from instances of DR;

// else statements
//
//   elif <boolean expression>
//
// Boolean Expressions
// -------------------
//
//  not <boolean expression>
//  <expression> <boolean operation> <expression>
//
//    <boolean expression> is one that evaluates to TRUE or FALSE
//
//    <expression>  - simple, or compund.  Both must evaluate to
//     the same type: arithmetic, boolean, or string.
//

LOG::LogInfo(message:"Starting Test Compound Expressions - Else Expressions") ;

// local
a=1;
b=2;
if (FALSE)
  // do nothing
elif ( not ( (a ==b) AND (b == a) ) )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - local var") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - local var") ;
end if;

// literal
if (FALSE)
  // do nothing
elif ( not ( (1 == 2) AND (3 == 3) ) )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - literal") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - literal") ;
end if;

// received event

if (FALSE)
  // do nothing
elif ( not ( (rcvd_evt.b1 == rcvd_evt.b2) AND (rcvd_evt.b1 == rcvd_evt.b1) ) )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - rcvd_evt") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - rcvd_evt") ;
end if;

// attribute of object - self

if (FALSE)
  // do nothing
elif ( not ( (self.b1 == self.b2) AND (self.b1 == self.b1) ) )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - self") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - self") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if (FALSE)
  // do nothing
elif ( not ( (tce.b1 == tce.b2) AND (tce.b1 == tce.b1) ) )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - inst_ref") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - inst_ref") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if (FALSE)
  // do nothing
elif ( not ( (not_empty tce AND empty no_instances) AND (empty tce AND not_empty no_instances) ) )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - functions") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - functions") ;
end if;

// transformer invocations
if (FALSE)
  // do nothing
elif ( not ( (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:FALSE) ) AND (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:TRUE))) )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - transforms") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - transforms") ;
end if;

// bridge invocations realized

if (FALSE)
  // do nothing
elif ( not ( (BR::ret_bool(b:TRUE) AND BR::ret_bool(b:FALSE) ) AND (BR::ret_bool(b:TRUE) AND BR::ret_bool(b:TRUE))) )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - bridge - realized") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - bridge - realized") ;
end if;

end if;  // end local scope
if (true)  // create local scope

// if aritmetic expressions + int

// local
a=1;
b=2;
if (FALSE)
  // do nothing
elif ( (+ ( a + b ))  == 3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - local var - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - local var - int") ;
end if;

// literal

if (FALSE)
  // do nothing
elif ( (+ ( 1 + 2 )) == 3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - literal - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - literal - int") ;
end if;

// received event

if (FALSE)
  // do nothing
elif ( (+ ( rcvd_evt.i1 + rcvd_evt.i2)) == 3 ) 
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - supp data - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - supp data - int") ;
end if;

// attribute of object - self
if (FALSE)
  // do nothing
elif ( (+ ( self.i1 + self.i2) ) == 3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - self - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - self - int") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if (FALSE)
  // do nothing
elif ( (+(tce.i1 + tce.i2)) == 3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - inst_ref - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - inst_ref - int") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if (FALSE)
  // do nothing
elif ( (+ ( (cardinality tce ) + 2*((cardinality no_instances)+1)) ) == 3 ) 
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - cardinality - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - cardinality - int") ;
end if;

// transformer invocations
if (FALSE)
  // do nothing
elif ( ( ( TRAN::ret_int(i:5) + TRAN::ret_int(i:-2) ) ) == 3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - transform - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - transform - int") ;
end if;

// bridge invocations realized
if (FALSE)
  // do nothing
elif ( (+ ( BR::ret_int(i:-3) + BR::ret_int(i:6) )) == 3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - bridge - realized - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - bridge - realized - int") ;
end if;


// if aritmetic expressions - int

// local
a=1;
b=2;
if (FALSE)
  // do nothing
elif ( (- ( a + b )) == -3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - local var - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - local var - int") ;
end if;

// literal
if (FALSE)
  // do nothing
elif ( (- ( 1 + 2 )) == -3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - literal - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - literal - int") ;
end if;

// received event
if (FALSE)
  // do nothing
elif ( (- ( rcvd_evt.i1 + rcvd_evt.i2)) == -3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - supp data - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - supp data - int") ;
end if;

// attribute of object - self
if (FALSE)
  // do nothing
elif ( (- ( self.i1 + self.i2)) == -3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - self - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - self - int") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if (FALSE)
  // do nothing
elif ( (-(tce.i1 + tce.i2)) == -3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - inst_ref - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - inst_ref - int") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if (FALSE)
  // do nothing
elif ( (- ( (cardinality tce ) + 2*((cardinality no_instances)+1))) == -3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - cardinality - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - cardinality - int") ;
end if;

// transformer invocations
if (FALSE)
  // do nothing
elif ( (- ( TRAN::ret_int(i:5) + TRAN::ret_int(i:-2) )) == -3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - transform - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - transform - int") ;
end if;

// bridge invocations realized
if (FALSE)
  // do nothing
elif ( (- ( BR::ret_int(i:-3) + BR::ret_int(i:6) )) == -3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - bridge - realized - int") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - bridge - realized - int") ;
end if;

end if;  // end local scope
if (true)  // create local scope


// real

// if arithmetic expressios + real

// local
a=1.0;
b=2.0;
if (FALSE)
  // do nothing
elif ( (+ ( a + b )) > 2.9 and (+ ( a + b )) < 3.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - local var - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - local var - real") ;
end if;

// literal
if (FALSE)
  // do nothing
elif ( (+ ( 1.0 + 2.0 )) > 2.9 and (+ ( 1.0 + 2.0 )) < 3.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - literal - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - literal - real") ;
end if;

// received event
if (FALSE)
  // do nothing
elif ( (+ ( rcvd_evt.r1 + rcvd_evt.r2)) > 2.9 and (+ ( rcvd_evt.r1 + rcvd_evt.r2)) < 3.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - supp data - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - supp data - real") ;
end if;

// attribute of object - self
if (FALSE)
  // do nothing
elif ( (+ ( self.r1 + self.r2)) > 2.9 and (+ ( self.r1 + self.r2)) < 3.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - self - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - self - real") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if (FALSE)
  // do nothing
elif ( (+(tce.r1 + tce.r2)) > 2.9 and (+(tce.r1 + tce.r2)) < 3.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - inst_ref - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - inst_ref - real") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if (FALSE)
  // do nothing
elif ( (+ ( (cardinality tce * 1.0) + 2*((cardinality no_instances)+1.0))) > 2.9 and (+ ( (cardinality tce * 1.0) + 2*((cardinality no_instances)+1.0))) < 3.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - cardinality - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - cardinality - real") ;
end if;

// transformer invocations
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( (+ ( TRAN::ret_real(r:5.0) + TRAN::ret_real(r:-2.0) )) > 2.9 and (+ ( TRAN::ret_real(r:5.0) + TRAN::ret_real(r:-2.0) )) < 3.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - transform - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - transform - real") ;
end if;

// bridge invocations realized
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( (+ ( BR::ret_real(r:-3.0) + BR::ret_real(r:6.0) )) > 2.9 and (+ ( BR::ret_real(r:-3.0) + BR::ret_real(r:6.0) )) < 3.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - bridge - realized - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - bridge - realized - real") ;
end if;


// if arithmetic expressions -  real

// local
a=1.0;
b=2.0;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( (- ( a + b )) > -3.1 and (- ( a + b )) < -2.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - local var - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - local var - real") ;
end if;

// literal
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( (- ( 1.0 + 2.0 )) > -3.1 and (- ( 1.0 + 2.0 )) < -2.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - literal - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - literal - real") ;
end if;

// received event
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( (- ( rcvd_evt.r1 + rcvd_evt.r2)) >  -3.1 and (- ( rcvd_evt.r1 + rcvd_evt.r2)) < -2.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - supp data - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - supp data - real") ;
end if;

// attribute of object - self
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( (- ( self.r1 + self.r2)) >  -3.1 and (- ( self.r1 + self.r2)) < -2.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - self - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - self - real") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( (-(tce.r1 + tce.r2)) >  -3.1 and (-(tce.r1 + tce.r2)) < -2.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - inst_ref - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - inst_ref - real") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( (- ( (cardinality tce * 1.0) + 2*((cardinality no_instances)+1.0))) > -3.1 and (- ( (cardinality tce * 1.0) + 2*((cardinality no_instances)+1.0))) < -2.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - cardinality - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - cardinality - real") ;
end if;

// transformer invocations
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( (- ( TRAN::ret_real(r:5.0) + TRAN::ret_real(r:-2.0) )) > -3.1 and (- ( TRAN::ret_real(r:5.0) + TRAN::ret_real(r:-2.0) )) < -2.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - transform - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - transform - real") ;
end if;

// bridge invocations realized
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( (- ( BR::ret_real(r:-3.0) + BR::ret_real(r:6.0) )) > -3.1 and (- ( BR::ret_real(r:-3.0) + BR::ret_real(r:6.0) )) < -2.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - bridge - realized - real") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - bridge - realized - real") ;
end if;


end if;  // end local scope
if (true)  // create local scope


// single

// local
a1=FALSE;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( not ( a1 ) == TRUE )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - local var - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - local var - single") ;
end if;

// literal
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( not ( FALSE ) == TRUE )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - literal - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - literal - single") ;
end if;

// received event
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( not ( rcvd_evt.b2 ) == TRUE )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - rcvd_evt - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - rcvd_evt - single") ;
end if;

// attribute of object - self
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( not ( self.b2 ) == TRUE )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - self - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - self - single") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( not ( tce.b2 ) == TRUE )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - inst_ref - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - inst_ref - single") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( not ( empty tce ) == TRUE )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - functions - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - functions - single") ;
end if;

// transformer invocations
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( not ( TRAN::ret_bool(b:FALSE) ) == TRUE )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - transforms - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - transforms - single") ;
end if;

// bridge invocations realized
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( not ( BR::ret_bool(b:FALSE) ) == TRUE )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of not expression - bridge - realized - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of not expression - bridge - realized - single") ;
end if;

end if;  // end local scope
if (true)  // create local scope


// if arithmetic expressions op + int

// local
b=2;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( +b == 2 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - local var - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - local var - int - single") ;
end if;

// literal
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( +3 == 3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - literal - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - literal - int - single") ;
end if;

// received event
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( + ( rcvd_evt.i2 ) == 2 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - supp data - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - supp data - int - single") ;
end if;

// attribute of object - self
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( + ( self.i2) == 2 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - self - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - self - int - single") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( +(tce.i2) == 2 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - inst_ref - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - inst_ref - int - single") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( + ( cardinality tce ) == 1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - cardinality - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - cardinality - int - single") ;
end if;

// transformer invocations
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( + ( TRAN::ret_int(i:3) ) == 3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - transform - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - transform - int - single") ;
end if;

// bridge invocations realized
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( + ( BR::ret_int(i:3) ) == 3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - bridge - realized - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - bridge - realized - int - single") ;
end if;


// if arithmetic expressions - int

// local
b=2;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( -( b ) == -2 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - local var - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - local var - int - single") ;
end if;

// literal
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( - ( 2 ) == -2 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - literal - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - literal - int - single") ;
end if;

// received event
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( - ( rcvd_evt.i2 ) == -2 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - supp data - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - supp data - int - single") ;
end if;

// attribute of object - self
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( - ( self.i2 ) == -2 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - self - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - self - int - single") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( -(tce.i2) == -2 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - inst_ref - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - inst_ref - int - single") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( - ( cardinality tce ) == -1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - cardinality - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - cardinality - int - single") ;
end if;

// transformer invocations
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( - ( TRAN::ret_int(i:3) ) == -3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - transform - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - transform - int - single") ;
end if;

// bridge invocations realized
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( - ( BR::ret_int(i:-3) ) == 3 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - bridge - realized - int - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - bridge - realized - int - single") ;
end if;

end if;  // end local scope
if (true)  // create local scope


// real

// if arithmetic expressions + real

// local
b=2.0;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( + ( b ) > 1.9 and + ( b ) < 2.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - local var - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - local var - real - single") ;
end if;

// literal
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( + ( 2.0 ) > 1.9 and + ( 2.0 ) < 2.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - literal - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - literal - real - single") ;
end if;

// received event
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( + ( rcvd_evt.r2) > 1.9 and + ( rcvd_evt.r2) < 2.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - supp data - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - supp data - real - single") ;
end if;

// attribute of object - self
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( + ( self.r2 ) > 1.9 and + ( self.r2 ) < 2.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - self - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - self - real - single") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( +(tce.r2) > 1.9 and +(tce.r2) < 2.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - inst_ref - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - inst_ref - real - single") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( + ( cardinality tce * 1.0 ) > 0.9 and + ( cardinality tce * 1.0 ) < 1.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - cardinality - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - cardinality - real - single") ;
end if;

// transformer invocations
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( + ( TRAN::ret_real(r:3.0) ) > 2.9 and + ( TRAN::ret_real(r:3.0) ) < 3.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - transform - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - transform - real - single") ;
end if;

// bridge invocations realized
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( + ( BR::ret_real(r:3.0) ) > 2.9 and + ( BR::ret_real(r:3.0) ) < 3.1 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - bridge - realized - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - bridge - realized - real - single") ;
end if;


// if arithmetic expressions - real

// local
b=3.0;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( - ( b ) > -3.1 and - ( b ) < -2.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - local var - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - local var - real - single") ;
end if;

// literal
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( - ( 3.0 ) > -3.1 and - ( 3.0 ) < -2.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - literal - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - literal - real - single") ;
end if;

// received event
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( - ( rcvd_evt.r2 ) > -2.1 and - ( rcvd_evt.r2 ) < -1.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - supp data - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - supp data - real - single") ;
end if;

// attribute of object - self
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( - ( self.r2 ) > -2.1 and - ( self.r2 ) < -1.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of + (expression) - self - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of + (expression) - self - real - single") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( -(tce.r2) > -2.1 and -(tce.r2) < -1.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - inst_ref - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - inst_ref - real - single") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( - ( (cardinality tce * 1.0) ) > -1.1 and - ( (cardinality tce * 1.0) ) < -.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - cardinality - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - cardinality - real - single") ;
end if;

// transformer invocations
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( - ( TRAN::ret_real(r:3.0) ) > -3.1 and - ( TRAN::ret_real(r:3.0) ) < 2.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - transform - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - transform - real - single") ;
end if;

// bridge invocations realized
if (FALSE)
  // do nothing
elif (FALSE)
  // do nothing
elif ( - ( BR::ret_real(r:3.0) ) > -3.1 and - ( BR::ret_real(r:3.0) ) < -2.9 )
  LOG::LogSuccess(message:"TCE - Else Expressions - assignment of - (expression) - bridge - realized - real - single") ;
else
  LOG::LogFailure(message:"TCE - Else Expressions - assignment of - (expression) - bridge - realized - real - single") ;
end if;

end if;  // end local scope

generate TCE4:''next test with supp data''(i1:1,i2:2,r1:1.0,r2:2.0,b1:TRUE,b2:FALSE) to self;

',
	'');
INSERT INTO SM_MOAH
	VALUES ("a7264286-7d95-46c0-80e5-5dca7df73875",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"7ed1cb61-8bea-4d55-8e64-94e0a3f7371b");
INSERT INTO SM_AH
	VALUES ("a7264286-7d95-46c0-80e5-5dca7df73875",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("a7264286-7d95-46c0-80e5-5dca7df73875",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'select any dr from instances of DR;

// Expressions as parameters to transforms, bridges, 
// events (generate and precreate)
//
//   (parm:<expression> .... )
//   elif <boolean expression>
//
// Expressions
// -----------
//
//  not <boolean expression>
//  <expression> <boolean operation> <expression>
//
//    <boolean expression> is one that evaluates to TRUE or FALSE
//
//    <expression>  - simple, or compound.  Both must evaluate to
//     the same type: arithmetic, boolean, or string.
//

LOG::LogInfo(message:"Starting Test Compound Expressions - Parm Expressions") ;

// Bridges

// local
a=1;
b=2;
ans = BR::ret_bool(b:(not ( (a ==b) AND (b == a) ) ));
if (ans)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of not expression - local var") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of not expression - local var") ;
end if;

// literal
ans = BR::ret_bool(b:(not ( (1 == 2) AND (3 == 3) ) ));
if ( ans )
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of not expression - literal") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of not expression - literal") ;
end if;

// received event

ans = BR::ret_bool(b:(not ( (rcvd_evt.b1 == rcvd_evt.b2) AND (rcvd_evt.b1 == rcvd_evt.b1) ) ) );
if ( ans )
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of not expression - rcvd_evt") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of not expression - rcvd_evt") ;
end if;

// attribute of object - self
ans = BR::ret_bool(b:( not ( (self.b1 == self.b2) AND (self.b1 == self.b1) ) ) );
if (ans)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of not expression - self") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of not expression - self") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans = BR::ret_bool(b:( not ( (tce.b1 == tce.b2) AND (tce.b1 == tce.b1) ) ) );
if (ans)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of not expression - inst_ref") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of not expression - inst_ref") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
ans = BR::ret_bool(b:( not ( (not_empty tce AND empty no_instances) AND (empty tce AND not_empty no_instances) ) ));
if (ans)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of not expression - functions") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of not expression - functions") ;
end if;

// transformer invocations
ans = BR::ret_bool(b:( not ( (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:FALSE) ) AND (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:TRUE))) ));
if (ans)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of not expression - transforms") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of not expression - transforms") ;
end if;

// bridge invocations realized
ans = BR::ret_bool(b:( not ( (BR::ret_bool(b:TRUE) AND BR::ret_bool(b:FALSE) ) AND (BR::ret_bool(b:TRUE) AND BR::ret_bool(b:TRUE))) ));
if (ans)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of not expression - bridge - realized") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of not expression - bridge - realized") ;
end if;

// if aritmetic expressions + int

// local
a=1;
b=2;
ans1 = BR::ret_int(i:( (+ ( a + b )) ));
if (ans1 == 3)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - local var - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - local var - int") ;
end if;

// literal

ans1 = BR::ret_int(i:( (+ ( 1 + 2 )) ));
if ( ans1 == 3 )
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - literal - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - literal - int") ;
end if;

// received event
ans1 = BR::ret_int(i:(+ ( rcvd_evt.i1 + rcvd_evt.i2)) );
if (ans1 == 3)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - supp data - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - supp data - int") ;
end if;

// attribute of object - self
ans1 = BR::ret_int(i:(+ ( self.i1 + self.i2) ) );
if (ans1 == 3)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - self - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - self - int") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans1 = BR::ret_int(i:(+(tce.i1 + tce.i2)) );
if (ans1 == 3)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - inst_ref - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - inst_ref - int") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
ans1 = BR::ret_int(i:(+ ( (cardinality tce ) + 2*((cardinality no_instances)+1)) ) );
if (ans1 == 3)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - cardinality - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - cardinality - int") ;
end if;

// transformer invocations
ans1 = BR::ret_int(i:( TRAN::ret_int(i:5) + TRAN::ret_int(i:-2) ));
if (ans1 == 3)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - transform - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - transform - int") ;
end if;

// bridge invocations realized
ans1 = BR::ret_int(i:( (+ ( BR::ret_int(i:-3) + BR::ret_int(i:6) )) ));
if (ans1 == 3)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - bridge - realized - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - bridge - realized - int") ;
end if;


// if aritmetic expressions - int

// local
a=1;
b=2;
ans1 = BR::ret_int(i:( (- ( a + b )) ));
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of - (expression) - local var - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of - (expression) - local var - int") ;
end if;

// literal
ans1 = BR::ret_int(i:(- ( 1 + 2 )));
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of - (expression) - literal - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of - (expression) - literal - int") ;
end if;

// received event
ans1 = BR::ret_int(i:(- ( rcvd_evt.i1 + rcvd_evt.i2)));
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of - (expression) - supp data - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of - (expression) - supp data - int") ;
end if;

// attribute of object - self
ans1 = BR::ret_int(i:(- ( self.i1 + self.i2)));
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - self - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of + (expression) - self - int") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans1 = BR::ret_int(i:(-(tce.i1 + tce.i2)));
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of - (expression) - inst_ref - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of - (expression) - inst_ref - int") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
ans1 = BR::ret_int(i:(- ( (cardinality tce ) + 2*((cardinality no_instances)+1))));
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of - (expression) - cardinality - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of - (expression) - cardinality - int") ;
end if;

// transformer invocations
ans1 = BR::ret_int(i:(- ( TRAN::ret_int(i:5) + TRAN::ret_int(i:-2) )) );
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of - (expression) - transform - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of - (expression) - transform - int") ;
end if;

// bridge invocations realized
ans1 = BR::ret_int(i:(- ( BR::ret_int(i:-3) + BR::ret_int(i:6) )));
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Bridge Parm Expressions - assignment of - (expression) - bridge - realized - int") ;
else
  LOG::LogFailure(message:"TCE - Bridge Parm Expressions - assignment of - (expression) - bridge - realized - int") ;
end if;

// Transforms

// local
a=1;
b=2;
ans = TRAN::ret_bool(b:(not ( (a ==b) AND (b == a) ) ));
if (ans)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of not expression - local var") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of not expression - local var") ;
end if;

// literal
ans = TRAN::ret_bool(b:(not ( (1 == 2) AND (3 == 3) ) ));
if ( ans )
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of not expression - literal") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of not expression - literal") ;
end if;

// received event

ans = TRAN::ret_bool(b:(not ( (rcvd_evt.b1 == rcvd_evt.b2) AND (rcvd_evt.b1 == rcvd_evt.b1) ) ) );
if ( ans )
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of not expression - rcvd_evt") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of not expression - rcvd_evt") ;
end if;

// attribute of object - self
ans = TRAN::ret_bool(b:( not ( (self.b1 == self.b2) AND (self.b1 == self.b1) ) ) );
if (ans)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of not expression - self") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of not expression - self") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans = TRAN::ret_bool(b:( not ( (tce.b1 == tce.b2) AND (tce.b1 == tce.b1) ) ) );
if (ans)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of not expression - inst_ref") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of not expression - inst_ref") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
ans = TRAN::ret_bool(b:( not ( (not_empty tce AND empty no_instances) AND (empty tce AND not_empty no_instances) ) ));
if (ans)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of not expression - functions") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of not expression - functions") ;
end if;

// transformer invocations
ans = TRAN::ret_bool(b:( not ( (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:FALSE) ) AND (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:TRUE))) ));
if (ans)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of not expression - transforms") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of not expression - transforms") ;
end if;

// bridge invocations realized
ans = TRAN::ret_bool(b:( not ( (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:FALSE) ) AND (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:TRUE))) ));
if (ans)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of not expression - bridge - realized") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of not expression - bridge - realized") ;
end if;

// if aritmetic expressions + int

// local
a=1;
b=2;
ans1 = TRAN::ret_int(i:( (+ ( a + b )) ));
if (ans1 == 3)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of + (expression) - local var - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of + (expression) - local var - int") ;
end if;

// literal

ans1 = TRAN::ret_int(i:( (+ ( 1 + 2 )) ));
if ( ans1 == 3 )
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of + (expression) - literal - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of + (expression) - literal - int") ;
end if;

// received event
ans1 = TRAN::ret_int(i:(+ ( rcvd_evt.i1 + rcvd_evt.i2)) );
if (ans1 == 3)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of + (expression) - supp data - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of + (expression) - supp data - int") ;
end if;

// attribute of object - self
ans1 = TRAN::ret_int(i:(+ ( self.i1 + self.i2) ) );
if (ans1 == 3)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of + (expression) - self - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of + (expression) - self - int") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans1 = TRAN::ret_int(i:(+(tce.i1 + tce.i2)) );
if (ans1 == 3)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of + (expression) - inst_ref - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of + (expression) - inst_ref - int") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
ans1 = TRAN::ret_int(i:(+ ( (cardinality tce ) + 2*((cardinality no_instances)+1)) ) );
if (ans1 == 3)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of + (expression) - cardinality - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of + (expression) - cardinality - int") ;
end if;

// transformer invocations
ans1 = TRAN::ret_int(i:( TRAN::ret_int(i:5) + TRAN::ret_int(i:-2) ));
if (ans1 == 3)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of + (expression) - transform - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of + (expression) - transform - int") ;
end if;

// bridge invocations realized
ans1 = TRAN::ret_int(i:( (+ ( TRAN::ret_int(i:-3) + TRAN::ret_int(i:6) )) ));
if (ans1 == 3)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of + (expression) - bridge - realized - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of + (expression) - bridge - realized - int") ;
end if;


// if aritmetic expressions - int

// local
a=1;
b=2;
ans1 = TRAN::ret_int(i:( (- ( a + b )) ));
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of - (expression) - local var - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of - (expression) - local var - int") ;
end if;

// literal
ans1 = TRAN::ret_int(i:(- ( 1 + 2 )));
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of - (expression) - literal - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of - (expression) - literal - int") ;
end if;

// received event
ans1 = TRAN::ret_int(i:(- ( rcvd_evt.i1 + rcvd_evt.i2)));
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of - (expression) - supp data - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of - (expression) - supp data - int") ;
end if;

// attribute of object - self
ans1 = TRAN::ret_int(i:(- ( self.i1 + self.i2)));
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of + (expression) - self - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of + (expression) - self - int") ;
end if;

// attribute of object - inst_ref
select any tce from instances of TCE;
ans1 = TRAN::ret_int(i:(-(tce.i1 + tce.i2)));
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of - (expression) - inst_ref - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of - (expression) - inst_ref - int") ;
end if;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
ans1 = TRAN::ret_int(i:(- ( (cardinality tce ) + 2*((cardinality no_instances)+1))));
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of - (expression) - cardinality - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of - (expression) - cardinality - int") ;
end if;

// transformer invocations
ans1 = TRAN::ret_int(i:(- ( TRAN::ret_int(i:5) + TRAN::ret_int(i:-2) )) );
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of - (expression) - transform - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of - (expression) - transform - int") ;
end if;

// bridge invocations realized
ans1 = TRAN::ret_int(i:(- ( TRAN::ret_int(i:-3) + TRAN::ret_int(i:6) )));
if (ans1 == -3)
  LOG::LogSuccess(message:"TCE - Transform Parm Expressions - assignment of - (expression) - bridge - realized - int") ;
else
  LOG::LogFailure(message:"TCE - Transform Parm Expressions - assignment of - (expression) - bridge - realized - int") ;
end if;

// Event instance Creation

ack_count=0;

// local
a=1;
b=2;
create event instance e1 of TCE5:''bool event''(b1:(not ( (a ==b) AND (b == a) ) )) to self;
generate e1;
ack_count=ack_count+1;

// literal
create event instance e1 of TCE5:''bool event''(b1:(not ( (1 == 2) AND (3 == 3) ) )) to self;
generate e1;
ack_count=ack_count+1;

// received event
create event instance e1 of TCE5:''bool event''(b1:(not ( (rcvd_evt.b1 == rcvd_evt.b2) AND (rcvd_evt.b1 == rcvd_evt.b1) ) ) ) to self;
generate e1;
ack_count=ack_count+1;

// attribute of object - self
create event instance e1 of TCE5:''bool event''(b1:( not ( (self.b1 == self.b2) AND (self.b1 == self.b1) ) ) ) to self;
generate e1;
ack_count=ack_count+1;

// attribute of object - inst_ref
select any tce from instances of TCE;
create event instance e1 of TCE5:''bool event''(b1:( not ( (tce.b1 == tce.b2) AND (tce.b1 == tce.b1) ) ) ) to self;
generate e1;
ack_count=ack_count+1;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
create event instance e1 of TCE5:''bool event''(b1:( not ( (not_empty tce AND empty no_instances) AND (empty tce AND not_empty no_instances) ) )) to self;
generate e1;
ack_count=ack_count+1;

// transformer invocations
create event instance e1 of TCE5:''bool event''(b1:( not ( (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:FALSE) ) AND (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:TRUE))) )) to self;
generate e1;
ack_count=ack_count+1;

// bridge invocations realized
create event instance e1 of TCE5:''bool event''(b1:( not ( (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:FALSE) ) AND (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:TRUE))) )) to self;
generate e1;
ack_count=ack_count+1;

// if aritmetic expressions + int

// local
a=1;
b=2;
create event instance e2 of TCE6:''int event''(i1:( (+ ( a + b )) )) to self;
generate e2;
ack_count=ack_count+1;

// literal
create event instance e2 of TCE6:''int event''(i1:( (+ ( 1 + 2 )) )) to self;
generate e2;
ack_count=ack_count+1;

// received event
create event instance e2 of TCE6:''int event''(i1:(+ ( rcvd_evt.i1 + rcvd_evt.i2)) ) to self;
generate e2;
ack_count=ack_count+1;

// attribute of object - self
create event instance e2 of TCE6:''int event''(i1:(+ ( self.i1 + self.i2) ) ) to self;
generate e2;
ack_count=ack_count+1;

// attribute of object - inst_ref
select any tce from instances of TCE;
create event instance e2 of TCE6:''int event''(i1:(+(tce.i1 + tce.i2)) ) to self;
generate e2;
ack_count=ack_count+1;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
create event instance e2 of TCE6:''int event''(i1:(+ ( (cardinality tce ) + 2*((cardinality no_instances)+1)) ) ) to self;
generate e2;
ack_count=ack_count+1;

// transformer invocations
create event instance e2 of TCE6:''int event''(i1:( TRAN::ret_int(i:5) + TRAN::ret_int(i:-2) )) to self;
generate e2;
ack_count=ack_count+1;

// bridge invocations realized
create event instance e2 of TCE6:''int event''(i1:( (+ ( TRAN::ret_int(i:-3) + TRAN::ret_int(i:6) )) )) to self;
generate e2;
ack_count=ack_count+1;


// the e1 and e2 events will take us to the next state

self.ack_count=ack_count;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("e8166e6e-9d7d-4578-89b2-e00b76212b06",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"91c6bdc8-59a7-454e-a8dd-cbb3f6d24cfc");
INSERT INTO SM_AH
	VALUES ("e8166e6e-9d7d-4578-89b2-e00b76212b06",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("e8166e6e-9d7d-4578-89b2-e00b76212b06",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'if (rcvd_evt.b1 == TRUE)
  LOG::LogSuccess(message:"TCE - Count acks from Bool Event") ;
else
  LOG::LogFailure(message:"TCE - Count acks from Bool Event") ;
end if;
self.ack_count = self.ack_count - 1;
if (self.ack_count == 0)
  generate TCE4:''next test with supp data''(b1:TRUE,b2:FALSE,i1:1,i2:2,r1:1.0,r2:2.0) to self;
end if;',
	'');
INSERT INTO SM_MOAH
	VALUES ("be7b01af-bf0c-4967-85af-1d407a789cdd",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"70bda33f-14e0-4261-81c1-e9f03fc2d6a1");
INSERT INTO SM_AH
	VALUES ("be7b01af-bf0c-4967-85af-1d407a789cdd",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("be7b01af-bf0c-4967-85af-1d407a789cdd",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'if (rcvd_evt.i1 == 3)
  LOG::LogSuccess(message:"TCE - Count acks from Int Event") ;
else
  LOG::LogFailure(message:"TCE - Count acks from Int Event") ;
end if;
self.ack_count = self.ack_count - 1;
if (self.ack_count == 0)
  generate TCE4:''next test with supp data''(b1:TRUE,b2:FALSE,i1:1,i2:2,r1:1.0,r2:2.0) to self;
end if;',
	'');
INSERT INTO SM_MOAH
	VALUES ("63a01c21-1c3a-43ec-93ac-22cd56127a11",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"d0e4518a-7781-495b-b57a-53f2a64bcbe0");
INSERT INTO SM_AH
	VALUES ("63a01c21-1c3a-43ec-93ac-22cd56127a11",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("63a01c21-1c3a-43ec-93ac-22cd56127a11",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'// Event generation

ack_count=0;

// local
a=1;
b=2;
generate TCE5:''bool event''(b1:(not ( (a ==b) AND (b == a) ) )) to self;

ack_count=ack_count+1;

// literal
generate TCE5:''bool event''(b1:(not ( (1 == 2) AND (3 == 3) ) )) to self;

ack_count=ack_count+1;

// received event
generate TCE5:''bool event''(b1:(not ( (rcvd_evt.b1 == rcvd_evt.b2) AND (rcvd_evt.b1 == rcvd_evt.b1) ) ) ) to self;

ack_count=ack_count+1;

// attribute of object - self
generate TCE5:''bool event''(b1:( not ( (self.b1 == self.b2) AND (self.b1 == self.b1) ) ) ) to self;

ack_count=ack_count+1;

// attribute of object - inst_ref
select any tce from instances of TCE;
generate TCE5:''bool event''(b1:( not ( (tce.b1 == tce.b2) AND (tce.b1 == tce.b1) ) ) ) to self;

ack_count=ack_count+1;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
generate TCE5:''bool event''(b1:( not ( (not_empty tce AND empty no_instances) AND (empty tce AND not_empty no_instances) ) )) to self;

ack_count=ack_count+1;

// transformer invocations
generate TCE5:''bool event''(b1:( not ( (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:FALSE) ) AND (TRAN::ret_bool(b:TRUE) AND TRAN::ret_bool(b:TRUE))) )) to self;

ack_count=ack_count+1;

// bridge invocations realized
generate TCE5:''bool event''(b1:( not ( (BR::ret_bool(b:TRUE) AND BR::ret_bool(b:FALSE) ) AND (BR::ret_bool(b:TRUE) AND BR::ret_bool(b:TRUE))) )) to self;

ack_count=ack_count+1;

// if aritmetic expressions + int

// local
a=1;
b=2;
generate TCE6:''int event''(i1:( (+ ( a + b )) )) to self;

ack_count=ack_count+1;

// literal
generate TCE6:''int event''(i1:( (+ ( 1 + 2 )) )) to self;

ack_count=ack_count+1;

// received event
generate TCE6:''int event''(i1:(+ ( rcvd_evt.i1 + rcvd_evt.i2)) ) to self;

ack_count=ack_count+1;

// attribute of object - self
generate TCE6:''int event''(i1:(+ ( self.i1 + self.i2) ) ) to self;

ack_count=ack_count+1;

// attribute of object - inst_ref
select any tce from instances of TCE;
generate TCE6:''int event''(i1:(+(tce.i1 + tce.i2)) ) to self;

ack_count=ack_count+1;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
generate TCE6:''int event''(i1:(+ ( (cardinality tce ) + 2*((cardinality no_instances)+1)) ) ) to self;

ack_count=ack_count+1;

// transformer invocations
generate TCE6:''int event''(i1:( TRAN::ret_int(i:5) + TRAN::ret_int(i:-2) )) to self;

ack_count=ack_count+1;

// bridge invocations realized
generate TCE6:''int event''(i1:( (+ ( BR::ret_int(i:-3) + BR::ret_int(i:6) )) )) to self;

ack_count=ack_count+1;

// single

// local
bv=FALSE;
generate TCE5:''bool event''(b1:(not(bv))) to self;

ack_count=ack_count+1;

// literal
generate TCE5:''bool event''(b1:(not FALSE)) to self;

ack_count=ack_count+1;

// received event
generate TCE5:''bool event''(b1:(not(rcvd_evt.b2))) to self;

ack_count=ack_count+1;

// attribute of object - self
generate TCE5:''bool event''(b1:(not self.b2)) to self;

ack_count=ack_count+1;

// attribute of object - inst_ref
select any tce from instances of TCE;
generate TCE5:''bool event''(b1:( not tce.b2 )) to self;

ack_count=ack_count+1;

// function invocations
select any tce from instances of TCE;
select any no_instances from instances of NOI;
generate TCE5:''bool event''(b1:( not(empty tce))) to self;
generate TCE5:''bool event''(b1:(not(not_empty no_instances))) to self;
generate TCE5:''bool event''(b1:(empty no_instances)) to self;
generate TCE5:''bool event''(b1:(not_empty tce)) to self;

ack_count=ack_count+4;

// transformer invocations
generate TCE5:''bool event''(b1:(not(TRAN::ret_bool(b:FALSE)))) to self;
generate TCE5:''bool event''(b1:(TRAN::ret_bool(b:TRUE))) to self;

ack_count=ack_count+2;

// bridge invocations realized
generate TCE5:''bool event''(b1:(not(BR::ret_bool(b:FALSE)))) to self;
generate TCE5:''bool event''(b1:(BR::ret_bool(b:TRUE))) to self;

ack_count=ack_count+2;

// if aritmetic expressions + int

// local
b=3;
generate TCE6:''int event''(i1:+(b)) to self;

ack_count=ack_count+1;

// literal
generate TCE6:''int event''(i1:+(3)) to self;

ack_count=ack_count+1;

// function invocations
create object instance t2 of TCE;
create object instance t3 of TCE;

select many tces from instances of TCE;
generate TCE6:''int event''(i1:+(cardinality tces)) to self;

delete object instance t2;
delete object instance t3;

ack_count=ack_count+1;

// transformer invocations
generate TCE6:''int event''(i1:+(TRAN::ret_int(i:3))) to self;

ack_count=ack_count+1;

// bridge invocations realized
generate TCE6:''int event''(i1:+(BR::ret_int(i:3))) to self;

ack_count=ack_count+1;



// the e1 and e2 events will take us to the next state

self.ack_count=ack_count;
',
	'');
INSERT INTO SM_MOAH
	VALUES ("40570287-9a74-411e-b50e-2b2232f35f80",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"bb896424-d5f9-4c53-9959-cdfff6016a19");
INSERT INTO SM_AH
	VALUES ("40570287-9a74-411e-b50e-2b2232f35f80",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("40570287-9a74-411e-b50e-2b2232f35f80",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'if (rcvd_evt.b1 == TRUE)
  LOG::LogSuccess(message:"TCE - Count acks from Bool Event") ;
else
  LOG::LogFailure(message:"TCE - Count acks from Bool Event") ;
end if;
self.ack_count = self.ack_count - 1;
if (self.ack_count == 0)
  generate TCE4:''next test with supp data''(b1:TRUE,b2:FALSE,i1:1,i2:2,r1:1.0,r2:2.0) to self;
end if;',
	'');
INSERT INTO SM_MOAH
	VALUES ("e809d5e4-05cb-480d-b516-ffe379eef4ae",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"f59b6daf-3dfb-42ee-9ca0-fe4a7cac5bf2");
INSERT INTO SM_AH
	VALUES ("e809d5e4-05cb-480d-b516-ffe379eef4ae",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("e809d5e4-05cb-480d-b516-ffe379eef4ae",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'if (rcvd_evt.i1 == 3)
  LOG::LogSuccess(message:"TCE - Count acks from Int Event") ;
else
  LOG::LogFailure(message:"TCE - Count acks from Int Event") ;
end if;
self.ack_count = self.ack_count - 1;
if (self.ack_count == 0)
  generate TCE4:''next test with supp data''(b1:TRUE,b2:FALSE,i1:1,i2:2,r1:1.0,r2:2.0) to self;
end if;',
	'');
INSERT INTO SM_TAH
	VALUES ("d0489113-bbfe-46cb-9337-4dbc85a9c31b",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"8ab50f39-ecf5-4d3b-8cdc-38f7de5b5ca2");
INSERT INTO SM_AH
	VALUES ("d0489113-bbfe-46cb-9337-4dbc85a9c31b",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("d0489113-bbfe-46cb-9337-4dbc85a9c31b",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("6a8d4f5f-1b6f-4b32-b71a-74094e20dae1",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"69919663-ef78-47cb-959a-f49a7a0d2f1d");
INSERT INTO SM_AH
	VALUES ("6a8d4f5f-1b6f-4b32-b71a-74094e20dae1",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("6a8d4f5f-1b6f-4b32-b71a-74094e20dae1",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("70fa9276-91c2-4d62-bea2-412e7c2f23bc",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"d4fb617f-95dc-4eeb-a960-1f830d5bdf4f");
INSERT INTO SM_AH
	VALUES ("70fa9276-91c2-4d62-bea2-412e7c2f23bc",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("70fa9276-91c2-4d62-bea2-412e7c2f23bc",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("a7077c77-bd35-4813-9a08-53d1d5b65fd6",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"c4a7c914-a091-4b1e-8302-d39f184da574");
INSERT INTO SM_AH
	VALUES ("a7077c77-bd35-4813-9a08-53d1d5b65fd6",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("a7077c77-bd35-4813-9a08-53d1d5b65fd6",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("dfcd2f4f-05e4-4205-8c32-7e3bcb35bec9",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"c4f0c401-4bbb-4184-b131-67e812a47271");
INSERT INTO SM_AH
	VALUES ("dfcd2f4f-05e4-4205-8c32-7e3bcb35bec9",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("dfcd2f4f-05e4-4205-8c32-7e3bcb35bec9",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("695f0ce5-fe43-4f96-934d-f1b2de592aec",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"02d5d401-b700-4b20-a696-e4be0eb8c686");
INSERT INTO SM_AH
	VALUES ("695f0ce5-fe43-4f96-934d-f1b2de592aec",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("695f0ce5-fe43-4f96-934d-f1b2de592aec",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("ae6e514f-395c-4245-9a93-a4ed6d64a1dd",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"e3bed8cf-b817-4cd4-9567-6721750b7b9d");
INSERT INTO SM_AH
	VALUES ("ae6e514f-395c-4245-9a93-a4ed6d64a1dd",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("ae6e514f-395c-4245-9a93-a4ed6d64a1dd",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("6bb16087-9895-414d-a83e-45a70e5fa7a0",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"0e40ce2a-6fd0-44f2-abea-69d9058b2710");
INSERT INTO SM_AH
	VALUES ("6bb16087-9895-414d-a83e-45a70e5fa7a0",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("6bb16087-9895-414d-a83e-45a70e5fa7a0",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("af1fac89-b17a-4a93-992b-5093b2dd2d81",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"e4e3f8f6-40be-446a-acbd-c00d0b8aa7c0");
INSERT INTO SM_AH
	VALUES ("af1fac89-b17a-4a93-992b-5093b2dd2d81",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("af1fac89-b17a-4a93-992b-5093b2dd2d81",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("831a474e-0723-4157-98fa-5be72437e148",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"79024cb5-1129-42b4-b981-59280a96a483");
INSERT INTO SM_AH
	VALUES ("831a474e-0723-4157-98fa-5be72437e148",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("831a474e-0723-4157-98fa-5be72437e148",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("cc5c12b6-ea34-4747-be43-bd83bb52ea5f",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"af21614f-65b7-478f-ba94-a40003ba39fb");
INSERT INTO SM_AH
	VALUES ("cc5c12b6-ea34-4747-be43-bd83bb52ea5f",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("cc5c12b6-ea34-4747-be43-bd83bb52ea5f",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("a256ffcf-eab5-40c9-ab93-cb592fa8eadd",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"789768d8-0818-4394-bbb1-069dc80b2e0f");
INSERT INTO SM_AH
	VALUES ("a256ffcf-eab5-40c9-ab93-cb592fa8eadd",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("a256ffcf-eab5-40c9-ab93-cb592fa8eadd",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("6b0ca466-6f3f-49fc-b156-6024c2538479",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"aa3508ba-3d17-412f-9c9d-b900070fdb1f");
INSERT INTO SM_AH
	VALUES ("6b0ca466-6f3f-49fc-b156-6024c2538479",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("6b0ca466-6f3f-49fc-b156-6024c2538479",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("ca955030-9df4-4d77-881b-78d920214ffd",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"fe0d579a-005b-403c-8f7d-b020cf720be4");
INSERT INTO SM_AH
	VALUES ("ca955030-9df4-4d77-881b-78d920214ffd",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("ca955030-9df4-4d77-881b-78d920214ffd",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("1ab350fa-ece6-4898-a68b-d6a60e009835",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"bb65cc9d-70ae-4821-a4b4-8d55a8948e5c");
INSERT INTO SM_AH
	VALUES ("1ab350fa-ece6-4898-a68b-d6a60e009835",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("1ab350fa-ece6-4898-a68b-d6a60e009835",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("87665534-af08-441a-98aa-d1864c5e7887",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"7e512470-4d2f-4fbe-95a5-5e6497f9c852");
INSERT INTO SM_AH
	VALUES ("87665534-af08-441a-98aa-d1864c5e7887",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("87665534-af08-441a-98aa-d1864c5e7887",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("5dadcb5d-5e20-401e-aed2-522369f0d617",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"950621e9-c093-483f-9fe5-860dbf17553e");
INSERT INTO SM_AH
	VALUES ("5dadcb5d-5e20-401e-aed2-522369f0d617",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("5dadcb5d-5e20-401e-aed2-522369f0d617",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("fcc43a45-cf59-4caf-9157-64e8d46abfa0",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"c6c48e7d-8f07-4a0a-9051-30ed44c69bc3");
INSERT INTO SM_AH
	VALUES ("fcc43a45-cf59-4caf-9157-64e8d46abfa0",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("fcc43a45-cf59-4caf-9157-64e8d46abfa0",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("7dbff845-2546-4b10-a48a-d0a00c95f7d8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"b7a67873-a883-4320-9ab9-a5c0b3e6b2af");
INSERT INTO SM_AH
	VALUES ("7dbff845-2546-4b10-a48a-d0a00c95f7d8",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("7dbff845-2546-4b10-a48a-d0a00c95f7d8",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("96db662f-604d-48be-8271-166810bd1da7",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"3dbb0fb4-5854-4805-a78f-c0b3e04f345a");
INSERT INTO SM_AH
	VALUES ("96db662f-604d-48be-8271-166810bd1da7",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("96db662f-604d-48be-8271-166810bd1da7",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("08f99444-301d-4686-b815-cd6e52fef2ea",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"5614f887-d21b-423b-842e-a9c95890b28b");
INSERT INTO SM_AH
	VALUES ("08f99444-301d-4686-b815-cd6e52fef2ea",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("08f99444-301d-4686-b815-cd6e52fef2ea",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("62405c41-5253-4d1f-a24e-f1e7769f68aa",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"a4f002b4-df9e-4908-901f-c2df5ab7cd9d");
INSERT INTO SM_AH
	VALUES ("62405c41-5253-4d1f-a24e-f1e7769f68aa",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("62405c41-5253-4d1f-a24e-f1e7769f68aa",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("3eca791b-4217-4e7a-8723-ca29d5ffd004",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"a0409bdd-e9a1-42a2-9f24-0e996e06ed16");
INSERT INTO SM_AH
	VALUES ("3eca791b-4217-4e7a-8723-ca29d5ffd004",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("3eca791b-4217-4e7a-8723-ca29d5ffd004",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("3dec4d1a-82a8-4115-9be9-1bbaab1ca6a6",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"df45863d-a10d-4131-baf2-e025ecdc4269");
INSERT INTO SM_AH
	VALUES ("3dec4d1a-82a8-4115-9be9-1bbaab1ca6a6",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("3dec4d1a-82a8-4115-9be9-1bbaab1ca6a6",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("e62ce7fe-710f-47f2-9d4b-f56fc7cafd57",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"07896b70-fe1f-4352-8f73-f2272f8f2498");
INSERT INTO SM_AH
	VALUES ("e62ce7fe-710f-47f2-9d4b-f56fc7cafd57",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("e62ce7fe-710f-47f2-9d4b-f56fc7cafd57",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("8d9b08df-4652-4e4f-bb7d-52c231fdf8f9",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"09323ace-3609-45cc-a78d-285a49fc73c6");
INSERT INTO SM_AH
	VALUES ("8d9b08df-4652-4e4f-bb7d-52c231fdf8f9",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("8d9b08df-4652-4e4f-bb7d-52c231fdf8f9",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("2a69d3df-e227-4218-9c09-54a069c2df31",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"399f137f-398e-4bee-8807-eee50e71dd98");
INSERT INTO SM_AH
	VALUES ("2a69d3df-e227-4218-9c09-54a069c2df31",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("2a69d3df-e227-4218-9c09-54a069c2df31",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("643b0505-e228-4a69-9f55-b36be69483a0",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"44a281f1-bc47-4c03-9ae3-8a728b870b18");
INSERT INTO SM_AH
	VALUES ("643b0505-e228-4a69-9f55-b36be69483a0",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("643b0505-e228-4a69-9f55-b36be69483a0",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("152fedd2-60da-4c64-95f3-f7d0a22f0747",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"68bac378-5491-4d48-a114-8a37181cfbae");
INSERT INTO SM_AH
	VALUES ("152fedd2-60da-4c64-95f3-f7d0a22f0747",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("152fedd2-60da-4c64-95f3-f7d0a22f0747",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'',
	'');
INSERT INTO SM_TAH
	VALUES ("6d493b3b-d167-4c2a-a715-675384ba6b6d",
	"02958685-9039-44bf-a886-f49ba6febae9",
	"c455e933-98ec-4553-92d5-f855ce2be31c");
INSERT INTO SM_AH
	VALUES ("6d493b3b-d167-4c2a-a715-675384ba6b6d",
	"02958685-9039-44bf-a886-f49ba6febae9");
INSERT INTO SM_ACT
	VALUES ("6d493b3b-d167-4c2a-a715-675384ba6b6d",
	"02958685-9039-44bf-a886-f49ba6febae9",
	1,
	'',
	'');
INSERT INTO GD_MD
	VALUES ("4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	8,
	"02958685-9039-44bf-a886-f49ba6febae9",
	40,
	1,
	0,
	1,
	1,
	0,
	12,
	0,
	0,
	0,
	0,
	0,
	0,
	'3.5.3',
	'ex2::Test Compound Expressions::Test Compound Expressions');
INSERT INTO GD_GE
	VALUES ("9ec75dad-4f22-49b6-9b7d-a1e460ddd0be",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"7d723d57-4e3f-4aa5-a8df-2a554b912937",
	41,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::Compound Expressions Using Constants');
INSERT INTO GD_SHP
	VALUES ("9ec75dad-4f22-49b6-9b7d-a1e460ddd0be");
INSERT INTO GD_NCS
	VALUES ("9ec75dad-4f22-49b6-9b7d-a1e460ddd0be");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"9ec75dad-4f22-49b6-9b7d-a1e460ddd0be");
INSERT INTO DIM_GE
	VALUES (1696.000000,
	1248.000000,
	"9ec75dad-4f22-49b6-9b7d-a1e460ddd0be",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("9ec75dad-4f22-49b6-9b7d-a1e460ddd0be",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("01e96a7f-e054-4858-9a82-313debab56a2",
	1792.000000,
	1344.000000,
	"9ec75dad-4f22-49b6-9b7d-a1e460ddd0be");
INSERT INTO DIM_CON
	VALUES ("e6deb4e0-4404-4d40-999e-fb518cdb1174",
	1696.000000,
	1280.000000,
	"9ec75dad-4f22-49b6-9b7d-a1e460ddd0be");
INSERT INTO DIM_CON
	VALUES ("6314ba84-9820-4789-bb79-979afc38b804",
	1728.000000,
	1248.000000,
	"9ec75dad-4f22-49b6-9b7d-a1e460ddd0be");
INSERT INTO GD_GE
	VALUES ("c857adde-1cf4-4d07-b617-25b0d3ef923f",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"82611fde-f3f4-4940-9f11-923b4bd4d267",
	41,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::Compound Expressions Using Local Variables');
INSERT INTO GD_SHP
	VALUES ("c857adde-1cf4-4d07-b617-25b0d3ef923f");
INSERT INTO GD_NCS
	VALUES ("c857adde-1cf4-4d07-b617-25b0d3ef923f");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"c857adde-1cf4-4d07-b617-25b0d3ef923f");
INSERT INTO DIM_GE
	VALUES (1696.000000,
	1392.000000,
	"c857adde-1cf4-4d07-b617-25b0d3ef923f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("c857adde-1cf4-4d07-b617-25b0d3ef923f",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("7c278d6e-1649-4b6f-99de-24b1562d9172",
	1792.000000,
	1392.000000,
	"c857adde-1cf4-4d07-b617-25b0d3ef923f");
INSERT INTO DIM_CON
	VALUES ("87b26ee4-b76f-4643-975e-316fa6f42937",
	1792.000000,
	1488.000000,
	"c857adde-1cf4-4d07-b617-25b0d3ef923f");
INSERT INTO GD_GE
	VALUES ("d5f37973-0d70-428e-a7b6-2a11cf3f06de",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"def495d4-bf8c-4e00-83c8-5956435ba3c6",
	41,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::Compound Expressions Using Object Attributes');
INSERT INTO GD_SHP
	VALUES ("d5f37973-0d70-428e-a7b6-2a11cf3f06de");
INSERT INTO GD_NCS
	VALUES ("d5f37973-0d70-428e-a7b6-2a11cf3f06de");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"d5f37973-0d70-428e-a7b6-2a11cf3f06de");
INSERT INTO DIM_GE
	VALUES (1696.000000,
	1536.000000,
	"d5f37973-0d70-428e-a7b6-2a11cf3f06de",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("d5f37973-0d70-428e-a7b6-2a11cf3f06de",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("4290127d-d419-45a3-9740-88277f862a9f",
	1792.000000,
	1536.000000,
	"d5f37973-0d70-428e-a7b6-2a11cf3f06de");
INSERT INTO DIM_CON
	VALUES ("25c0c366-51e3-434d-a9c2-3e4b399f938d",
	1792.000000,
	1632.000000,
	"d5f37973-0d70-428e-a7b6-2a11cf3f06de");
INSERT INTO GD_GE
	VALUES ("2350c544-6612-4ea1-adde-d0eb4f21e01b",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"190c3c16-8e75-484f-b977-791afe191d36",
	41,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::Compound Expressions Using Supplemental Data Items Received From An Event');
INSERT INTO GD_SHP
	VALUES ("2350c544-6612-4ea1-adde-d0eb4f21e01b");
INSERT INTO GD_NCS
	VALUES ("2350c544-6612-4ea1-adde-d0eb4f21e01b");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"2350c544-6612-4ea1-adde-d0eb4f21e01b");
INSERT INTO DIM_GE
	VALUES (1696.000000,
	1680.000000,
	"2350c544-6612-4ea1-adde-d0eb4f21e01b",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("2350c544-6612-4ea1-adde-d0eb4f21e01b",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("97cbb85e-5a47-41b0-8b1f-ac2ddc2038d5",
	1792.000000,
	1680.000000,
	"2350c544-6612-4ea1-adde-d0eb4f21e01b");
INSERT INTO DIM_CON
	VALUES ("afd37acc-309a-4115-8539-8a676ce99844",
	1792.000000,
	1776.000000,
	"2350c544-6612-4ea1-adde-d0eb4f21e01b");
INSERT INTO GD_GE
	VALUES ("ba0c3299-bb91-45e0-a620-fb37fcbb17e2",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"abd98293-88ef-40fd-89f0-09cc9202dea2",
	41,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::Compound Expressions Using Function Invocations');
INSERT INTO GD_SHP
	VALUES ("ba0c3299-bb91-45e0-a620-fb37fcbb17e2");
INSERT INTO GD_NCS
	VALUES ("ba0c3299-bb91-45e0-a620-fb37fcbb17e2");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"ba0c3299-bb91-45e0-a620-fb37fcbb17e2");
INSERT INTO DIM_GE
	VALUES (1696.000000,
	1824.000000,
	"ba0c3299-bb91-45e0-a620-fb37fcbb17e2",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("ba0c3299-bb91-45e0-a620-fb37fcbb17e2",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("c6b7be02-7424-4a11-b031-3f72134d4366",
	1792.000000,
	1824.000000,
	"ba0c3299-bb91-45e0-a620-fb37fcbb17e2");
INSERT INTO DIM_CON
	VALUES ("89eabd89-0635-43d5-ae83-98875a99d849",
	1792.000000,
	1920.000000,
	"ba0c3299-bb91-45e0-a620-fb37fcbb17e2");
INSERT INTO GD_GE
	VALUES ("ec76294f-8777-4c23-a432-fcd4f7eab65b",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"e47a491e-d456-4341-8d03-81d11ffdf9f5",
	41,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::Compound Expressions Using Transformer Invocations');
INSERT INTO GD_SHP
	VALUES ("ec76294f-8777-4c23-a432-fcd4f7eab65b");
INSERT INTO GD_NCS
	VALUES ("ec76294f-8777-4c23-a432-fcd4f7eab65b");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"ec76294f-8777-4c23-a432-fcd4f7eab65b");
INSERT INTO DIM_GE
	VALUES (1696.000000,
	1968.000000,
	"ec76294f-8777-4c23-a432-fcd4f7eab65b",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("ec76294f-8777-4c23-a432-fcd4f7eab65b",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("9c375465-a666-4e40-8627-34457fe0fa16",
	1792.000000,
	1968.000000,
	"ec76294f-8777-4c23-a432-fcd4f7eab65b");
INSERT INTO DIM_CON
	VALUES ("cc9ff2eb-65c1-4d6d-9154-028933bfa191",
	1792.000000,
	2064.000000,
	"ec76294f-8777-4c23-a432-fcd4f7eab65b");
INSERT INTO GD_GE
	VALUES ("4e2503e6-4cb0-4bba-a2e9-837ccbacaf4c",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"f1acd1cd-eaa9-438d-8ca5-a7d654fc7474",
	41,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::Compound Expressions Using Bridge Invocations');
INSERT INTO GD_SHP
	VALUES ("4e2503e6-4cb0-4bba-a2e9-837ccbacaf4c");
INSERT INTO GD_NCS
	VALUES ("4e2503e6-4cb0-4bba-a2e9-837ccbacaf4c");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"4e2503e6-4cb0-4bba-a2e9-837ccbacaf4c");
INSERT INTO DIM_GE
	VALUES (1696.000000,
	2112.000000,
	"4e2503e6-4cb0-4bba-a2e9-837ccbacaf4c",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("4e2503e6-4cb0-4bba-a2e9-837ccbacaf4c",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("99234935-4e0d-453a-b2ef-3b8efc5b9f9f",
	1792.000000,
	2112.000000,
	"4e2503e6-4cb0-4bba-a2e9-837ccbacaf4c");
INSERT INTO DIM_CON
	VALUES ("2ca10bba-abae-485e-b85b-77918e83d406",
	1792.000000,
	2208.000000,
	"4e2503e6-4cb0-4bba-a2e9-837ccbacaf4c");
INSERT INTO GD_GE
	VALUES ("0c9b1958-f69b-4750-8c01-10ebf7375c9e",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"64a83d4c-e1d6-48e6-9348-b45cf4cbf53f",
	41,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::Order of Operations');
INSERT INTO GD_SHP
	VALUES ("0c9b1958-f69b-4750-8c01-10ebf7375c9e");
INSERT INTO GD_NCS
	VALUES ("0c9b1958-f69b-4750-8c01-10ebf7375c9e");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"0c9b1958-f69b-4750-8c01-10ebf7375c9e");
INSERT INTO DIM_GE
	VALUES (1696.000000,
	2256.000000,
	"0c9b1958-f69b-4750-8c01-10ebf7375c9e",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("0c9b1958-f69b-4750-8c01-10ebf7375c9e",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("05ee9406-833e-462b-a60c-8dabe3d515ee",
	1792.000000,
	2256.000000,
	"0c9b1958-f69b-4750-8c01-10ebf7375c9e");
INSERT INTO DIM_CON
	VALUES ("57acf392-e767-4829-8d80-32e55930c54c",
	1872.000000,
	2288.000000,
	"0c9b1958-f69b-4750-8c01-10ebf7375c9e");
INSERT INTO GD_GE
	VALUES ("45b2d2d5-bab1-4a58-9d13-2cb8651551ea",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"ecb3b3a8-e11a-4268-ae73-dccb8e608519",
	41,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::Stress Limits of Compound Expressions');
INSERT INTO GD_SHP
	VALUES ("45b2d2d5-bab1-4a58-9d13-2cb8651551ea");
INSERT INTO GD_NCS
	VALUES ("45b2d2d5-bab1-4a58-9d13-2cb8651551ea");
INSERT INTO DIM_ND
	VALUES (160.000000,
	96.000000,
	"45b2d2d5-bab1-4a58-9d13-2cb8651551ea");
INSERT INTO DIM_GE
	VALUES (1984.000000,
	1248.000000,
	"45b2d2d5-bab1-4a58-9d13-2cb8651551ea",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("45b2d2d5-bab1-4a58-9d13-2cb8651551ea",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("53110979-cacd-4097-8e5c-88abfe3230c0",
	1984.000000,
	1296.000000,
	"45b2d2d5-bab1-4a58-9d13-2cb8651551ea");
INSERT INTO DIM_CON
	VALUES ("0b5535b7-6b5a-4e9a-943f-eff803538b10",
	2064.000000,
	1344.000000,
	"45b2d2d5-bab1-4a58-9d13-2cb8651551ea");
INSERT INTO GD_GE
	VALUES ("b288ef55-f79e-418e-a1c3-4d1839d14793",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"ea13a90c-aa0f-4e29-91f2-3266c5247e25",
	41,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::Bridges Within Expressions');
INSERT INTO GD_SHP
	VALUES ("b288ef55-f79e-418e-a1c3-4d1839d14793");
INSERT INTO GD_NCS
	VALUES ("b288ef55-f79e-418e-a1c3-4d1839d14793");
INSERT INTO DIM_ND
	VALUES (160.000000,
	96.000000,
	"b288ef55-f79e-418e-a1c3-4d1839d14793");
INSERT INTO DIM_GE
	VALUES (1984.000000,
	1392.000000,
	"b288ef55-f79e-418e-a1c3-4d1839d14793",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("b288ef55-f79e-418e-a1c3-4d1839d14793",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("00931ab1-d0c5-4391-bdd9-bfc4aac5e7b8",
	2064.000000,
	1488.000000,
	"b288ef55-f79e-418e-a1c3-4d1839d14793");
INSERT INTO DIM_CON
	VALUES ("3b1eb07e-b6e3-4fe3-af68-bd472cfe3b9a",
	2064.000000,
	1392.000000,
	"b288ef55-f79e-418e-a1c3-4d1839d14793");
INSERT INTO GD_GE
	VALUES ("ce8671b8-0693-42ba-9d8b-dfa8f1d2faa6",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"7a8247c8-6b5f-4cae-8f57-e9bc2dd29447",
	41,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::Transforms Within Expressions');
INSERT INTO GD_SHP
	VALUES ("ce8671b8-0693-42ba-9d8b-dfa8f1d2faa6");
INSERT INTO GD_NCS
	VALUES ("ce8671b8-0693-42ba-9d8b-dfa8f1d2faa6");
INSERT INTO DIM_ND
	VALUES (160.000000,
	96.000000,
	"ce8671b8-0693-42ba-9d8b-dfa8f1d2faa6");
INSERT INTO DIM_GE
	VALUES (1984.000000,
	1536.000000,
	"ce8671b8-0693-42ba-9d8b-dfa8f1d2faa6",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("ce8671b8-0693-42ba-9d8b-dfa8f1d2faa6",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("79ab3e32-1f31-447a-aabf-76db8c373c50",
	2064.000000,
	1536.000000,
	"ce8671b8-0693-42ba-9d8b-dfa8f1d2faa6");
INSERT INTO DIM_CON
	VALUES ("f5361e46-979a-4a69-b6a1-2f147370cea6",
	2064.000000,
	1632.000000,
	"ce8671b8-0693-42ba-9d8b-dfa8f1d2faa6");
INSERT INTO GD_GE
	VALUES ("a4408254-5198-40b6-8773-566397c968f0",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"f6d4cdd5-f696-4bac-9d6e-58c642703b16",
	41,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::Combinine Real and Integer Data Types');
INSERT INTO GD_SHP
	VALUES ("a4408254-5198-40b6-8773-566397c968f0");
INSERT INTO GD_NCS
	VALUES ("a4408254-5198-40b6-8773-566397c968f0");
INSERT INTO DIM_ND
	VALUES (240.000000,
	528.000000,
	"a4408254-5198-40b6-8773-566397c968f0");
INSERT INTO DIM_GE
	VALUES (2304.000000,
	1248.000000,
	"a4408254-5198-40b6-8773-566397c968f0",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("a4408254-5198-40b6-8773-566397c968f0",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("3d7fd4d4-fc25-4f21-9c9d-36c14a07df76",
	2544.000000,
	1728.000000,
	"a4408254-5198-40b6-8773-566397c968f0");
INSERT INTO DIM_CON
	VALUES ("4dedc225-1524-433d-aa20-6d110c24df29",
	2544.000000,
	1552.000000,
	"a4408254-5198-40b6-8773-566397c968f0");
INSERT INTO GD_GE
	VALUES ("7b9a238d-23ba-4524-933e-b9116f46f774",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"86c37ba1-17e1-4f42-8fc9-40c6c70cef28",
	41,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::Unary Ops');
INSERT INTO GD_SHP
	VALUES ("7b9a238d-23ba-4524-933e-b9116f46f774");
INSERT INTO GD_NCS
	VALUES ("7b9a238d-23ba-4524-933e-b9116f46f774");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"7b9a238d-23ba-4524-933e-b9116f46f774");
INSERT INTO DIM_GE
	VALUES (1984.000000,
	1680.000000,
	"7b9a238d-23ba-4524-933e-b9116f46f774",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("7b9a238d-23ba-4524-933e-b9116f46f774",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("1510f8ef-5ddc-4521-986a-a0f417f9b208",
	2064.000000,
	1680.000000,
	"7b9a238d-23ba-4524-933e-b9116f46f774");
INSERT INTO DIM_CON
	VALUES ("1d5887b4-689f-4d1d-bbb6-2e0a20d15df1",
	2064.000000,
	1776.000000,
	"7b9a238d-23ba-4524-933e-b9116f46f774");
INSERT INTO GD_GE
	VALUES ("d73e991a-8211-4f00-9f90-97a20be915d6",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"153b7920-f38d-4523-a9c0-49b6c7b0d731",
	41,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::If Expressions');
INSERT INTO GD_SHP
	VALUES ("d73e991a-8211-4f00-9f90-97a20be915d6");
INSERT INTO GD_NCS
	VALUES ("d73e991a-8211-4f00-9f90-97a20be915d6");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"d73e991a-8211-4f00-9f90-97a20be915d6");
INSERT INTO DIM_GE
	VALUES (1984.000000,
	1824.000000,
	"d73e991a-8211-4f00-9f90-97a20be915d6",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("d73e991a-8211-4f00-9f90-97a20be915d6",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("60b3c354-5fd4-4fd4-972d-64a33fe46abd",
	2064.000000,
	1824.000000,
	"d73e991a-8211-4f00-9f90-97a20be915d6");
INSERT INTO DIM_CON
	VALUES ("8bdc298a-78f9-4e88-89c1-1491a50b6801",
	2064.000000,
	1920.000000,
	"d73e991a-8211-4f00-9f90-97a20be915d6");
INSERT INTO GD_GE
	VALUES ("3994af23-fcdb-49fb-9ce3-3bb82f911bb1",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"7ed1cb61-8bea-4d55-8e64-94e0a3f7371b",
	41,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::Expressions Within Parameters');
INSERT INTO GD_SHP
	VALUES ("3994af23-fcdb-49fb-9ce3-3bb82f911bb1");
INSERT INTO GD_NCS
	VALUES ("3994af23-fcdb-49fb-9ce3-3bb82f911bb1");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"3994af23-fcdb-49fb-9ce3-3bb82f911bb1");
INSERT INTO DIM_GE
	VALUES (1984.000000,
	1968.000000,
	"3994af23-fcdb-49fb-9ce3-3bb82f911bb1",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("3994af23-fcdb-49fb-9ce3-3bb82f911bb1",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("73eedaf2-9e9e-46dd-906a-ae8309a9db7e",
	2064.000000,
	1968.000000,
	"3994af23-fcdb-49fb-9ce3-3bb82f911bb1");
INSERT INTO DIM_CON
	VALUES ("fa399ab9-4d9c-4791-a4fa-40e3e5d0a69c",
	2160.000000,
	2000.000000,
	"3994af23-fcdb-49fb-9ce3-3bb82f911bb1");
INSERT INTO DIM_CON
	VALUES ("d7d03175-ced7-43fe-8a51-44060769db4e",
	2160.000000,
	2032.000000,
	"3994af23-fcdb-49fb-9ce3-3bb82f911bb1");
INSERT INTO GD_GE
	VALUES ("801e1a00-86a4-4bf6-8866-b02be2e421c0",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"91c6bdc8-59a7-454e-a8dd-cbb3f6d24cfc",
	41,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::Count Acks from Bool Event');
INSERT INTO GD_SHP
	VALUES ("801e1a00-86a4-4bf6-8866-b02be2e421c0");
INSERT INTO GD_NCS
	VALUES ("801e1a00-86a4-4bf6-8866-b02be2e421c0");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"801e1a00-86a4-4bf6-8866-b02be2e421c0");
INSERT INTO DIM_GE
	VALUES (2496.000000,
	1888.000000,
	"801e1a00-86a4-4bf6-8866-b02be2e421c0",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("801e1a00-86a4-4bf6-8866-b02be2e421c0",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("127ac01c-1845-4ae7-89c9-511041a38ec4",
	2496.000000,
	1952.000000,
	"801e1a00-86a4-4bf6-8866-b02be2e421c0");
INSERT INTO DIM_CON
	VALUES ("99012051-652c-4546-8ac4-f7d56d42d449",
	2528.000000,
	1984.000000,
	"801e1a00-86a4-4bf6-8866-b02be2e421c0");
INSERT INTO DIM_CON
	VALUES ("397e1072-b4d1-43fb-8377-94e6aa80de19",
	2640.000000,
	1984.000000,
	"801e1a00-86a4-4bf6-8866-b02be2e421c0");
INSERT INTO DIM_CON
	VALUES ("61975d81-ac3f-43f6-9152-2065cc839e7f",
	2512.000000,
	1888.000000,
	"801e1a00-86a4-4bf6-8866-b02be2e421c0");
INSERT INTO DIM_CON
	VALUES ("3f1929a9-ae03-4604-a84f-60661f38694c",
	2640.000000,
	1888.000000,
	"801e1a00-86a4-4bf6-8866-b02be2e421c0");
INSERT INTO DIM_CON
	VALUES ("00d34d37-b916-4a32-afae-1c68056922f4",
	2672.000000,
	1920.000000,
	"801e1a00-86a4-4bf6-8866-b02be2e421c0");
INSERT INTO GD_GE
	VALUES ("9931952f-5bd9-4bb5-9bbf-11c87e35a144",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"70bda33f-14e0-4261-81c1-e9f03fc2d6a1",
	41,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::Count Acks from Int Event');
INSERT INTO GD_SHP
	VALUES ("9931952f-5bd9-4bb5-9bbf-11c87e35a144");
INSERT INTO GD_NCS
	VALUES ("9931952f-5bd9-4bb5-9bbf-11c87e35a144");
INSERT INTO DIM_ND
	VALUES (176.000000,
	96.000000,
	"9931952f-5bd9-4bb5-9bbf-11c87e35a144");
INSERT INTO DIM_GE
	VALUES (2496.000000,
	2064.000000,
	"9931952f-5bd9-4bb5-9bbf-11c87e35a144",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("9931952f-5bd9-4bb5-9bbf-11c87e35a144",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("a7eebade-8af7-40f6-8ecc-5c2c758f4067",
	2496.000000,
	2080.000000,
	"9931952f-5bd9-4bb5-9bbf-11c87e35a144");
INSERT INTO DIM_CON
	VALUES ("791fd7e8-84b4-46ec-90c0-65ebb920125c",
	2528.000000,
	2064.000000,
	"9931952f-5bd9-4bb5-9bbf-11c87e35a144");
INSERT INTO DIM_CON
	VALUES ("f62a9216-71b2-45ff-8ac9-1c9721fe0762",
	2640.000000,
	2064.000000,
	"9931952f-5bd9-4bb5-9bbf-11c87e35a144");
INSERT INTO DIM_CON
	VALUES ("75a38ccc-afcd-463d-8fe2-860b751b5096",
	2512.000000,
	2160.000000,
	"9931952f-5bd9-4bb5-9bbf-11c87e35a144");
INSERT INTO DIM_CON
	VALUES ("4df71954-0eff-4c8e-8e4f-e09852141c13",
	2656.000000,
	2160.000000,
	"9931952f-5bd9-4bb5-9bbf-11c87e35a144");
INSERT INTO DIM_CON
	VALUES ("482a2664-08cf-4d32-b10c-e6a1cc886268",
	2672.000000,
	2128.000000,
	"9931952f-5bd9-4bb5-9bbf-11c87e35a144");
INSERT INTO GD_GE
	VALUES ("ecab92d7-4450-406a-899e-78c1c22c8d32",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"d0e4518a-7781-495b-b57a-53f2a64bcbe0",
	41,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::More Expressions within Parms');
INSERT INTO GD_SHP
	VALUES ("ecab92d7-4450-406a-899e-78c1c22c8d32");
INSERT INTO GD_NCS
	VALUES ("ecab92d7-4450-406a-899e-78c1c22c8d32");
INSERT INTO DIM_ND
	VALUES (144.000000,
	112.000000,
	"ecab92d7-4450-406a-899e-78c1c22c8d32");
INSERT INTO DIM_GE
	VALUES (2832.000000,
	1968.000000,
	"ecab92d7-4450-406a-899e-78c1c22c8d32",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("ecab92d7-4450-406a-899e-78c1c22c8d32",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("86cca8e0-c8c7-47dd-b392-e976c347cc29",
	2912.000000,
	1968.000000,
	"ecab92d7-4450-406a-899e-78c1c22c8d32");
INSERT INTO DIM_CON
	VALUES ("8a91fc51-a8c8-45d1-81fc-09eefce71fb3",
	2912.000000,
	2080.000000,
	"ecab92d7-4450-406a-899e-78c1c22c8d32");
INSERT INTO DIM_CON
	VALUES ("1f76c9f1-7bcd-42b9-9939-6880fc99ca87",
	2944.000000,
	1968.000000,
	"ecab92d7-4450-406a-899e-78c1c22c8d32");
INSERT INTO DIM_CON
	VALUES ("2ca22200-b05c-4379-9af6-135dc766ca5d",
	2976.000000,
	2048.000000,
	"ecab92d7-4450-406a-899e-78c1c22c8d32");
INSERT INTO GD_GE
	VALUES ("7912bcf8-1b7c-41ed-bb3a-63d87a25d027",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"bb896424-d5f9-4c53-9959-cdfff6016a19",
	41,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::Bool Event Acks');
INSERT INTO GD_SHP
	VALUES ("7912bcf8-1b7c-41ed-bb3a-63d87a25d027");
INSERT INTO GD_NCS
	VALUES ("7912bcf8-1b7c-41ed-bb3a-63d87a25d027");
INSERT INTO DIM_ND
	VALUES (160.000000,
	96.000000,
	"7912bcf8-1b7c-41ed-bb3a-63d87a25d027");
INSERT INTO DIM_GE
	VALUES (2832.000000,
	1712.000000,
	"7912bcf8-1b7c-41ed-bb3a-63d87a25d027",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("7912bcf8-1b7c-41ed-bb3a-63d87a25d027",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("5f554da6-606e-4c3e-8829-f5213d4bdbd5",
	2864.000000,
	1712.000000,
	"7912bcf8-1b7c-41ed-bb3a-63d87a25d027");
INSERT INTO DIM_CON
	VALUES ("b34c5937-1778-4a7a-9664-a979c42a2669",
	2960.000000,
	1712.000000,
	"7912bcf8-1b7c-41ed-bb3a-63d87a25d027");
INSERT INTO DIM_CON
	VALUES ("25e9ee9b-b8b1-47c5-a844-84b516ae295b",
	2992.000000,
	1744.000000,
	"7912bcf8-1b7c-41ed-bb3a-63d87a25d027");
INSERT INTO DIM_CON
	VALUES ("6bf452a2-9721-4181-8fb6-856a868b5a7e",
	2992.000000,
	1792.000000,
	"7912bcf8-1b7c-41ed-bb3a-63d87a25d027");
INSERT INTO DIM_CON
	VALUES ("1bac4d9f-fe79-4247-a10a-c4374628e34c",
	2944.000000,
	1808.000000,
	"7912bcf8-1b7c-41ed-bb3a-63d87a25d027");
INSERT INTO DIM_CON
	VALUES ("f6d44134-5d80-4217-8a7c-1b259f97e52c",
	2832.000000,
	1728.000000,
	"7912bcf8-1b7c-41ed-bb3a-63d87a25d027");
INSERT INTO GD_GE
	VALUES ("9ccdbff0-2e30-4ab7-9eab-daff43ca311b",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"f59b6daf-3dfb-42ee-9ca0-fe4a7cac5bf2",
	41,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::Int Event Acks');
INSERT INTO GD_SHP
	VALUES ("9ccdbff0-2e30-4ab7-9eab-daff43ca311b");
INSERT INTO GD_NCS
	VALUES ("9ccdbff0-2e30-4ab7-9eab-daff43ca311b");
INSERT INTO DIM_ND
	VALUES (160.000000,
	96.000000,
	"9ccdbff0-2e30-4ab7-9eab-daff43ca311b");
INSERT INTO DIM_GE
	VALUES (3152.000000,
	1712.000000,
	"9ccdbff0-2e30-4ab7-9eab-daff43ca311b",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("9ccdbff0-2e30-4ab7-9eab-daff43ca311b",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_CON
	VALUES ("b198e4ca-96e4-4ef7-b229-ef9e4755974e",
	3216.000000,
	1808.000000,
	"9ccdbff0-2e30-4ab7-9eab-daff43ca311b");
INSERT INTO DIM_CON
	VALUES ("a944c018-0a95-4e0c-813f-aae9a8c1ad32",
	3296.000000,
	1808.000000,
	"9ccdbff0-2e30-4ab7-9eab-daff43ca311b");
INSERT INTO DIM_CON
	VALUES ("96c5d7ff-4c54-40f3-988e-64fc2a7cca10",
	3152.000000,
	1744.000000,
	"9ccdbff0-2e30-4ab7-9eab-daff43ca311b");
INSERT INTO DIM_CON
	VALUES ("b72d95ac-637f-46d1-ad81-b6a78580e170",
	3152.000000,
	1792.000000,
	"9ccdbff0-2e30-4ab7-9eab-daff43ca311b");
INSERT INTO DIM_CON
	VALUES ("f3d8f79d-c1bf-40fe-8fa2-a302f0cf73ae",
	3184.000000,
	1808.000000,
	"9ccdbff0-2e30-4ab7-9eab-daff43ca311b");
INSERT INTO DIM_CON
	VALUES ("e88ecd3d-1326-452e-8ce9-2d94376efebb",
	3216.000000,
	1712.000000,
	"9ccdbff0-2e30-4ab7-9eab-daff43ca311b");
INSERT INTO GD_GE
	VALUES ("d448c1a7-16b6-4825-b357-5a24132862d1",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"69919663-ef78-47cb-959a-f49a7a0d2f1d",
	42,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::TCE2: next test in Compound Expressions Using Constants to Compound Expressions Using Local Variables');
INSERT INTO GD_CON
	VALUES ("d448c1a7-16b6-4825-b357-5a24132862d1",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("6fd1e089-37eb-4900-a7cc-f695797a83cc",
	"d448c1a7-16b6-4825-b357-5a24132862d1",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"6fd1e089-37eb-4900-a7cc-f695797a83cc");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"6fd1e089-37eb-4900-a7cc-f695797a83cc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("6fd1e089-37eb-4900-a7cc-f695797a83cc",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("c47cddd3-7c0c-4f12-9b88-e29ccfea20a4",
	"d448c1a7-16b6-4825-b357-5a24132862d1",
	3,
	-105.000000,
	-1.000000);
INSERT INTO DIM_ND
	VALUES (118.000000,
	35.000000,
	"c47cddd3-7c0c-4f12-9b88-e29ccfea20a4");
INSERT INTO DIM_GE
	VALUES (1671.000000,
	1352.000000,
	"c47cddd3-7c0c-4f12-9b88-e29ccfea20a4",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("c47cddd3-7c0c-4f12-9b88-e29ccfea20a4",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("5ca0ad75-8f55-4cb4-b55c-d0809fd9446d",
	"d448c1a7-16b6-4825-b357-5a24132862d1",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"5ca0ad75-8f55-4cb4-b55c-d0809fd9446d");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"5ca0ad75-8f55-4cb4-b55c-d0809fd9446d",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("5ca0ad75-8f55-4cb4-b55c-d0809fd9446d",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("3803c9ae-df74-4790-9e46-fc80d3de7250",
	"d448c1a7-16b6-4825-b357-5a24132862d1",
	"00000000-0000-0000-0000-000000000000",
	"9a1b8266-ace5-4f00-8794-8ecfa4dcfe98",
	"d1b3fb65-cbf2-4a0a-88fb-476e3bd544f4");
INSERT INTO DIM_WAY
	VALUES ("9a1b8266-ace5-4f00-8794-8ecfa4dcfe98",
	1792.000000,
	1344.000000,
	"d448c1a7-16b6-4825-b357-5a24132862d1",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("d1b3fb65-cbf2-4a0a-88fb-476e3bd544f4",
	1792.000000,
	1392.000000,
	"d448c1a7-16b6-4825-b357-5a24132862d1",
	"00000000-0000-0000-0000-000000000000",
	"9a1b8266-ace5-4f00-8794-8ecfa4dcfe98");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"d448c1a7-16b6-4825-b357-5a24132862d1",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("d448c1a7-16b6-4825-b357-5a24132862d1",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("01e96a7f-e054-4858-9a82-313debab56a2",
	"7c278d6e-1649-4b6f-99de-24b1562d9172",
	"d448c1a7-16b6-4825-b357-5a24132862d1");
INSERT INTO GD_GE
	VALUES ("30795104-0cba-4784-839f-92515b1306f7",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"d4fb617f-95dc-4eeb-a960-1f830d5bdf4f",
	42,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::TCE2: next test in Compound Expressions Using Local Variables to Compound Expressions Using Object Attributes');
INSERT INTO GD_CON
	VALUES ("30795104-0cba-4784-839f-92515b1306f7",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("7c48a7ab-c883-4636-a2fd-08e21968574f",
	"30795104-0cba-4784-839f-92515b1306f7",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"7c48a7ab-c883-4636-a2fd-08e21968574f");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"7c48a7ab-c883-4636-a2fd-08e21968574f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("7c48a7ab-c883-4636-a2fd-08e21968574f",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("688f63b2-719c-4617-ab33-7859a477ed66",
	"30795104-0cba-4784-839f-92515b1306f7",
	3,
	-103.000000,
	-2.000000);
INSERT INTO DIM_ND
	VALUES (114.000000,
	34.000000,
	"688f63b2-719c-4617-ab33-7859a477ed66");
INSERT INTO DIM_GE
	VALUES (1673.000000,
	1495.000000,
	"688f63b2-719c-4617-ab33-7859a477ed66",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("688f63b2-719c-4617-ab33-7859a477ed66",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("0b23b7d2-39ef-45c5-aa06-080609136f0a",
	"30795104-0cba-4784-839f-92515b1306f7",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"0b23b7d2-39ef-45c5-aa06-080609136f0a");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"0b23b7d2-39ef-45c5-aa06-080609136f0a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("0b23b7d2-39ef-45c5-aa06-080609136f0a",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("132d4700-506c-4436-99eb-ebfbc71075e4",
	"30795104-0cba-4784-839f-92515b1306f7",
	"00000000-0000-0000-0000-000000000000",
	"59d5364a-2a7b-4773-b4fe-b8d099ba9cea",
	"b7aaaaf2-2b20-4149-88e3-6a9e4c773398");
INSERT INTO DIM_WAY
	VALUES ("59d5364a-2a7b-4773-b4fe-b8d099ba9cea",
	1792.000000,
	1488.000000,
	"30795104-0cba-4784-839f-92515b1306f7",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("b7aaaaf2-2b20-4149-88e3-6a9e4c773398",
	1792.000000,
	1536.000000,
	"30795104-0cba-4784-839f-92515b1306f7",
	"00000000-0000-0000-0000-000000000000",
	"59d5364a-2a7b-4773-b4fe-b8d099ba9cea");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"30795104-0cba-4784-839f-92515b1306f7",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("30795104-0cba-4784-839f-92515b1306f7",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("87b26ee4-b76f-4643-975e-316fa6f42937",
	"4290127d-d419-45a3-9740-88277f862a9f",
	"30795104-0cba-4784-839f-92515b1306f7");
INSERT INTO GD_GE
	VALUES ("01404462-c62e-4a75-884f-09eafac68da2",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"79024cb5-1129-42b4-b981-59280a96a483",
	42,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::TCE3: event with supp data in Compound Expressions Using Object Attributes to Compound Expressions Using Supplemental Data Items Received From An Event');
INSERT INTO GD_CON
	VALUES ("01404462-c62e-4a75-884f-09eafac68da2",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("d376dd46-64e8-48c4-aa97-4b49c81195e7",
	"01404462-c62e-4a75-884f-09eafac68da2",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"d376dd46-64e8-48c4-aa97-4b49c81195e7");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"d376dd46-64e8-48c4-aa97-4b49c81195e7",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("d376dd46-64e8-48c4-aa97-4b49c81195e7",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("af6bd19b-189d-4f6d-9440-2a91decd13ea",
	"01404462-c62e-4a75-884f-09eafac68da2",
	3,
	-9.000000,
	1.000000);
INSERT INTO DIM_ND
	VALUES (159.000000,
	40.000000,
	"af6bd19b-189d-4f6d-9440-2a91decd13ea");
INSERT INTO DIM_GE
	VALUES (1618.000000,
	1639.000000,
	"af6bd19b-189d-4f6d-9440-2a91decd13ea",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("af6bd19b-189d-4f6d-9440-2a91decd13ea",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("9174a388-0467-4f15-a85d-fda6b5d8b8fb",
	"01404462-c62e-4a75-884f-09eafac68da2",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"9174a388-0467-4f15-a85d-fda6b5d8b8fb");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"9174a388-0467-4f15-a85d-fda6b5d8b8fb",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("9174a388-0467-4f15-a85d-fda6b5d8b8fb",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("0b13e297-6bbd-4297-a2b1-0612e0f2dd67",
	"01404462-c62e-4a75-884f-09eafac68da2",
	"00000000-0000-0000-0000-000000000000",
	"ea158404-4c98-4dae-b8a8-b6171fa63a9b",
	"6fb4bf3e-4414-429b-914f-e2d297ede623");
INSERT INTO DIM_WAY
	VALUES ("ea158404-4c98-4dae-b8a8-b6171fa63a9b",
	1792.000000,
	1632.000000,
	"01404462-c62e-4a75-884f-09eafac68da2",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("6fb4bf3e-4414-429b-914f-e2d297ede623",
	1792.000000,
	1680.000000,
	"01404462-c62e-4a75-884f-09eafac68da2",
	"00000000-0000-0000-0000-000000000000",
	"ea158404-4c98-4dae-b8a8-b6171fa63a9b");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"01404462-c62e-4a75-884f-09eafac68da2",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("01404462-c62e-4a75-884f-09eafac68da2",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("25c0c366-51e3-434d-a9c2-3e4b399f938d",
	"97cbb85e-5a47-41b0-8b1f-ac2ddc2038d5",
	"01404462-c62e-4a75-884f-09eafac68da2");
INSERT INTO GD_GE
	VALUES ("630fbce2-61e9-4411-88cb-18774efb14ce",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"8ab50f39-ecf5-4d3b-8cdc-38f7de5b5ca2",
	42,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::TCE1: start test in Compound Expressions Using Constants to Compound Expressions Using Constants');
INSERT INTO GD_CON
	VALUES ("630fbce2-61e9-4411-88cb-18774efb14ce",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("6ff124bf-f9e8-4ea9-bda7-a71ad3ba22fa",
	"630fbce2-61e9-4411-88cb-18774efb14ce",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"6ff124bf-f9e8-4ea9-bda7-a71ad3ba22fa");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"6ff124bf-f9e8-4ea9-bda7-a71ad3ba22fa",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("6ff124bf-f9e8-4ea9-bda7-a71ad3ba22fa",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("103026cc-af01-4d46-8f53-ad603e2f165b",
	"630fbce2-61e9-4411-88cb-18774efb14ce",
	3,
	108.000000,
	-48.000000);
INSERT INTO DIM_ND
	VALUES (108.000000,
	22.000000,
	"103026cc-af01-4d46-8f53-ad603e2f165b");
INSERT INTO DIM_GE
	VALUES (1658.000000,
	1191.000000,
	"103026cc-af01-4d46-8f53-ad603e2f165b",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("103026cc-af01-4d46-8f53-ad603e2f165b",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("8238e900-28e0-444b-aa4e-e775cadf71b5",
	"630fbce2-61e9-4411-88cb-18774efb14ce",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"8238e900-28e0-444b-aa4e-e775cadf71b5");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"8238e900-28e0-444b-aa4e-e775cadf71b5",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("8238e900-28e0-444b-aa4e-e775cadf71b5",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("9a75bf65-b4f5-49f4-b3fe-c097020d19d9",
	"630fbce2-61e9-4411-88cb-18774efb14ce",
	"00000000-0000-0000-0000-000000000000",
	"92daec6d-b082-4e8e-9d63-138cb22917c7",
	"9ffdd906-0f1b-4f25-a955-1c42a7e2331c");
INSERT INTO GD_LS
	VALUES ("0118af1e-078c-4b36-82aa-a219b874f6d6",
	"630fbce2-61e9-4411-88cb-18774efb14ce",
	"9a75bf65-b4f5-49f4-b3fe-c097020d19d9",
	"9ffdd906-0f1b-4f25-a955-1c42a7e2331c",
	"60c82909-31d1-4848-968f-ee7f7cef091c");
INSERT INTO GD_LS
	VALUES ("7c9cca10-5a23-4a62-8d45-0a2e46ed64cb",
	"630fbce2-61e9-4411-88cb-18774efb14ce",
	"0118af1e-078c-4b36-82aa-a219b874f6d6",
	"60c82909-31d1-4848-968f-ee7f7cef091c",
	"3620fcb5-ae87-4b43-8e49-c2731a110b83");
INSERT INTO GD_LS
	VALUES ("ee878709-b867-46be-8ab9-06e1aaf27ca6",
	"630fbce2-61e9-4411-88cb-18774efb14ce",
	"7c9cca10-5a23-4a62-8d45-0a2e46ed64cb",
	"3620fcb5-ae87-4b43-8e49-c2731a110b83",
	"8bb1f3c9-d309-4525-9a65-6aa472ced33c");
INSERT INTO DIM_WAY
	VALUES ("92daec6d-b082-4e8e-9d63-138cb22917c7",
	1696.000000,
	1280.000000,
	"630fbce2-61e9-4411-88cb-18774efb14ce",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("9ffdd906-0f1b-4f25-a955-1c42a7e2331c",
	1664.000000,
	1280.000000,
	"630fbce2-61e9-4411-88cb-18774efb14ce",
	"00000000-0000-0000-0000-000000000000",
	"92daec6d-b082-4e8e-9d63-138cb22917c7");
INSERT INTO DIM_WAY
	VALUES ("60c82909-31d1-4848-968f-ee7f7cef091c",
	1664.000000,
	1216.000000,
	"630fbce2-61e9-4411-88cb-18774efb14ce",
	"00000000-0000-0000-0000-000000000000",
	"9ffdd906-0f1b-4f25-a955-1c42a7e2331c");
INSERT INTO DIM_WAY
	VALUES ("3620fcb5-ae87-4b43-8e49-c2731a110b83",
	1728.000000,
	1216.000000,
	"630fbce2-61e9-4411-88cb-18774efb14ce",
	"00000000-0000-0000-0000-000000000000",
	"60c82909-31d1-4848-968f-ee7f7cef091c");
INSERT INTO DIM_WAY
	VALUES ("8bb1f3c9-d309-4525-9a65-6aa472ced33c",
	1728.000000,
	1248.000000,
	"630fbce2-61e9-4411-88cb-18774efb14ce",
	"00000000-0000-0000-0000-000000000000",
	"3620fcb5-ae87-4b43-8e49-c2731a110b83");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"630fbce2-61e9-4411-88cb-18774efb14ce",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("630fbce2-61e9-4411-88cb-18774efb14ce",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("e6deb4e0-4404-4d40-999e-fb518cdb1174",
	"6314ba84-9820-4789-bb79-979afc38b804",
	"630fbce2-61e9-4411-88cb-18774efb14ce");
INSERT INTO GD_GE
	VALUES ("fc676904-a5b9-4258-9927-3636ad8675d4",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"c4a7c914-a091-4b1e-8302-d39f184da574",
	42,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::TCE2: next test in Compound Expressions Using Supplemental Data Items Received From An Event to Compound Expressions Using Function Invocations');
INSERT INTO GD_CON
	VALUES ("fc676904-a5b9-4258-9927-3636ad8675d4",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("0478655c-e60c-4519-a8e4-d0f9cdec2073",
	"fc676904-a5b9-4258-9927-3636ad8675d4",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"0478655c-e60c-4519-a8e4-d0f9cdec2073");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"0478655c-e60c-4519-a8e4-d0f9cdec2073",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("0478655c-e60c-4519-a8e4-d0f9cdec2073",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("5c7b4db2-d22b-4d79-a71b-e0cb12f409cb",
	"fc676904-a5b9-4258-9927-3636ad8675d4",
	3,
	-10.000000,
	-3.000000);
INSERT INTO DIM_ND
	VALUES (106.000000,
	22.000000,
	"5c7b4db2-d22b-4d79-a71b-e0cb12f409cb");
INSERT INTO DIM_GE
	VALUES (1670.000000,
	1788.000000,
	"5c7b4db2-d22b-4d79-a71b-e0cb12f409cb",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("5c7b4db2-d22b-4d79-a71b-e0cb12f409cb",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("80c3a2da-2462-4bfa-aa7f-471e56144f2c",
	"fc676904-a5b9-4258-9927-3636ad8675d4",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"80c3a2da-2462-4bfa-aa7f-471e56144f2c");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"80c3a2da-2462-4bfa-aa7f-471e56144f2c",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("80c3a2da-2462-4bfa-aa7f-471e56144f2c",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("40742da3-9c45-4a28-a2d0-1a18cf1f1861",
	"fc676904-a5b9-4258-9927-3636ad8675d4",
	"00000000-0000-0000-0000-000000000000",
	"d97d0792-95db-4bdc-8618-9a904c15d4b2",
	"922dc4d8-fa35-4d93-8839-209fbc7eea08");
INSERT INTO DIM_WAY
	VALUES ("d97d0792-95db-4bdc-8618-9a904c15d4b2",
	1792.000000,
	1776.000000,
	"fc676904-a5b9-4258-9927-3636ad8675d4",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("922dc4d8-fa35-4d93-8839-209fbc7eea08",
	1792.000000,
	1824.000000,
	"fc676904-a5b9-4258-9927-3636ad8675d4",
	"00000000-0000-0000-0000-000000000000",
	"d97d0792-95db-4bdc-8618-9a904c15d4b2");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"fc676904-a5b9-4258-9927-3636ad8675d4",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("fc676904-a5b9-4258-9927-3636ad8675d4",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("afd37acc-309a-4115-8539-8a676ce99844",
	"c6b7be02-7424-4a11-b031-3f72134d4366",
	"fc676904-a5b9-4258-9927-3636ad8675d4");
INSERT INTO GD_GE
	VALUES ("5881ac5d-e9ba-46a4-a12b-71436b934baa",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"c4f0c401-4bbb-4184-b131-67e812a47271",
	42,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::TCE2: next test in Compound Expressions Using Function Invocations to Compound Expressions Using Transformer Invocations');
INSERT INTO GD_CON
	VALUES ("5881ac5d-e9ba-46a4-a12b-71436b934baa",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("61494bb3-a297-40ad-8805-21d3678a7ff4",
	"5881ac5d-e9ba-46a4-a12b-71436b934baa",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"61494bb3-a297-40ad-8805-21d3678a7ff4");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"61494bb3-a297-40ad-8805-21d3678a7ff4",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("61494bb3-a297-40ad-8805-21d3678a7ff4",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("6c4316ef-1e8e-4f3b-9b80-0f1f059cf015",
	"5881ac5d-e9ba-46a4-a12b-71436b934baa",
	3,
	-7.000000,
	-4.000000);
INSERT INTO DIM_ND
	VALUES (106.000000,
	22.000000,
	"6c4316ef-1e8e-4f3b-9b80-0f1f059cf015");
INSERT INTO DIM_GE
	VALUES (1673.000000,
	1931.000000,
	"6c4316ef-1e8e-4f3b-9b80-0f1f059cf015",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("6c4316ef-1e8e-4f3b-9b80-0f1f059cf015",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("b3df0fff-7d5e-4445-8168-5a1cf524d227",
	"5881ac5d-e9ba-46a4-a12b-71436b934baa",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"b3df0fff-7d5e-4445-8168-5a1cf524d227");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"b3df0fff-7d5e-4445-8168-5a1cf524d227",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("b3df0fff-7d5e-4445-8168-5a1cf524d227",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("2cde0641-27ec-494e-96b4-83b7f61e6a2b",
	"5881ac5d-e9ba-46a4-a12b-71436b934baa",
	"00000000-0000-0000-0000-000000000000",
	"cbd1356e-8960-4ab9-a4dd-61eac8fbe240",
	"e0bef623-547c-4a7e-9041-5d9fdfb943f6");
INSERT INTO DIM_WAY
	VALUES ("cbd1356e-8960-4ab9-a4dd-61eac8fbe240",
	1792.000000,
	1920.000000,
	"5881ac5d-e9ba-46a4-a12b-71436b934baa",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("e0bef623-547c-4a7e-9041-5d9fdfb943f6",
	1792.000000,
	1968.000000,
	"5881ac5d-e9ba-46a4-a12b-71436b934baa",
	"00000000-0000-0000-0000-000000000000",
	"cbd1356e-8960-4ab9-a4dd-61eac8fbe240");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"5881ac5d-e9ba-46a4-a12b-71436b934baa",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("5881ac5d-e9ba-46a4-a12b-71436b934baa",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("89eabd89-0635-43d5-ae83-98875a99d849",
	"9c375465-a666-4e40-8627-34457fe0fa16",
	"5881ac5d-e9ba-46a4-a12b-71436b934baa");
INSERT INTO GD_GE
	VALUES ("f34294a9-e063-44fa-bf59-976f6f1070ec",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"02d5d401-b700-4b20-a696-e4be0eb8c686",
	42,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::TCE2: next test in Compound Expressions Using Transformer Invocations to Compound Expressions Using Bridge Invocations');
INSERT INTO GD_CON
	VALUES ("f34294a9-e063-44fa-bf59-976f6f1070ec",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("aa373d0c-6b83-4d01-b5f6-240913f6e52c",
	"f34294a9-e063-44fa-bf59-976f6f1070ec",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"aa373d0c-6b83-4d01-b5f6-240913f6e52c");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"aa373d0c-6b83-4d01-b5f6-240913f6e52c",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("aa373d0c-6b83-4d01-b5f6-240913f6e52c",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("681f3d87-5c25-4005-8c99-ac8fa4b21e63",
	"f34294a9-e063-44fa-bf59-976f6f1070ec",
	3,
	-6.000000,
	-5.000000);
INSERT INTO DIM_ND
	VALUES (106.000000,
	22.000000,
	"681f3d87-5c25-4005-8c99-ac8fa4b21e63");
INSERT INTO DIM_GE
	VALUES (1674.000000,
	2074.000000,
	"681f3d87-5c25-4005-8c99-ac8fa4b21e63",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("681f3d87-5c25-4005-8c99-ac8fa4b21e63",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("1f502af7-8b33-43d0-94fc-2162cf127cbc",
	"f34294a9-e063-44fa-bf59-976f6f1070ec",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"1f502af7-8b33-43d0-94fc-2162cf127cbc");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"1f502af7-8b33-43d0-94fc-2162cf127cbc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("1f502af7-8b33-43d0-94fc-2162cf127cbc",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("22030e1c-59bc-406f-a2da-0500fba5e1c5",
	"f34294a9-e063-44fa-bf59-976f6f1070ec",
	"00000000-0000-0000-0000-000000000000",
	"5839be10-e7b6-4e44-b04f-dcf7fa873976",
	"3fc48b93-778f-4210-aee3-389bb9c689b1");
INSERT INTO DIM_WAY
	VALUES ("5839be10-e7b6-4e44-b04f-dcf7fa873976",
	1792.000000,
	2064.000000,
	"f34294a9-e063-44fa-bf59-976f6f1070ec",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("3fc48b93-778f-4210-aee3-389bb9c689b1",
	1792.000000,
	2112.000000,
	"f34294a9-e063-44fa-bf59-976f6f1070ec",
	"00000000-0000-0000-0000-000000000000",
	"5839be10-e7b6-4e44-b04f-dcf7fa873976");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"f34294a9-e063-44fa-bf59-976f6f1070ec",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("f34294a9-e063-44fa-bf59-976f6f1070ec",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("cc9ff2eb-65c1-4d6d-9154-028933bfa191",
	"99234935-4e0d-453a-b2ef-3b8efc5b9f9f",
	"f34294a9-e063-44fa-bf59-976f6f1070ec");
INSERT INTO GD_GE
	VALUES ("ab2ed2c2-e823-4788-8f27-100fe3789ed7",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"e3bed8cf-b817-4cd4-9567-6721750b7b9d",
	42,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::TCE2: next test in Compound Expressions Using Bridge Invocations to Order of Operations');
INSERT INTO GD_CON
	VALUES ("ab2ed2c2-e823-4788-8f27-100fe3789ed7",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("c3474523-a91f-4ed1-b0d2-1d9aa1cfc80a",
	"ab2ed2c2-e823-4788-8f27-100fe3789ed7",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"c3474523-a91f-4ed1-b0d2-1d9aa1cfc80a");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"c3474523-a91f-4ed1-b0d2-1d9aa1cfc80a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("c3474523-a91f-4ed1-b0d2-1d9aa1cfc80a",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("697fd05b-3912-4493-ac41-6a0c390faf88",
	"ab2ed2c2-e823-4788-8f27-100fe3789ed7",
	3,
	-7.000000,
	-5.000000);
INSERT INTO DIM_ND
	VALUES (106.000000,
	22.000000,
	"697fd05b-3912-4493-ac41-6a0c390faf88");
INSERT INTO DIM_GE
	VALUES (1673.000000,
	2218.000000,
	"697fd05b-3912-4493-ac41-6a0c390faf88",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("697fd05b-3912-4493-ac41-6a0c390faf88",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("7acff784-73dd-451c-9286-470561bcd4f7",
	"ab2ed2c2-e823-4788-8f27-100fe3789ed7",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"7acff784-73dd-451c-9286-470561bcd4f7");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"7acff784-73dd-451c-9286-470561bcd4f7",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("7acff784-73dd-451c-9286-470561bcd4f7",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("766ec421-9d9e-4633-91e8-ee26aa8e30c5",
	"ab2ed2c2-e823-4788-8f27-100fe3789ed7",
	"00000000-0000-0000-0000-000000000000",
	"9fb778bc-e4dc-4574-9b71-1cb60d0c1b08",
	"dfb0713f-8cd9-4989-b6c3-beea6e51930f");
INSERT INTO DIM_WAY
	VALUES ("9fb778bc-e4dc-4574-9b71-1cb60d0c1b08",
	1792.000000,
	2208.000000,
	"ab2ed2c2-e823-4788-8f27-100fe3789ed7",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("dfb0713f-8cd9-4989-b6c3-beea6e51930f",
	1792.000000,
	2256.000000,
	"ab2ed2c2-e823-4788-8f27-100fe3789ed7",
	"00000000-0000-0000-0000-000000000000",
	"9fb778bc-e4dc-4574-9b71-1cb60d0c1b08");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"ab2ed2c2-e823-4788-8f27-100fe3789ed7",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("ab2ed2c2-e823-4788-8f27-100fe3789ed7",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("2ca10bba-abae-485e-b85b-77918e83d406",
	"05ee9406-833e-462b-a60c-8dabe3d515ee",
	"ab2ed2c2-e823-4788-8f27-100fe3789ed7");
INSERT INTO GD_GE
	VALUES ("5610ffb1-35eb-41b4-ac83-4d3cb2aa9d9f",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"0e40ce2a-6fd0-44f2-abea-69d9058b2710",
	42,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::TCE2: next test in Order of Operations to Stress Limits of Compound Expressions');
INSERT INTO GD_CON
	VALUES ("5610ffb1-35eb-41b4-ac83-4d3cb2aa9d9f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("f68f379e-2199-4a6f-b765-f08ba790761e",
	"5610ffb1-35eb-41b4-ac83-4d3cb2aa9d9f",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"f68f379e-2199-4a6f-b765-f08ba790761e");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"f68f379e-2199-4a6f-b765-f08ba790761e",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("f68f379e-2199-4a6f-b765-f08ba790761e",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("3087a06b-851d-4bb4-bafe-82a9fd164242",
	"5610ffb1-35eb-41b4-ac83-4d3cb2aa9d9f",
	3,
	63.000000,
	513.000000);
INSERT INTO DIM_ND
	VALUES (106.000000,
	22.000000,
	"3087a06b-851d-4bb4-bafe-82a9fd164242");
INSERT INTO DIM_GE
	VALUES (1887.000000,
	2296.000000,
	"3087a06b-851d-4bb4-bafe-82a9fd164242",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("3087a06b-851d-4bb4-bafe-82a9fd164242",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("a01aef34-fed3-4329-a842-0fed9b0c39fe",
	"5610ffb1-35eb-41b4-ac83-4d3cb2aa9d9f",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"a01aef34-fed3-4329-a842-0fed9b0c39fe");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"a01aef34-fed3-4329-a842-0fed9b0c39fe",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("a01aef34-fed3-4329-a842-0fed9b0c39fe",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("d7e33b7d-6b7f-4899-a09b-279b9ba2870c",
	"5610ffb1-35eb-41b4-ac83-4d3cb2aa9d9f",
	"00000000-0000-0000-0000-000000000000",
	"2185bb2b-95c6-432e-b7e7-085dad6a0181",
	"7c63436d-c4aa-431b-8610-c11e9f3ec119");
INSERT INTO GD_LS
	VALUES ("0e0ec1e3-8c71-4594-b401-f0ed07e189fc",
	"5610ffb1-35eb-41b4-ac83-4d3cb2aa9d9f",
	"d7e33b7d-6b7f-4899-a09b-279b9ba2870c",
	"7c63436d-c4aa-431b-8610-c11e9f3ec119",
	"12dd05e7-afe6-4534-8ce9-0092615d5858");
INSERT INTO GD_LS
	VALUES ("3e0eb756-6f64-4379-82a2-afaad73dad85",
	"5610ffb1-35eb-41b4-ac83-4d3cb2aa9d9f",
	"0e0ec1e3-8c71-4594-b401-f0ed07e189fc",
	"12dd05e7-afe6-4534-8ce9-0092615d5858",
	"7602fdf8-f197-4dfd-ad0a-2b12b7391568");
INSERT INTO DIM_WAY
	VALUES ("2185bb2b-95c6-432e-b7e7-085dad6a0181",
	1872.000000,
	2288.000000,
	"5610ffb1-35eb-41b4-ac83-4d3cb2aa9d9f",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("7c63436d-c4aa-431b-8610-c11e9f3ec119",
	1936.000000,
	2288.000000,
	"5610ffb1-35eb-41b4-ac83-4d3cb2aa9d9f",
	"00000000-0000-0000-0000-000000000000",
	"2185bb2b-95c6-432e-b7e7-085dad6a0181");
INSERT INTO DIM_WAY
	VALUES ("12dd05e7-afe6-4534-8ce9-0092615d5858",
	1936.000000,
	1296.000000,
	"5610ffb1-35eb-41b4-ac83-4d3cb2aa9d9f",
	"00000000-0000-0000-0000-000000000000",
	"7c63436d-c4aa-431b-8610-c11e9f3ec119");
INSERT INTO DIM_WAY
	VALUES ("7602fdf8-f197-4dfd-ad0a-2b12b7391568",
	1984.000000,
	1296.000000,
	"5610ffb1-35eb-41b4-ac83-4d3cb2aa9d9f",
	"00000000-0000-0000-0000-000000000000",
	"12dd05e7-afe6-4534-8ce9-0092615d5858");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"5610ffb1-35eb-41b4-ac83-4d3cb2aa9d9f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("5610ffb1-35eb-41b4-ac83-4d3cb2aa9d9f",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("57acf392-e767-4829-8d80-32e55930c54c",
	"53110979-cacd-4097-8e5c-88abfe3230c0",
	"5610ffb1-35eb-41b4-ac83-4d3cb2aa9d9f");
INSERT INTO GD_GE
	VALUES ("25bacdfb-11ff-4568-bdb4-a7b831f32790",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"e4e3f8f6-40be-446a-acbd-c00d0b8aa7c0",
	42,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::TCE2: next test in Bridges Within Expressions to Transforms Within Expressions');
INSERT INTO GD_CON
	VALUES ("25bacdfb-11ff-4568-bdb4-a7b831f32790",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("c6fcc201-06ae-4751-a964-bb6bc7fdebdd",
	"25bacdfb-11ff-4568-bdb4-a7b831f32790",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"c6fcc201-06ae-4751-a964-bb6bc7fdebdd");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"c6fcc201-06ae-4751-a964-bb6bc7fdebdd",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("c6fcc201-06ae-4751-a964-bb6bc7fdebdd",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("2a4ec54f-3a9b-409f-9f41-06bacd4aa1cb",
	"25bacdfb-11ff-4568-bdb4-a7b831f32790",
	3,
	132.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (106.000000,
	22.000000,
	"2a4ec54f-3a9b-409f-9f41-06bacd4aa1cb");
INSERT INTO DIM_GE
	VALUES (2084.000000,
	1503.000000,
	"2a4ec54f-3a9b-409f-9f41-06bacd4aa1cb",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("2a4ec54f-3a9b-409f-9f41-06bacd4aa1cb",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("31912bed-1970-4d31-84e4-92b2ef98aae3",
	"25bacdfb-11ff-4568-bdb4-a7b831f32790",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"31912bed-1970-4d31-84e4-92b2ef98aae3");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"31912bed-1970-4d31-84e4-92b2ef98aae3",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("31912bed-1970-4d31-84e4-92b2ef98aae3",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("c1dcfca0-7aa1-4b0a-8493-914ffe0ea294",
	"25bacdfb-11ff-4568-bdb4-a7b831f32790",
	"00000000-0000-0000-0000-000000000000",
	"2bec7376-94c6-42b2-b4ae-bda83a2ce47e",
	"2d3abd82-62e4-4928-81ee-2778765f8c6a");
INSERT INTO DIM_WAY
	VALUES ("2bec7376-94c6-42b2-b4ae-bda83a2ce47e",
	2064.000000,
	1488.000000,
	"25bacdfb-11ff-4568-bdb4-a7b831f32790",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("2d3abd82-62e4-4928-81ee-2778765f8c6a",
	2064.000000,
	1536.000000,
	"25bacdfb-11ff-4568-bdb4-a7b831f32790",
	"00000000-0000-0000-0000-000000000000",
	"2bec7376-94c6-42b2-b4ae-bda83a2ce47e");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"25bacdfb-11ff-4568-bdb4-a7b831f32790",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("25bacdfb-11ff-4568-bdb4-a7b831f32790",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("00931ab1-d0c5-4391-bdd9-bfc4aac5e7b8",
	"79ab3e32-1f31-447a-aabf-76db8c373c50",
	"25bacdfb-11ff-4568-bdb4-a7b831f32790");
INSERT INTO GD_GE
	VALUES ("4c0008e6-377c-41b4-803f-8b201a278ac0",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"af21614f-65b7-478f-ba94-a40003ba39fb",
	42,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::TCE2: next test in Stress Limits of Compound Expressions to Bridges Within Expressions');
INSERT INTO GD_CON
	VALUES ("4c0008e6-377c-41b4-803f-8b201a278ac0",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("26f8612f-5069-4442-832f-aebd1011dc26",
	"4c0008e6-377c-41b4-803f-8b201a278ac0",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"26f8612f-5069-4442-832f-aebd1011dc26");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"26f8612f-5069-4442-832f-aebd1011dc26",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("26f8612f-5069-4442-832f-aebd1011dc26",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("5950ad30-7733-4953-b44b-818d8332994e",
	"4c0008e6-377c-41b4-803f-8b201a278ac0",
	3,
	128.000000,
	-4.000000);
INSERT INTO DIM_ND
	VALUES (106.000000,
	22.000000,
	"5950ad30-7733-4953-b44b-818d8332994e");
INSERT INTO DIM_GE
	VALUES (2080.000000,
	1355.000000,
	"5950ad30-7733-4953-b44b-818d8332994e",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("5950ad30-7733-4953-b44b-818d8332994e",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("b1ad81f2-cc03-4ecf-b3c3-6d8957111543",
	"4c0008e6-377c-41b4-803f-8b201a278ac0",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"b1ad81f2-cc03-4ecf-b3c3-6d8957111543");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"b1ad81f2-cc03-4ecf-b3c3-6d8957111543",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("b1ad81f2-cc03-4ecf-b3c3-6d8957111543",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("f4611c66-b098-47e9-a230-e298ba37070c",
	"4c0008e6-377c-41b4-803f-8b201a278ac0",
	"00000000-0000-0000-0000-000000000000",
	"383ae4fd-22c2-4692-9dda-9565632c5432",
	"342845ff-e3c0-4884-a5da-db6926e880fa");
INSERT INTO DIM_WAY
	VALUES ("383ae4fd-22c2-4692-9dda-9565632c5432",
	2064.000000,
	1344.000000,
	"4c0008e6-377c-41b4-803f-8b201a278ac0",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("342845ff-e3c0-4884-a5da-db6926e880fa",
	2064.000000,
	1392.000000,
	"4c0008e6-377c-41b4-803f-8b201a278ac0",
	"00000000-0000-0000-0000-000000000000",
	"383ae4fd-22c2-4692-9dda-9565632c5432");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"4c0008e6-377c-41b4-803f-8b201a278ac0",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("4c0008e6-377c-41b4-803f-8b201a278ac0",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("0b5535b7-6b5a-4e9a-943f-eff803538b10",
	"3b1eb07e-b6e3-4fe3-af68-bd472cfe3b9a",
	"4c0008e6-377c-41b4-803f-8b201a278ac0");
INSERT INTO GD_GE
	VALUES ("026778bb-d710-4db5-9ad2-103450700716",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"789768d8-0818-4394-bbb1-069dc80b2e0f",
	42,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::TCE4: next test with supp data in Transforms Within Expressions to Unary Ops');
INSERT INTO GD_CON
	VALUES ("026778bb-d710-4db5-9ad2-103450700716",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("da874af3-9039-4645-bfb2-1180e0a94094",
	"026778bb-d710-4db5-9ad2-103450700716",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"da874af3-9039-4645-bfb2-1180e0a94094");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"da874af3-9039-4645-bfb2-1180e0a94094",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("da874af3-9039-4645-bfb2-1180e0a94094",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("bb5dc566-8252-4007-a3eb-540742ec70df",
	"026778bb-d710-4db5-9ad2-103450700716",
	3,
	202.000000,
	-2.000000);
INSERT INTO DIM_ND
	VALUES (181.000000,
	40.000000,
	"bb5dc566-8252-4007-a3eb-540742ec70df");
INSERT INTO DIM_GE
	VALUES (2079.000000,
	1636.000000,
	"bb5dc566-8252-4007-a3eb-540742ec70df",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("bb5dc566-8252-4007-a3eb-540742ec70df",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("7c180c91-6ce3-4ece-a11c-598e810b738f",
	"026778bb-d710-4db5-9ad2-103450700716",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"7c180c91-6ce3-4ece-a11c-598e810b738f");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"7c180c91-6ce3-4ece-a11c-598e810b738f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("7c180c91-6ce3-4ece-a11c-598e810b738f",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("394f7aa2-32bd-4589-90c6-1a141e23e92d",
	"026778bb-d710-4db5-9ad2-103450700716",
	"00000000-0000-0000-0000-000000000000",
	"710afa48-5f53-4a6a-b0de-7370f97c1c90",
	"eb625520-152e-4e74-94ad-4f3723f1a1df");
INSERT INTO DIM_WAY
	VALUES ("710afa48-5f53-4a6a-b0de-7370f97c1c90",
	2064.000000,
	1632.000000,
	"026778bb-d710-4db5-9ad2-103450700716",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("eb625520-152e-4e74-94ad-4f3723f1a1df",
	2064.000000,
	1680.000000,
	"026778bb-d710-4db5-9ad2-103450700716",
	"00000000-0000-0000-0000-000000000000",
	"710afa48-5f53-4a6a-b0de-7370f97c1c90");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"026778bb-d710-4db5-9ad2-103450700716",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("026778bb-d710-4db5-9ad2-103450700716",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("f5361e46-979a-4a69-b6a1-2f147370cea6",
	"1510f8ef-5ddc-4521-986a-a0f417f9b208",
	"026778bb-d710-4db5-9ad2-103450700716");
INSERT INTO GD_GE
	VALUES ("d190f666-b539-46a2-8471-764fc2fcd0a1",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"aa3508ba-3d17-412f-9c9d-b900070fdb1f",
	42,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::TCE4: next test with supp data in Unary Ops to If Expressions');
INSERT INTO GD_CON
	VALUES ("d190f666-b539-46a2-8471-764fc2fcd0a1",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("ebba44c0-4fe7-4291-8528-46dc95a3dbde",
	"d190f666-b539-46a2-8471-764fc2fcd0a1",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"ebba44c0-4fe7-4291-8528-46dc95a3dbde");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"ebba44c0-4fe7-4291-8528-46dc95a3dbde",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("ebba44c0-4fe7-4291-8528-46dc95a3dbde",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("0cae4555-aa41-410c-b1b2-e46cd6abe850",
	"d190f666-b539-46a2-8471-764fc2fcd0a1",
	3,
	203.000000,
	-1.000000);
INSERT INTO DIM_ND
	VALUES (181.000000,
	40.000000,
	"0cae4555-aa41-410c-b1b2-e46cd6abe850");
INSERT INTO DIM_GE
	VALUES (2080.000000,
	1781.000000,
	"0cae4555-aa41-410c-b1b2-e46cd6abe850",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("0cae4555-aa41-410c-b1b2-e46cd6abe850",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("479d8446-72a1-4cc0-8bb4-fbe924a26a36",
	"d190f666-b539-46a2-8471-764fc2fcd0a1",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"479d8446-72a1-4cc0-8bb4-fbe924a26a36");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"479d8446-72a1-4cc0-8bb4-fbe924a26a36",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("479d8446-72a1-4cc0-8bb4-fbe924a26a36",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("8c7ac108-c581-42c0-8007-2de79bef0a3d",
	"d190f666-b539-46a2-8471-764fc2fcd0a1",
	"00000000-0000-0000-0000-000000000000",
	"349a1710-3e24-4b52-9708-7906ff11ce58",
	"f59ec969-705f-498b-a656-56ed27ee932f");
INSERT INTO DIM_WAY
	VALUES ("349a1710-3e24-4b52-9708-7906ff11ce58",
	2064.000000,
	1776.000000,
	"d190f666-b539-46a2-8471-764fc2fcd0a1",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("f59ec969-705f-498b-a656-56ed27ee932f",
	2064.000000,
	1824.000000,
	"d190f666-b539-46a2-8471-764fc2fcd0a1",
	"00000000-0000-0000-0000-000000000000",
	"349a1710-3e24-4b52-9708-7906ff11ce58");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"d190f666-b539-46a2-8471-764fc2fcd0a1",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("d190f666-b539-46a2-8471-764fc2fcd0a1",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("1d5887b4-689f-4d1d-bbb6-2e0a20d15df1",
	"60b3c354-5fd4-4fd4-972d-64a33fe46abd",
	"d190f666-b539-46a2-8471-764fc2fcd0a1");
INSERT INTO GD_GE
	VALUES ("6b58806d-c990-435a-ac0c-66d12db7e756",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"fe0d579a-005b-403c-8f7d-b020cf720be4",
	42,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::TCE4: next test with supp data in If Expressions to Expressions Within Parameters');
INSERT INTO GD_CON
	VALUES ("6b58806d-c990-435a-ac0c-66d12db7e756",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("ae399731-5060-4e3c-97a7-9b3741fc2957",
	"6b58806d-c990-435a-ac0c-66d12db7e756",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"ae399731-5060-4e3c-97a7-9b3741fc2957");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"ae399731-5060-4e3c-97a7-9b3741fc2957",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("ae399731-5060-4e3c-97a7-9b3741fc2957",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("97a8f8fd-9a5f-4061-ac99-d3841bcabdf1",
	"6b58806d-c990-435a-ac0c-66d12db7e756",
	3,
	202.000000,
	-2.000000);
INSERT INTO DIM_ND
	VALUES (181.000000,
	40.000000,
	"97a8f8fd-9a5f-4061-ac99-d3841bcabdf1");
INSERT INTO DIM_GE
	VALUES (2079.000000,
	1924.000000,
	"97a8f8fd-9a5f-4061-ac99-d3841bcabdf1",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("97a8f8fd-9a5f-4061-ac99-d3841bcabdf1",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("752a3bf6-2859-424a-8e88-d657ba67e348",
	"6b58806d-c990-435a-ac0c-66d12db7e756",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"752a3bf6-2859-424a-8e88-d657ba67e348");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"752a3bf6-2859-424a-8e88-d657ba67e348",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("752a3bf6-2859-424a-8e88-d657ba67e348",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("9841cef4-5e31-4081-aeef-7ca0c659ef5d",
	"6b58806d-c990-435a-ac0c-66d12db7e756",
	"00000000-0000-0000-0000-000000000000",
	"09d1e737-8c7d-470a-99b0-f29adf1d7a29",
	"0a652148-ada4-42af-9a21-50c918dd7172");
INSERT INTO DIM_WAY
	VALUES ("09d1e737-8c7d-470a-99b0-f29adf1d7a29",
	2064.000000,
	1920.000000,
	"6b58806d-c990-435a-ac0c-66d12db7e756",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("0a652148-ada4-42af-9a21-50c918dd7172",
	2064.000000,
	1968.000000,
	"6b58806d-c990-435a-ac0c-66d12db7e756",
	"00000000-0000-0000-0000-000000000000",
	"09d1e737-8c7d-470a-99b0-f29adf1d7a29");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"6b58806d-c990-435a-ac0c-66d12db7e756",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("6b58806d-c990-435a-ac0c-66d12db7e756",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("8bdc298a-78f9-4e88-89c1-1491a50b6801",
	"73eedaf2-9e9e-46dd-906a-ae8309a9db7e",
	"6b58806d-c990-435a-ac0c-66d12db7e756");
INSERT INTO GD_GE
	VALUES ("e466dfd2-ed4d-4d6a-b9ff-5f4ff2ba7596",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"bb65cc9d-70ae-4821-a4b4-8d55a8948e5c",
	42,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::TCE5: bool event in Expressions Within Parameters to Count Acks from Bool Event');
INSERT INTO GD_CON
	VALUES ("e466dfd2-ed4d-4d6a-b9ff-5f4ff2ba7596",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("5ccab35a-6054-4da2-9fac-f25e457500e4",
	"e466dfd2-ed4d-4d6a-b9ff-5f4ff2ba7596",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"5ccab35a-6054-4da2-9fac-f25e457500e4");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"5ccab35a-6054-4da2-9fac-f25e457500e4",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("5ccab35a-6054-4da2-9fac-f25e457500e4",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("595138af-1fdc-4e2f-9df7-d56c9fc618a9",
	"e466dfd2-ed4d-4d6a-b9ff-5f4ff2ba7596",
	3,
	150.000000,
	-39.000000);
INSERT INTO DIM_ND
	VALUES (154.000000,
	22.000000,
	"595138af-1fdc-4e2f-9df7-d56c9fc618a9");
INSERT INTO DIM_GE
	VALUES (2317.000000,
	1920.000000,
	"595138af-1fdc-4e2f-9df7-d56c9fc618a9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("595138af-1fdc-4e2f-9df7-d56c9fc618a9",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("4ed28cc5-4b0d-436b-96ce-f075aa14560c",
	"e466dfd2-ed4d-4d6a-b9ff-5f4ff2ba7596",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"4ed28cc5-4b0d-436b-96ce-f075aa14560c");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"4ed28cc5-4b0d-436b-96ce-f075aa14560c",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("4ed28cc5-4b0d-436b-96ce-f075aa14560c",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("4c576821-99a1-4d5e-beaf-aa6a04c510ab",
	"e466dfd2-ed4d-4d6a-b9ff-5f4ff2ba7596",
	"00000000-0000-0000-0000-000000000000",
	"102af2d9-8be8-49f4-8081-fe4899d11b07",
	"21f89aad-73ca-4334-839f-7a2ab6320753");
INSERT INTO DIM_WAY
	VALUES ("102af2d9-8be8-49f4-8081-fe4899d11b07",
	2160.000000,
	2000.000000,
	"e466dfd2-ed4d-4d6a-b9ff-5f4ff2ba7596",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("21f89aad-73ca-4334-839f-7a2ab6320753",
	2496.000000,
	1952.000000,
	"e466dfd2-ed4d-4d6a-b9ff-5f4ff2ba7596",
	"00000000-0000-0000-0000-000000000000",
	"102af2d9-8be8-49f4-8081-fe4899d11b07");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"e466dfd2-ed4d-4d6a-b9ff-5f4ff2ba7596",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("e466dfd2-ed4d-4d6a-b9ff-5f4ff2ba7596",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("fa399ab9-4d9c-4791-a4fa-40e3e5d0a69c",
	"127ac01c-1845-4ae7-89c9-511041a38ec4",
	"e466dfd2-ed4d-4d6a-b9ff-5f4ff2ba7596");
INSERT INTO GD_GE
	VALUES ("aa7b146b-c5ce-436e-b347-16ee7c018310",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"7e512470-4d2f-4fbe-95a5-5e6497f9c852",
	42,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::TCE6: int event in Expressions Within Parameters to Count Acks from Int Event');
INSERT INTO GD_CON
	VALUES ("aa7b146b-c5ce-436e-b347-16ee7c018310",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("0bc343c6-3bca-469a-aa87-e17398ff610d",
	"aa7b146b-c5ce-436e-b347-16ee7c018310",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"0bc343c6-3bca-469a-aa87-e17398ff610d");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"0bc343c6-3bca-469a-aa87-e17398ff610d",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("0bc343c6-3bca-469a-aa87-e17398ff610d",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("825f8eeb-a8a6-44f8-9653-ec012960d34e",
	"aa7b146b-c5ce-436e-b347-16ee7c018310",
	3,
	150.000000,
	35.000000);
INSERT INTO DIM_ND
	VALUES (135.000000,
	22.000000,
	"825f8eeb-a8a6-44f8-9653-ec012960d34e");
INSERT INTO DIM_GE
	VALUES (2336.000000,
	2090.000000,
	"825f8eeb-a8a6-44f8-9653-ec012960d34e",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("825f8eeb-a8a6-44f8-9653-ec012960d34e",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("2b4c09d2-b3ba-4972-90b6-39d4feba9abc",
	"aa7b146b-c5ce-436e-b347-16ee7c018310",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"2b4c09d2-b3ba-4972-90b6-39d4feba9abc");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"2b4c09d2-b3ba-4972-90b6-39d4feba9abc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("2b4c09d2-b3ba-4972-90b6-39d4feba9abc",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("97f0ae74-2813-40f0-846d-1c7901178456",
	"aa7b146b-c5ce-436e-b347-16ee7c018310",
	"00000000-0000-0000-0000-000000000000",
	"06bbf8d5-6498-4d34-b50b-b95b9ba73ac6",
	"4b0e4ae6-dd7c-48a9-b97d-f613a1224a7d");
INSERT INTO DIM_WAY
	VALUES ("06bbf8d5-6498-4d34-b50b-b95b9ba73ac6",
	2160.000000,
	2032.000000,
	"aa7b146b-c5ce-436e-b347-16ee7c018310",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("4b0e4ae6-dd7c-48a9-b97d-f613a1224a7d",
	2496.000000,
	2080.000000,
	"aa7b146b-c5ce-436e-b347-16ee7c018310",
	"00000000-0000-0000-0000-000000000000",
	"06bbf8d5-6498-4d34-b50b-b95b9ba73ac6");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"aa7b146b-c5ce-436e-b347-16ee7c018310",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("aa7b146b-c5ce-436e-b347-16ee7c018310",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("d7d03175-ced7-43fe-8a51-44060769db4e",
	"a7eebade-8af7-40f6-8ecc-5c2c758f4067",
	"aa7b146b-c5ce-436e-b347-16ee7c018310");
INSERT INTO GD_GE
	VALUES ("99ee898d-e96f-44f6-abc0-8177bfaafbef",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"950621e9-c093-483f-9fe5-860dbf17553e",
	42,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::TCE6: int event in Count Acks from Bool Event to Count Acks from Int Event');
INSERT INTO GD_CON
	VALUES ("99ee898d-e96f-44f6-abc0-8177bfaafbef",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("dbb08c3e-8865-45c9-9849-1615252b2bd7",
	"99ee898d-e96f-44f6-abc0-8177bfaafbef",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"dbb08c3e-8865-45c9-9849-1615252b2bd7");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"dbb08c3e-8865-45c9-9849-1615252b2bd7",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("dbb08c3e-8865-45c9-9849-1615252b2bd7",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("aaa43665-f5fd-4c1a-b2d9-f390f647e4b0",
	"99ee898d-e96f-44f6-abc0-8177bfaafbef",
	3,
	-8.000000,
	-4.000000);
INSERT INTO DIM_ND
	VALUES (135.000000,
	22.000000,
	"aaa43665-f5fd-4c1a-b2d9-f390f647e4b0");
INSERT INTO DIM_GE
	VALUES (2379.000000,
	2011.000000,
	"aaa43665-f5fd-4c1a-b2d9-f390f647e4b0",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("aaa43665-f5fd-4c1a-b2d9-f390f647e4b0",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("3c46b7b2-c1ab-448f-adeb-6832bb7a974a",
	"99ee898d-e96f-44f6-abc0-8177bfaafbef",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"3c46b7b2-c1ab-448f-adeb-6832bb7a974a");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"3c46b7b2-c1ab-448f-adeb-6832bb7a974a",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("3c46b7b2-c1ab-448f-adeb-6832bb7a974a",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("f1abd7b9-3e3d-4e3e-8b3c-78bb8c0c3ec9",
	"99ee898d-e96f-44f6-abc0-8177bfaafbef",
	"00000000-0000-0000-0000-000000000000",
	"1b56a4a9-6705-4345-b639-5c692510c4f0",
	"80cebdcb-11af-42f3-80e4-18a38bbcd3af");
INSERT INTO DIM_WAY
	VALUES ("1b56a4a9-6705-4345-b639-5c692510c4f0",
	2528.000000,
	1984.000000,
	"99ee898d-e96f-44f6-abc0-8177bfaafbef",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("80cebdcb-11af-42f3-80e4-18a38bbcd3af",
	2528.000000,
	2064.000000,
	"99ee898d-e96f-44f6-abc0-8177bfaafbef",
	"00000000-0000-0000-0000-000000000000",
	"1b56a4a9-6705-4345-b639-5c692510c4f0");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"99ee898d-e96f-44f6-abc0-8177bfaafbef",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("99ee898d-e96f-44f6-abc0-8177bfaafbef",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("99012051-652c-4546-8ac4-f7d56d42d449",
	"791fd7e8-84b4-46ec-90c0-65ebb920125c",
	"99ee898d-e96f-44f6-abc0-8177bfaafbef");
INSERT INTO GD_GE
	VALUES ("de75ba8d-672e-41af-9ad3-2135257a5a19",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"c6c48e7d-8f07-4a0a-9051-30ed44c69bc3",
	42,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::TCE5: bool event in Count Acks from Int Event to Count Acks from Bool Event');
INSERT INTO GD_CON
	VALUES ("de75ba8d-672e-41af-9ad3-2135257a5a19",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("b0031941-ced8-49d7-b971-b95724b6154d",
	"de75ba8d-672e-41af-9ad3-2135257a5a19",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"b0031941-ced8-49d7-b971-b95724b6154d");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"b0031941-ced8-49d7-b971-b95724b6154d",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("b0031941-ced8-49d7-b971-b95724b6154d",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("47fd5d1b-e391-4452-926e-5daebd6ab1ea",
	"de75ba8d-672e-41af-9ad3-2135257a5a19",
	3,
	166.000000,
	2.000000);
INSERT INTO DIM_ND
	VALUES (154.000000,
	22.000000,
	"47fd5d1b-e391-4452-926e-5daebd6ab1ea");
INSERT INTO DIM_GE
	VALUES (2646.000000,
	2017.000000,
	"47fd5d1b-e391-4452-926e-5daebd6ab1ea",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("47fd5d1b-e391-4452-926e-5daebd6ab1ea",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("0838eb5f-2803-4a2f-b49c-1bfee63b627c",
	"de75ba8d-672e-41af-9ad3-2135257a5a19",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"0838eb5f-2803-4a2f-b49c-1bfee63b627c");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"0838eb5f-2803-4a2f-b49c-1bfee63b627c",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("0838eb5f-2803-4a2f-b49c-1bfee63b627c",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("5e6ed6e2-77bb-4413-8ad5-da8ee92d2fbe",
	"de75ba8d-672e-41af-9ad3-2135257a5a19",
	"00000000-0000-0000-0000-000000000000",
	"fd67e41c-3e32-430f-a659-48bcc255aba4",
	"168162c6-f830-4070-ab32-f11d762fe52a");
INSERT INTO DIM_WAY
	VALUES ("fd67e41c-3e32-430f-a659-48bcc255aba4",
	2640.000000,
	2064.000000,
	"de75ba8d-672e-41af-9ad3-2135257a5a19",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("168162c6-f830-4070-ab32-f11d762fe52a",
	2640.000000,
	1984.000000,
	"de75ba8d-672e-41af-9ad3-2135257a5a19",
	"00000000-0000-0000-0000-000000000000",
	"fd67e41c-3e32-430f-a659-48bcc255aba4");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"de75ba8d-672e-41af-9ad3-2135257a5a19",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("de75ba8d-672e-41af-9ad3-2135257a5a19",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("f62a9216-71b2-45ff-8ac9-1c9721fe0762",
	"397e1072-b4d1-43fb-8377-94e6aa80de19",
	"de75ba8d-672e-41af-9ad3-2135257a5a19");
INSERT INTO GD_GE
	VALUES ("73169264-151b-4b3d-bb60-2b45a58c2a7c",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"b7a67873-a883-4320-9ab9-a5c0b3e6b2af",
	42,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::TCE5: bool event in Count Acks from Bool Event to Count Acks from Bool Event');
INSERT INTO GD_CON
	VALUES ("73169264-151b-4b3d-bb60-2b45a58c2a7c",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("0997d74a-d981-42dc-aed9-50884322bc9b",
	"73169264-151b-4b3d-bb60-2b45a58c2a7c",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"0997d74a-d981-42dc-aed9-50884322bc9b");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"0997d74a-d981-42dc-aed9-50884322bc9b",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("0997d74a-d981-42dc-aed9-50884322bc9b",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("576336f3-e62b-4b16-9a43-d656826c33e6",
	"73169264-151b-4b3d-bb60-2b45a58c2a7c",
	3,
	2.000000,
	1.000000);
INSERT INTO DIM_ND
	VALUES (154.000000,
	22.000000,
	"576336f3-e62b-4b16-9a43-d656826c33e6");
INSERT INTO DIM_GE
	VALUES (2503.000000,
	1829.000000,
	"576336f3-e62b-4b16-9a43-d656826c33e6",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("576336f3-e62b-4b16-9a43-d656826c33e6",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("321fe7dd-6326-4e33-986c-195e0be706c6",
	"73169264-151b-4b3d-bb60-2b45a58c2a7c",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"321fe7dd-6326-4e33-986c-195e0be706c6");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"321fe7dd-6326-4e33-986c-195e0be706c6",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("321fe7dd-6326-4e33-986c-195e0be706c6",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("315e1188-3a41-4360-95c4-0756d77e0f3d",
	"73169264-151b-4b3d-bb60-2b45a58c2a7c",
	"00000000-0000-0000-0000-000000000000",
	"58d3660c-6a4b-4e97-9c65-12feb6b4bbb2",
	"1fe59a6d-6236-4d66-9fb3-ad3c917eba79");
INSERT INTO GD_LS
	VALUES ("4125762b-0652-4d95-b70d-9e29b11a00fb",
	"73169264-151b-4b3d-bb60-2b45a58c2a7c",
	"315e1188-3a41-4360-95c4-0756d77e0f3d",
	"1fe59a6d-6236-4d66-9fb3-ad3c917eba79",
	"6771921b-eedf-4bae-a348-56532c4fbc92");
INSERT INTO GD_LS
	VALUES ("6bebbd66-dce7-42e2-b4e9-b3a810956078",
	"73169264-151b-4b3d-bb60-2b45a58c2a7c",
	"4125762b-0652-4d95-b70d-9e29b11a00fb",
	"6771921b-eedf-4bae-a348-56532c4fbc92",
	"fca81681-54ed-462f-a1c1-8bdea23f00f1");
INSERT INTO DIM_WAY
	VALUES ("58d3660c-6a4b-4e97-9c65-12feb6b4bbb2",
	2512.000000,
	1888.000000,
	"73169264-151b-4b3d-bb60-2b45a58c2a7c",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("1fe59a6d-6236-4d66-9fb3-ad3c917eba79",
	2512.000000,
	1856.000000,
	"73169264-151b-4b3d-bb60-2b45a58c2a7c",
	"00000000-0000-0000-0000-000000000000",
	"58d3660c-6a4b-4e97-9c65-12feb6b4bbb2");
INSERT INTO DIM_WAY
	VALUES ("6771921b-eedf-4bae-a348-56532c4fbc92",
	2640.000000,
	1856.000000,
	"73169264-151b-4b3d-bb60-2b45a58c2a7c",
	"00000000-0000-0000-0000-000000000000",
	"1fe59a6d-6236-4d66-9fb3-ad3c917eba79");
INSERT INTO DIM_WAY
	VALUES ("fca81681-54ed-462f-a1c1-8bdea23f00f1",
	2640.000000,
	1888.000000,
	"73169264-151b-4b3d-bb60-2b45a58c2a7c",
	"00000000-0000-0000-0000-000000000000",
	"6771921b-eedf-4bae-a348-56532c4fbc92");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"73169264-151b-4b3d-bb60-2b45a58c2a7c",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("73169264-151b-4b3d-bb60-2b45a58c2a7c",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("61975d81-ac3f-43f6-9152-2065cc839e7f",
	"3f1929a9-ae03-4604-a84f-60661f38694c",
	"73169264-151b-4b3d-bb60-2b45a58c2a7c");
INSERT INTO GD_GE
	VALUES ("7cc1c35f-be66-4d6d-8e4d-09c08e331af9",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"3dbb0fb4-5854-4805-a78f-c0b3e04f345a",
	42,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::TCE6: int event in Count Acks from Int Event to Count Acks from Int Event');
INSERT INTO GD_CON
	VALUES ("7cc1c35f-be66-4d6d-8e4d-09c08e331af9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("e8cd701d-85b8-4154-bf5f-7dbed465a56c",
	"7cc1c35f-be66-4d6d-8e4d-09c08e331af9",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"e8cd701d-85b8-4154-bf5f-7dbed465a56c");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"e8cd701d-85b8-4154-bf5f-7dbed465a56c",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("e8cd701d-85b8-4154-bf5f-7dbed465a56c",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("8681d25b-3d05-4bf4-ad49-ba40c692ce9b",
	"7cc1c35f-be66-4d6d-8e4d-09c08e331af9",
	3,
	-8.000000,
	36.000000);
INSERT INTO DIM_ND
	VALUES (135.000000,
	22.000000,
	"8681d25b-3d05-4bf4-ad49-ba40c692ce9b");
INSERT INTO DIM_GE
	VALUES (2511.000000,
	2200.000000,
	"8681d25b-3d05-4bf4-ad49-ba40c692ce9b",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("8681d25b-3d05-4bf4-ad49-ba40c692ce9b",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("1dcc8ec2-e8d8-4a7a-b972-9b26e81aa3b8",
	"7cc1c35f-be66-4d6d-8e4d-09c08e331af9",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"1dcc8ec2-e8d8-4a7a-b972-9b26e81aa3b8");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"1dcc8ec2-e8d8-4a7a-b972-9b26e81aa3b8",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("1dcc8ec2-e8d8-4a7a-b972-9b26e81aa3b8",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("fe5761ba-7768-4d36-bdce-7e211387a277",
	"7cc1c35f-be66-4d6d-8e4d-09c08e331af9",
	"00000000-0000-0000-0000-000000000000",
	"7ab1d965-4fa7-49cc-bc2b-6114c81f53bf",
	"063f917f-3145-4501-9d7f-460a30c7db27");
INSERT INTO GD_LS
	VALUES ("0fd06c86-4db9-4d44-aaab-5d5189321980",
	"7cc1c35f-be66-4d6d-8e4d-09c08e331af9",
	"fe5761ba-7768-4d36-bdce-7e211387a277",
	"063f917f-3145-4501-9d7f-460a30c7db27",
	"75b37cd3-255d-4dc9-bac4-ff5129a1f97f");
INSERT INTO GD_LS
	VALUES ("3c4f8f4e-1f4f-4a98-b39e-f675e89df3cf",
	"7cc1c35f-be66-4d6d-8e4d-09c08e331af9",
	"0fd06c86-4db9-4d44-aaab-5d5189321980",
	"75b37cd3-255d-4dc9-bac4-ff5129a1f97f",
	"a17163fc-d197-4956-97fb-43204777e58c");
INSERT INTO DIM_WAY
	VALUES ("7ab1d965-4fa7-49cc-bc2b-6114c81f53bf",
	2512.000000,
	2160.000000,
	"7cc1c35f-be66-4d6d-8e4d-09c08e331af9",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("063f917f-3145-4501-9d7f-460a30c7db27",
	2512.000000,
	2192.000000,
	"7cc1c35f-be66-4d6d-8e4d-09c08e331af9",
	"00000000-0000-0000-0000-000000000000",
	"7ab1d965-4fa7-49cc-bc2b-6114c81f53bf");
INSERT INTO DIM_WAY
	VALUES ("75b37cd3-255d-4dc9-bac4-ff5129a1f97f",
	2656.000000,
	2192.000000,
	"7cc1c35f-be66-4d6d-8e4d-09c08e331af9",
	"00000000-0000-0000-0000-000000000000",
	"063f917f-3145-4501-9d7f-460a30c7db27");
INSERT INTO DIM_WAY
	VALUES ("a17163fc-d197-4956-97fb-43204777e58c",
	2656.000000,
	2160.000000,
	"7cc1c35f-be66-4d6d-8e4d-09c08e331af9",
	"00000000-0000-0000-0000-000000000000",
	"75b37cd3-255d-4dc9-bac4-ff5129a1f97f");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"7cc1c35f-be66-4d6d-8e4d-09c08e331af9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("7cc1c35f-be66-4d6d-8e4d-09c08e331af9",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("75a38ccc-afcd-463d-8fe2-860b751b5096",
	"4df71954-0eff-4c8e-8e4f-e09852141c13",
	"7cc1c35f-be66-4d6d-8e4d-09c08e331af9");
INSERT INTO GD_GE
	VALUES ("371ff86f-7e23-406e-aaf8-5776ac5ac467",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"a4f002b4-df9e-4908-901f-c2df5ab7cd9d",
	42,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::TCE4: next test with supp data in Count Acks from Bool Event to More Expressions within Parms');
INSERT INTO GD_CON
	VALUES ("371ff86f-7e23-406e-aaf8-5776ac5ac467",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("2582ff6c-2abf-44f2-8ad9-30a1a1967780",
	"371ff86f-7e23-406e-aaf8-5776ac5ac467",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"2582ff6c-2abf-44f2-8ad9-30a1a1967780");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"2582ff6c-2abf-44f2-8ad9-30a1a1967780",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("2582ff6c-2abf-44f2-8ad9-30a1a1967780",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("a80afc82-05ac-48ce-a04a-23f02368d8fc",
	"371ff86f-7e23-406e-aaf8-5776ac5ac467",
	3,
	-16.000000,
	-9.000000);
INSERT INTO DIM_ND
	VALUES (181.000000,
	40.000000,
	"a80afc82-05ac-48ce-a04a-23f02368d8fc");
INSERT INTO DIM_GE
	VALUES (2688.000000,
	1865.000000,
	"a80afc82-05ac-48ce-a04a-23f02368d8fc",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("a80afc82-05ac-48ce-a04a-23f02368d8fc",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("e9ec78a3-31a0-47fa-a9bc-a661d69572e2",
	"371ff86f-7e23-406e-aaf8-5776ac5ac467",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"e9ec78a3-31a0-47fa-a9bc-a661d69572e2");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"e9ec78a3-31a0-47fa-a9bc-a661d69572e2",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("e9ec78a3-31a0-47fa-a9bc-a661d69572e2",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("ab2358cb-61a9-4174-ad32-84025b6fe126",
	"371ff86f-7e23-406e-aaf8-5776ac5ac467",
	"00000000-0000-0000-0000-000000000000",
	"f56cce14-ac33-4571-a8a6-b8704a7e9301",
	"00fe852a-3f1f-4362-986a-2f84c0fb15a2");
INSERT INTO GD_LS
	VALUES ("437a5d1f-4d44-4377-853b-dbded4a4a9b2",
	"371ff86f-7e23-406e-aaf8-5776ac5ac467",
	"ab2358cb-61a9-4174-ad32-84025b6fe126",
	"00fe852a-3f1f-4362-986a-2f84c0fb15a2",
	"a55ff15b-1612-4e56-a6da-51715afc82ae");
INSERT INTO DIM_WAY
	VALUES ("f56cce14-ac33-4571-a8a6-b8704a7e9301",
	2672.000000,
	1920.000000,
	"371ff86f-7e23-406e-aaf8-5776ac5ac467",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("00fe852a-3f1f-4362-986a-2f84c0fb15a2",
	2912.000000,
	1920.000000,
	"371ff86f-7e23-406e-aaf8-5776ac5ac467",
	"00000000-0000-0000-0000-000000000000",
	"f56cce14-ac33-4571-a8a6-b8704a7e9301");
INSERT INTO DIM_WAY
	VALUES ("a55ff15b-1612-4e56-a6da-51715afc82ae",
	2912.000000,
	1968.000000,
	"371ff86f-7e23-406e-aaf8-5776ac5ac467",
	"00000000-0000-0000-0000-000000000000",
	"00fe852a-3f1f-4362-986a-2f84c0fb15a2");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"371ff86f-7e23-406e-aaf8-5776ac5ac467",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("371ff86f-7e23-406e-aaf8-5776ac5ac467",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("00d34d37-b916-4a32-afae-1c68056922f4",
	"86cca8e0-c8c7-47dd-b392-e976c347cc29",
	"371ff86f-7e23-406e-aaf8-5776ac5ac467");
INSERT INTO GD_GE
	VALUES ("ce97d738-a8d6-40e1-b2f4-9a6bc601728d",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"5614f887-d21b-423b-842e-a9c95890b28b",
	42,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::TCE4: next test with supp data in Count Acks from Int Event to More Expressions within Parms');
INSERT INTO GD_CON
	VALUES ("ce97d738-a8d6-40e1-b2f4-9a6bc601728d",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("e5761b1a-9278-4397-9b1e-932d1fb03d62",
	"ce97d738-a8d6-40e1-b2f4-9a6bc601728d",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"e5761b1a-9278-4397-9b1e-932d1fb03d62");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"e5761b1a-9278-4397-9b1e-932d1fb03d62",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("e5761b1a-9278-4397-9b1e-932d1fb03d62",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("3188b541-286c-4b95-a56d-75f987d43be6",
	"ce97d738-a8d6-40e1-b2f4-9a6bc601728d",
	3,
	83.000000,
	35.000000);
INSERT INTO DIM_ND
	VALUES (182.000000,
	60.000000,
	"3188b541-286c-4b95-a56d-75f987d43be6");
INSERT INTO DIM_GE
	VALUES (2699.000000,
	2135.000000,
	"3188b541-286c-4b95-a56d-75f987d43be6",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("3188b541-286c-4b95-a56d-75f987d43be6",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("f8a2a36e-0a04-414d-bb3d-4e9f3cc2a0df",
	"ce97d738-a8d6-40e1-b2f4-9a6bc601728d",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"f8a2a36e-0a04-414d-bb3d-4e9f3cc2a0df");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"f8a2a36e-0a04-414d-bb3d-4e9f3cc2a0df",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("f8a2a36e-0a04-414d-bb3d-4e9f3cc2a0df",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("1e523b6d-19bf-4b0e-92b1-9c97c4c38bcb",
	"ce97d738-a8d6-40e1-b2f4-9a6bc601728d",
	"00000000-0000-0000-0000-000000000000",
	"0f5043e3-e89d-40b7-bd54-66430c986c85",
	"e8b424e3-ccc6-43d6-a48d-f73744b20b47");
INSERT INTO GD_LS
	VALUES ("79654f1c-9426-4ece-b27f-7f33b6586071",
	"ce97d738-a8d6-40e1-b2f4-9a6bc601728d",
	"1e523b6d-19bf-4b0e-92b1-9c97c4c38bcb",
	"e8b424e3-ccc6-43d6-a48d-f73744b20b47",
	"193fdb70-78fe-432e-b47f-6086b832e5eb");
INSERT INTO DIM_WAY
	VALUES ("0f5043e3-e89d-40b7-bd54-66430c986c85",
	2672.000000,
	2128.000000,
	"ce97d738-a8d6-40e1-b2f4-9a6bc601728d",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("e8b424e3-ccc6-43d6-a48d-f73744b20b47",
	2912.000000,
	2128.000000,
	"ce97d738-a8d6-40e1-b2f4-9a6bc601728d",
	"00000000-0000-0000-0000-000000000000",
	"0f5043e3-e89d-40b7-bd54-66430c986c85");
INSERT INTO DIM_WAY
	VALUES ("193fdb70-78fe-432e-b47f-6086b832e5eb",
	2912.000000,
	2080.000000,
	"ce97d738-a8d6-40e1-b2f4-9a6bc601728d",
	"00000000-0000-0000-0000-000000000000",
	"e8b424e3-ccc6-43d6-a48d-f73744b20b47");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"ce97d738-a8d6-40e1-b2f4-9a6bc601728d",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("ce97d738-a8d6-40e1-b2f4-9a6bc601728d",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("482a2664-08cf-4d32-b10c-e6a1cc886268",
	"8a91fc51-a8c8-45d1-81fc-09eefce71fb3",
	"ce97d738-a8d6-40e1-b2f4-9a6bc601728d");
INSERT INTO GD_GE
	VALUES ("71b5b4f6-b384-4a24-9427-6fbaf150928b",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"a0409bdd-e9a1-42a2-9f24-0e996e06ed16",
	42,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::TCE5: bool event in Bool Event Acks to Bool Event Acks');
INSERT INTO GD_CON
	VALUES ("71b5b4f6-b384-4a24-9427-6fbaf150928b",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("7bdcb213-4e73-4727-a527-b658432d7453",
	"71b5b4f6-b384-4a24-9427-6fbaf150928b",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"7bdcb213-4e73-4727-a527-b658432d7453");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"7bdcb213-4e73-4727-a527-b658432d7453",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("7bdcb213-4e73-4727-a527-b658432d7453",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("74945a0c-0f20-4c24-9fed-f79b1edbc009",
	"71b5b4f6-b384-4a24-9427-6fbaf150928b",
	3,
	-5.000000,
	-2.000000);
INSERT INTO DIM_ND
	VALUES (154.000000,
	22.000000,
	"74945a0c-0f20-4c24-9fed-f79b1edbc009");
INSERT INTO DIM_GE
	VALUES (2832.000000,
	1650.000000,
	"74945a0c-0f20-4c24-9fed-f79b1edbc009",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("74945a0c-0f20-4c24-9fed-f79b1edbc009",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("a3241e4e-0f4c-4e42-8ddb-8b461ce769d9",
	"71b5b4f6-b384-4a24-9427-6fbaf150928b",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"a3241e4e-0f4c-4e42-8ddb-8b461ce769d9");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"a3241e4e-0f4c-4e42-8ddb-8b461ce769d9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("a3241e4e-0f4c-4e42-8ddb-8b461ce769d9",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("97131295-78ff-46ce-b40c-663ebebf00c7",
	"71b5b4f6-b384-4a24-9427-6fbaf150928b",
	"00000000-0000-0000-0000-000000000000",
	"d94c2fea-a3f9-4a89-b4f3-3bb004f3e4dc",
	"4a689e8e-c193-41ab-b0fc-c2f2e2241f17");
INSERT INTO GD_LS
	VALUES ("0b666c69-5baf-4bb2-9129-10e185365d47",
	"71b5b4f6-b384-4a24-9427-6fbaf150928b",
	"97131295-78ff-46ce-b40c-663ebebf00c7",
	"4a689e8e-c193-41ab-b0fc-c2f2e2241f17",
	"213de58a-086e-49b5-a401-bd6f96abc6d5");
INSERT INTO GD_LS
	VALUES ("f94352a0-db2e-4f11-861f-a2d00003b1fc",
	"71b5b4f6-b384-4a24-9427-6fbaf150928b",
	"0b666c69-5baf-4bb2-9129-10e185365d47",
	"213de58a-086e-49b5-a401-bd6f96abc6d5",
	"936c9e65-c4d2-4ce3-bcf6-1e9c192120b7");
INSERT INTO DIM_WAY
	VALUES ("d94c2fea-a3f9-4a89-b4f3-3bb004f3e4dc",
	2864.000000,
	1712.000000,
	"71b5b4f6-b384-4a24-9427-6fbaf150928b",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("4a689e8e-c193-41ab-b0fc-c2f2e2241f17",
	2864.000000,
	1680.000000,
	"71b5b4f6-b384-4a24-9427-6fbaf150928b",
	"00000000-0000-0000-0000-000000000000",
	"d94c2fea-a3f9-4a89-b4f3-3bb004f3e4dc");
INSERT INTO DIM_WAY
	VALUES ("213de58a-086e-49b5-a401-bd6f96abc6d5",
	2960.000000,
	1680.000000,
	"71b5b4f6-b384-4a24-9427-6fbaf150928b",
	"00000000-0000-0000-0000-000000000000",
	"4a689e8e-c193-41ab-b0fc-c2f2e2241f17");
INSERT INTO DIM_WAY
	VALUES ("936c9e65-c4d2-4ce3-bcf6-1e9c192120b7",
	2960.000000,
	1712.000000,
	"71b5b4f6-b384-4a24-9427-6fbaf150928b",
	"00000000-0000-0000-0000-000000000000",
	"213de58a-086e-49b5-a401-bd6f96abc6d5");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"71b5b4f6-b384-4a24-9427-6fbaf150928b",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("71b5b4f6-b384-4a24-9427-6fbaf150928b",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("5f554da6-606e-4c3e-8829-f5213d4bdbd5",
	"b34c5937-1778-4a7a-9664-a979c42a2669",
	"71b5b4f6-b384-4a24-9427-6fbaf150928b");
INSERT INTO GD_GE
	VALUES ("b8ec1a76-2df9-4b84-a43f-ffd27366fd49",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"09323ace-3609-45cc-a78d-285a49fc73c6",
	42,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::TCE6: int event in Int Event Acks to Int Event Acks');
INSERT INTO GD_CON
	VALUES ("b8ec1a76-2df9-4b84-a43f-ffd27366fd49",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("e933ee9f-3f46-4aab-84af-93311621b542",
	"b8ec1a76-2df9-4b84-a43f-ffd27366fd49",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"e933ee9f-3f46-4aab-84af-93311621b542");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"e933ee9f-3f46-4aab-84af-93311621b542",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("e933ee9f-3f46-4aab-84af-93311621b542",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("5529842c-dbd9-4a31-8f47-57d94436da75",
	"b8ec1a76-2df9-4b84-a43f-ffd27366fd49",
	3,
	0.000000,
	39.000000);
INSERT INTO DIM_ND
	VALUES (135.000000,
	22.000000,
	"5529842c-dbd9-4a31-8f47-57d94436da75");
INSERT INTO DIM_GE
	VALUES (3191.000000,
	1851.000000,
	"5529842c-dbd9-4a31-8f47-57d94436da75",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("5529842c-dbd9-4a31-8f47-57d94436da75",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("dee984a3-9c28-4c78-b489-fd69e76a0c08",
	"b8ec1a76-2df9-4b84-a43f-ffd27366fd49",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"dee984a3-9c28-4c78-b489-fd69e76a0c08");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"dee984a3-9c28-4c78-b489-fd69e76a0c08",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("dee984a3-9c28-4c78-b489-fd69e76a0c08",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("577fee44-3339-43e4-a635-a793820e75c0",
	"b8ec1a76-2df9-4b84-a43f-ffd27366fd49",
	"00000000-0000-0000-0000-000000000000",
	"f1ea53b0-4c17-408d-bd77-70f17f6cce55",
	"ae49ad79-6d3c-4783-854a-cbe2004e1b28");
INSERT INTO GD_LS
	VALUES ("f720ae92-b4af-4318-85cf-bf77028a454c",
	"b8ec1a76-2df9-4b84-a43f-ffd27366fd49",
	"577fee44-3339-43e4-a635-a793820e75c0",
	"ae49ad79-6d3c-4783-854a-cbe2004e1b28",
	"544eac95-2095-4968-a06b-3da462ee5471");
INSERT INTO GD_LS
	VALUES ("bd11e588-1b93-45a0-82cd-987715eab441",
	"b8ec1a76-2df9-4b84-a43f-ffd27366fd49",
	"f720ae92-b4af-4318-85cf-bf77028a454c",
	"544eac95-2095-4968-a06b-3da462ee5471",
	"f1d9d4e2-549f-46be-a0c9-8c47097d089c");
INSERT INTO DIM_WAY
	VALUES ("f1ea53b0-4c17-408d-bd77-70f17f6cce55",
	3216.000000,
	1808.000000,
	"b8ec1a76-2df9-4b84-a43f-ffd27366fd49",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("ae49ad79-6d3c-4783-854a-cbe2004e1b28",
	3216.000000,
	1840.000000,
	"b8ec1a76-2df9-4b84-a43f-ffd27366fd49",
	"00000000-0000-0000-0000-000000000000",
	"f1ea53b0-4c17-408d-bd77-70f17f6cce55");
INSERT INTO DIM_WAY
	VALUES ("544eac95-2095-4968-a06b-3da462ee5471",
	3296.000000,
	1840.000000,
	"b8ec1a76-2df9-4b84-a43f-ffd27366fd49",
	"00000000-0000-0000-0000-000000000000",
	"ae49ad79-6d3c-4783-854a-cbe2004e1b28");
INSERT INTO DIM_WAY
	VALUES ("f1d9d4e2-549f-46be-a0c9-8c47097d089c",
	3296.000000,
	1808.000000,
	"b8ec1a76-2df9-4b84-a43f-ffd27366fd49",
	"00000000-0000-0000-0000-000000000000",
	"544eac95-2095-4968-a06b-3da462ee5471");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"b8ec1a76-2df9-4b84-a43f-ffd27366fd49",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("b8ec1a76-2df9-4b84-a43f-ffd27366fd49",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("b198e4ca-96e4-4ef7-b229-ef9e4755974e",
	"a944c018-0a95-4e0c-813f-aae9a8c1ad32",
	"b8ec1a76-2df9-4b84-a43f-ffd27366fd49");
INSERT INTO GD_GE
	VALUES ("1af40ada-713c-4573-842d-5b6e7ee03892",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"df45863d-a10d-4131-baf2-e025ecdc4269",
	42,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::TCE5: bool event in Int Event Acks to Bool Event Acks');
INSERT INTO GD_CON
	VALUES ("1af40ada-713c-4573-842d-5b6e7ee03892",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("65686c0e-0734-4900-9b8a-f14c535d4db8",
	"1af40ada-713c-4573-842d-5b6e7ee03892",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"65686c0e-0734-4900-9b8a-f14c535d4db8");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"65686c0e-0734-4900-9b8a-f14c535d4db8",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("65686c0e-0734-4900-9b8a-f14c535d4db8",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("978a6efc-aa15-47e6-84ab-e7b42a4a6ac4",
	"1af40ada-713c-4573-842d-5b6e7ee03892",
	3,
	-2.000000,
	-9.000000);
INSERT INTO DIM_ND
	VALUES (154.000000,
	22.000000,
	"978a6efc-aa15-47e6-84ab-e7b42a4a6ac4");
INSERT INTO DIM_GE
	VALUES (2995.000000,
	1707.000000,
	"978a6efc-aa15-47e6-84ab-e7b42a4a6ac4",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("978a6efc-aa15-47e6-84ab-e7b42a4a6ac4",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("92a1473d-a705-438c-9a38-f29dd4ac78f1",
	"1af40ada-713c-4573-842d-5b6e7ee03892",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"92a1473d-a705-438c-9a38-f29dd4ac78f1");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"92a1473d-a705-438c-9a38-f29dd4ac78f1",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("92a1473d-a705-438c-9a38-f29dd4ac78f1",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("2484f377-2150-4732-8201-768a51206f9e",
	"1af40ada-713c-4573-842d-5b6e7ee03892",
	"00000000-0000-0000-0000-000000000000",
	"1ac63887-eac0-4006-b975-3c11632ba3a3",
	"c093b58a-9306-4cac-b0bd-2a2a13796093");
INSERT INTO DIM_WAY
	VALUES ("1ac63887-eac0-4006-b975-3c11632ba3a3",
	3152.000000,
	1744.000000,
	"1af40ada-713c-4573-842d-5b6e7ee03892",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("c093b58a-9306-4cac-b0bd-2a2a13796093",
	2992.000000,
	1744.000000,
	"1af40ada-713c-4573-842d-5b6e7ee03892",
	"00000000-0000-0000-0000-000000000000",
	"1ac63887-eac0-4006-b975-3c11632ba3a3");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"1af40ada-713c-4573-842d-5b6e7ee03892",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("1af40ada-713c-4573-842d-5b6e7ee03892",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("96c5d7ff-4c54-40f3-988e-64fc2a7cca10",
	"25e9ee9b-b8b1-47c5-a844-84b516ae295b",
	"1af40ada-713c-4573-842d-5b6e7ee03892");
INSERT INTO GD_GE
	VALUES ("0739a7d5-9ee4-4ca9-890a-8e461ab08ee3",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"07896b70-fe1f-4352-8f73-f2272f8f2498",
	42,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::TCE6: int event in Bool Event Acks to Int Event Acks');
INSERT INTO GD_CON
	VALUES ("0739a7d5-9ee4-4ca9-890a-8e461ab08ee3",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("5d890585-80b8-4c0b-bd64-5a7b33c3d082",
	"0739a7d5-9ee4-4ca9-890a-8e461ab08ee3",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"5d890585-80b8-4c0b-bd64-5a7b33c3d082");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"5d890585-80b8-4c0b-bd64-5a7b33c3d082",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("5d890585-80b8-4c0b-bd64-5a7b33c3d082",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("fa4c3ffb-7bf8-4498-a60a-32bb079d77e1",
	"0739a7d5-9ee4-4ca9-890a-8e461ab08ee3",
	3,
	-12.000000,
	45.000000);
INSERT INTO DIM_ND
	VALUES (135.000000,
	22.000000,
	"fa4c3ffb-7bf8-4498-a60a-32bb079d77e1");
INSERT INTO DIM_GE
	VALUES (2995.000000,
	1809.000000,
	"fa4c3ffb-7bf8-4498-a60a-32bb079d77e1",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("fa4c3ffb-7bf8-4498-a60a-32bb079d77e1",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("d6bce1df-4c79-4617-b207-65e68b14e631",
	"0739a7d5-9ee4-4ca9-890a-8e461ab08ee3",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"d6bce1df-4c79-4617-b207-65e68b14e631");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"d6bce1df-4c79-4617-b207-65e68b14e631",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("d6bce1df-4c79-4617-b207-65e68b14e631",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("f124c5eb-d491-43ad-b4ef-bed3d2916a8c",
	"0739a7d5-9ee4-4ca9-890a-8e461ab08ee3",
	"00000000-0000-0000-0000-000000000000",
	"976f7d73-14f4-4b6f-a45d-fa85d70959a3",
	"ac198ee7-425e-4084-9269-40ec2ae9783e");
INSERT INTO DIM_WAY
	VALUES ("976f7d73-14f4-4b6f-a45d-fa85d70959a3",
	2992.000000,
	1792.000000,
	"0739a7d5-9ee4-4ca9-890a-8e461ab08ee3",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("ac198ee7-425e-4084-9269-40ec2ae9783e",
	3152.000000,
	1792.000000,
	"0739a7d5-9ee4-4ca9-890a-8e461ab08ee3",
	"00000000-0000-0000-0000-000000000000",
	"976f7d73-14f4-4b6f-a45d-fa85d70959a3");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"0739a7d5-9ee4-4ca9-890a-8e461ab08ee3",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("0739a7d5-9ee4-4ca9-890a-8e461ab08ee3",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("6bf452a2-9721-4181-8fb6-856a868b5a7e",
	"b72d95ac-637f-46d1-ad81-b6a78580e170",
	"0739a7d5-9ee4-4ca9-890a-8e461ab08ee3");
INSERT INTO GD_GE
	VALUES ("29ad67a2-c0f7-4bd4-8e61-f16649756aa9",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"44a281f1-bc47-4c03-9ae3-8a728b870b18",
	42,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::TCE5: bool event in More Expressions within Parms to Bool Event Acks');
INSERT INTO GD_CON
	VALUES ("29ad67a2-c0f7-4bd4-8e61-f16649756aa9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("9c885dc2-a4bb-4264-8cda-72e8422cb3e0",
	"29ad67a2-c0f7-4bd4-8e61-f16649756aa9",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"9c885dc2-a4bb-4264-8cda-72e8422cb3e0");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"9c885dc2-a4bb-4264-8cda-72e8422cb3e0",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("9c885dc2-a4bb-4264-8cda-72e8422cb3e0",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("711d8f02-72ec-4f55-b020-4f35b02d9fa1",
	"29ad67a2-c0f7-4bd4-8e61-f16649756aa9",
	3,
	171.000000,
	33.000000);
INSERT INTO DIM_ND
	VALUES (154.000000,
	22.000000,
	"711d8f02-72ec-4f55-b020-4f35b02d9fa1");
INSERT INTO DIM_GE
	VALUES (2955.000000,
	1912.000000,
	"711d8f02-72ec-4f55-b020-4f35b02d9fa1",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("711d8f02-72ec-4f55-b020-4f35b02d9fa1",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("a6a0a8bd-1b98-4153-84e0-4a45a0a2fdbe",
	"29ad67a2-c0f7-4bd4-8e61-f16649756aa9",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"a6a0a8bd-1b98-4153-84e0-4a45a0a2fdbe");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"a6a0a8bd-1b98-4153-84e0-4a45a0a2fdbe",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("a6a0a8bd-1b98-4153-84e0-4a45a0a2fdbe",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("41d2d03b-625d-4754-9d55-6553349f53b3",
	"29ad67a2-c0f7-4bd4-8e61-f16649756aa9",
	"00000000-0000-0000-0000-000000000000",
	"9d0c8ad1-5ad3-4762-888a-0e36f1447c1e",
	"896dac3e-79fd-473a-be38-38ae0ebf24e0");
INSERT INTO DIM_WAY
	VALUES ("9d0c8ad1-5ad3-4762-888a-0e36f1447c1e",
	2944.000000,
	1968.000000,
	"29ad67a2-c0f7-4bd4-8e61-f16649756aa9",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("896dac3e-79fd-473a-be38-38ae0ebf24e0",
	2944.000000,
	1808.000000,
	"29ad67a2-c0f7-4bd4-8e61-f16649756aa9",
	"00000000-0000-0000-0000-000000000000",
	"9d0c8ad1-5ad3-4762-888a-0e36f1447c1e");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"29ad67a2-c0f7-4bd4-8e61-f16649756aa9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("29ad67a2-c0f7-4bd4-8e61-f16649756aa9",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("1f76c9f1-7bcd-42b9-9939-6880fc99ca87",
	"1bac4d9f-fe79-4247-a10a-c4374628e34c",
	"29ad67a2-c0f7-4bd4-8e61-f16649756aa9");
INSERT INTO GD_GE
	VALUES ("96cf66e0-d40a-4a57-abd1-c8f88fd84917",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"399f137f-398e-4bee-8807-eee50e71dd98",
	42,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::TCE6: int event in More Expressions within Parms to Int Event Acks');
INSERT INTO GD_CON
	VALUES ("96cf66e0-d40a-4a57-abd1-c8f88fd84917",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("633f7c24-7bd6-4332-865f-7f9a589b63bb",
	"96cf66e0-d40a-4a57-abd1-c8f88fd84917",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"633f7c24-7bd6-4332-865f-7f9a589b63bb");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"633f7c24-7bd6-4332-865f-7f9a589b63bb",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("633f7c24-7bd6-4332-865f-7f9a589b63bb",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("f2f088d5-4326-4d59-89f7-f6215c6e65b9",
	"96cf66e0-d40a-4a57-abd1-c8f88fd84917",
	3,
	-6.000000,
	140.000000);
INSERT INTO DIM_ND
	VALUES (135.000000,
	22.000000,
	"f2f088d5-4326-4d59-89f7-f6215c6e65b9");
INSERT INTO DIM_GE
	VALUES (3037.000000,
	2059.000000,
	"f2f088d5-4326-4d59-89f7-f6215c6e65b9",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("f2f088d5-4326-4d59-89f7-f6215c6e65b9",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("228a9208-8561-4bc0-8313-f0dafadff853",
	"96cf66e0-d40a-4a57-abd1-c8f88fd84917",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"228a9208-8561-4bc0-8313-f0dafadff853");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"228a9208-8561-4bc0-8313-f0dafadff853",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("228a9208-8561-4bc0-8313-f0dafadff853",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("a652bdc4-eccf-4a96-a00d-31bc6569171f",
	"96cf66e0-d40a-4a57-abd1-c8f88fd84917",
	"00000000-0000-0000-0000-000000000000",
	"c0cda385-6c9c-49ae-8839-97beadb40ef1",
	"43f433aa-ddb7-4e30-9fd2-d5373c9b2f8c");
INSERT INTO GD_LS
	VALUES ("9a4f63cc-e73e-4c38-b1a9-8b899c5b3428",
	"96cf66e0-d40a-4a57-abd1-c8f88fd84917",
	"a652bdc4-eccf-4a96-a00d-31bc6569171f",
	"43f433aa-ddb7-4e30-9fd2-d5373c9b2f8c",
	"55882ea6-ec30-4c2d-a1a6-934410046b78");
INSERT INTO DIM_WAY
	VALUES ("c0cda385-6c9c-49ae-8839-97beadb40ef1",
	2976.000000,
	2048.000000,
	"96cf66e0-d40a-4a57-abd1-c8f88fd84917",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("43f433aa-ddb7-4e30-9fd2-d5373c9b2f8c",
	3184.000000,
	2048.000000,
	"96cf66e0-d40a-4a57-abd1-c8f88fd84917",
	"00000000-0000-0000-0000-000000000000",
	"c0cda385-6c9c-49ae-8839-97beadb40ef1");
INSERT INTO DIM_WAY
	VALUES ("55882ea6-ec30-4c2d-a1a6-934410046b78",
	3184.000000,
	1808.000000,
	"96cf66e0-d40a-4a57-abd1-c8f88fd84917",
	"00000000-0000-0000-0000-000000000000",
	"43f433aa-ddb7-4e30-9fd2-d5373c9b2f8c");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"96cf66e0-d40a-4a57-abd1-c8f88fd84917",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("96cf66e0-d40a-4a57-abd1-c8f88fd84917",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("2ca22200-b05c-4379-9af6-135dc766ca5d",
	"f3d8f79d-c1bf-40fe-8fa2-a302f0cf73ae",
	"96cf66e0-d40a-4a57-abd1-c8f88fd84917");
INSERT INTO GD_GE
	VALUES ("f997c24d-9ca6-4e07-919a-9dd41371e522",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"c455e933-98ec-4553-92d5-f855ce2be31c",
	42,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::TCE4: next test with supp data in Bool Event Acks to Combinine Real and Integer Data Types');
INSERT INTO GD_CON
	VALUES ("f997c24d-9ca6-4e07-919a-9dd41371e522",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("1af8883e-a35f-493f-9471-7c297cd49189",
	"f997c24d-9ca6-4e07-919a-9dd41371e522",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"1af8883e-a35f-493f-9471-7c297cd49189");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"1af8883e-a35f-493f-9471-7c297cd49189",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("1af8883e-a35f-493f-9471-7c297cd49189",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("8867bd95-289d-4922-be3e-171212366c94",
	"f997c24d-9ca6-4e07-919a-9dd41371e522",
	3,
	-12.000000,
	-7.000000);
INSERT INTO DIM_ND
	VALUES (181.000000,
	40.000000,
	"8867bd95-289d-4922-be3e-171212366c94");
INSERT INTO DIM_GE
	VALUES (2588.000000,
	1675.000000,
	"8867bd95-289d-4922-be3e-171212366c94",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("8867bd95-289d-4922-be3e-171212366c94",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("b38841f0-a227-4c7d-8f6d-2a1dc22780be",
	"f997c24d-9ca6-4e07-919a-9dd41371e522",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"b38841f0-a227-4c7d-8f6d-2a1dc22780be");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"b38841f0-a227-4c7d-8f6d-2a1dc22780be",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("b38841f0-a227-4c7d-8f6d-2a1dc22780be",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("707a8154-9d10-45c9-802c-d1178aceab88",
	"f997c24d-9ca6-4e07-919a-9dd41371e522",
	"00000000-0000-0000-0000-000000000000",
	"c41af00b-d71c-428c-b377-b274117b1a21",
	"9c0489ed-7a80-4e20-8c4a-0ad77ea194e9");
INSERT INTO DIM_WAY
	VALUES ("c41af00b-d71c-428c-b377-b274117b1a21",
	2832.000000,
	1728.000000,
	"f997c24d-9ca6-4e07-919a-9dd41371e522",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("9c0489ed-7a80-4e20-8c4a-0ad77ea194e9",
	2544.000000,
	1728.000000,
	"f997c24d-9ca6-4e07-919a-9dd41371e522",
	"00000000-0000-0000-0000-000000000000",
	"c41af00b-d71c-428c-b377-b274117b1a21");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"f997c24d-9ca6-4e07-919a-9dd41371e522",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("f997c24d-9ca6-4e07-919a-9dd41371e522",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("f6d44134-5d80-4217-8a7c-1b259f97e52c",
	"3d7fd4d4-fc25-4f21-9c9d-36c14a07df76",
	"f997c24d-9ca6-4e07-919a-9dd41371e522");
INSERT INTO GD_GE
	VALUES ("98444e10-5867-4cdd-a1cb-19703853496f",
	"4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	"68bac378-5491-4d48-a114-8a37181cfbae",
	42,
	0,
	'ex2::Test Compound Expressions::Test Compound Expressions::TCE4: next test with supp data in Int Event Acks to Combinine Real and Integer Data Types');
INSERT INTO GD_CON
	VALUES ("98444e10-5867-4cdd-a1cb-19703853496f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("61325f50-d66f-47dd-b3d1-572ae58b97e5",
	"98444e10-5867-4cdd-a1cb-19703853496f",
	1,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"61325f50-d66f-47dd-b3d1-572ae58b97e5");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"61325f50-d66f-47dd-b3d1-572ae58b97e5",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("61325f50-d66f-47dd-b3d1-572ae58b97e5",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("5d419fd6-5ad1-4de6-8aca-e9b58bafa02f",
	"98444e10-5867-4cdd-a1cb-19703853496f",
	3,
	-195.000000,
	-7.000000);
INSERT INTO DIM_ND
	VALUES (181.000000,
	40.000000,
	"5d419fd6-5ad1-4de6-8aca-e9b58bafa02f");
INSERT INTO DIM_GE
	VALUES (2597.000000,
	1499.000000,
	"5d419fd6-5ad1-4de6-8aca-e9b58bafa02f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("5d419fd6-5ad1-4de6-8aca-e9b58bafa02f",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_CTXT
	VALUES ("aba42ed4-f6f4-4b45-ace4-7e7cd1a86d44",
	"98444e10-5867-4cdd-a1cb-19703853496f",
	2,
	0.000000,
	0.000000);
INSERT INTO DIM_ND
	VALUES (0.000000,
	0.000000,
	"aba42ed4-f6f4-4b45-ace4-7e7cd1a86d44");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"aba42ed4-f6f4-4b45-ace4-7e7cd1a86d44",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("aba42ed4-f6f4-4b45-ace4-7e7cd1a86d44",
	0,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO GD_LS
	VALUES ("2f5ad00a-0b97-45c7-ae01-de60776fec26",
	"98444e10-5867-4cdd-a1cb-19703853496f",
	"00000000-0000-0000-0000-000000000000",
	"c2e91c41-f932-4ad1-85c6-d5e0e6c68c85",
	"85b818e1-9b63-4b00-b529-0ffa2f25f88b");
INSERT INTO GD_LS
	VALUES ("4cb15fc9-299d-43d6-8dcb-b4f522cd018c",
	"98444e10-5867-4cdd-a1cb-19703853496f",
	"2f5ad00a-0b97-45c7-ae01-de60776fec26",
	"85b818e1-9b63-4b00-b529-0ffa2f25f88b",
	"d737a1c2-61b0-44a6-9434-f99dac7cd620");
INSERT INTO DIM_WAY
	VALUES ("c2e91c41-f932-4ad1-85c6-d5e0e6c68c85",
	3216.000000,
	1712.000000,
	"98444e10-5867-4cdd-a1cb-19703853496f",
	"00000000-0000-0000-0000-000000000000",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_WAY
	VALUES ("85b818e1-9b63-4b00-b529-0ffa2f25f88b",
	3216.000000,
	1552.000000,
	"98444e10-5867-4cdd-a1cb-19703853496f",
	"00000000-0000-0000-0000-000000000000",
	"c2e91c41-f932-4ad1-85c6-d5e0e6c68c85");
INSERT INTO DIM_WAY
	VALUES ("d737a1c2-61b0-44a6-9434-f99dac7cd620",
	2544.000000,
	1552.000000,
	"98444e10-5867-4cdd-a1cb-19703853496f",
	"00000000-0000-0000-0000-000000000000",
	"85b818e1-9b63-4b00-b529-0ffa2f25f88b");
INSERT INTO DIM_GE
	VALUES (0.000000,
	0.000000,
	"98444e10-5867-4cdd-a1cb-19703853496f",
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ELE
	VALUES ("98444e10-5867-4cdd-a1cb-19703853496f",
	1,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO DIM_ED
	VALUES ("e88ecd3d-1326-452e-8ce9-2d94376efebb",
	"4dedc225-1524-433d-aa20-6d110c24df29",
	"98444e10-5867-4cdd-a1cb-19703853496f");
INSERT INTO DIM_DIA
	VALUES ("4c4b7ca3-e1f3-4261-8e58-0ee868d7c4d8",
	'',
	0.458678,
	1595.000000,
	1105.000000,
	"00000000-0000-0000-0000-000000000000");
INSERT INTO O_OBJ_PROXY
	VALUES ("87f2fd21-bd97-421a-953a-3f31a6f4cad1",
	'Test Compound Expressions',
	2,
	'TCE',
	'',
	"00000000-0000-0000-0000-000000000000",
	'../Test Compound Expressions.xtuml');
